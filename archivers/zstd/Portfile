# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim: fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0

github.setup        facebook zstd 1.3.8 v
categories          archivers devel
platforms           darwin
license             {BSD GPL-2}

maintainers         {sean @seanfarley} openmaintainer

description         Zstandard - Fast real-time compression algorithm
long_description    Zstd, short for Zstandard, is a fast lossless compression \
                    algorithm, targeting real-time compression scenarios at \
                    zlib-level and better compression ratios.

# checksums           rmd160  c38a816a365566ebe86be35113e31830c4532b09 \
#                     sha256  0012ee7b1f385a34cae12afe09c74b1c3f90afd00fadfcff3092d7bbc02b840c
# #                     size    1875516
checksums           rmd160  bdd8607b5fa2382290e8b17daf6e8e97c6d1840c \
                    sha256  293fa004dfacfbe90b42660c474920ff27093e3fb6c99f7b76e6083b21d6d48e
#                     size    1862954

post-patch {
    reinplace -W ${worksrcpath} "s/-Wvla //g" lib/Makefile programs/Makefile tests/Makefile tests/fuzz/Makefile
}

use_configure       no

variant universal {}

build.target        allmost

build.env-append    CC=${configure.cc} \
                    "CFLAGS=${configure.cflags} [get_canonical_archflags cc] -DZSTD_MULTITHREAD=1 -pthread" \
                    CXX=${configure.cxx} \
                    "CXXFLAGS=${configure.cxxflags} [get_canonical_archflags cxx] -DZSTD_MULTITHREAD=1 -pthread" \
                    "LDFLAGS=${configure.ldflags} ${configure.optflags} [get_canonical_archflags ld] -pthread" \
                    PREFIX=${prefix}

if {[string match *clang++-mp* ${configure.cxx}]} {
    build.env-append \
                    "AR=[string map {"clang++" "llvm-ar"} ${configure.cxx}]" \
                    "NM=[string map {"clang++" "llvm-nm"} ${configure.cxx}]" \
                    "RANLIB=[string map {"clang++" "llvm-ranlib"} ${configure.cxx}]"
} elseif {[string match *clang-mp* ${configure.cc}]} {
    build.env-append \
                    "AR=[string map {"clang" "llvm-ar"} ${configure.cc}]" \
                    "NM=[string map {"clang" "llvm-nm"} ${configure.cc}]" \
                    "RANLIB=[string map {"clang" "llvm-ranlib"} ${configure.cc}]"
}

destroot.env-append {*}${build.env}
