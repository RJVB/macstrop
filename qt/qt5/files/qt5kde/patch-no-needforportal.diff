diff --git src/platformsupport/services/genericunix/orig.qgenericunixservices.cpp src/platformsupport/services/genericunix/qgenericunixservices.cpp
index 219c58e..061fa7e 100644
--- src/platformsupport/services/genericunix/orig.qgenericunixservices.cpp
+++ src/platformsupport/services/genericunix/qgenericunixservices.cpp
@@ -309,25 +309,25 @@ QByteArray QGenericUnixServices::desktopEnvironment() const
 bool QGenericUnixServices::openUrl(const QUrl &url)
 {
     if (url.scheme() == QLatin1String("mailto")) {
-#if QT_CONFIG(dbus)
-        if (checkNeedPortalSupport()) {
-            QDBusError error = xdgDesktopPortalSendEmail(url);
-            if (isPortalReturnPermanent(error))
-                return !error.isValid();
-
-            // service not running, fall back
-        }
-#endif
+// #if QT_CONFIG(dbus)
+//         if (checkNeedPortalSupport()) {
+//             QDBusError error = xdgDesktopPortalSendEmail(url);
+//             if (isPortalReturnPermanent(error))
+//                 return !error.isValid();
+// 
+//             // service not running, fall back
+//         }
+// #endif
         return openDocument(url);
     }
 
-#if QT_CONFIG(dbus)
-    if (checkNeedPortalSupport()) {
-        QDBusError error = xdgDesktopPortalOpenUrl(url);
-        if (isPortalReturnPermanent(error))
-            return !error.isValid();
-    }
-#endif
+// #if QT_CONFIG(dbus)
+//     if (checkNeedPortalSupport()) {
+//         QDBusError error = xdgDesktopPortalOpenUrl(url);
+//         if (isPortalReturnPermanent(error))
+//             return !error.isValid();
+//     }
+// #endif
 
     if (m_webBrowser.isEmpty() && !detectWebBrowser(desktopEnvironment(), true, &m_webBrowser)) {
         qWarning("Unable to detect a web browser to launch '%s'", qPrintable(url.toString()));
@@ -338,13 +338,13 @@ bool QGenericUnixServices::openUrl(const QUrl &url)
 
 bool QGenericUnixServices::openDocument(const QUrl &url)
 {
-#if QT_CONFIG(dbus)
-    if (checkNeedPortalSupport()) {
-        QDBusError error = xdgDesktopPortalOpenFile(url);
-        if (isPortalReturnPermanent(error))
-            return !error.isValid();
-    }
-#endif
+// #if QT_CONFIG(dbus)
+//     if (checkNeedPortalSupport()) {
+//         QDBusError error = xdgDesktopPortalOpenFile(url);
+//         if (isPortalReturnPermanent(error))
+//             return !error.isValid();
+//     }
+// #endif
 
     if (m_documentLauncher.isEmpty() && !detectWebBrowser(desktopEnvironment(), false, &m_documentLauncher)) {
         qWarning("Unable to detect a launcher for '%s'", qPrintable(url.toString()));
