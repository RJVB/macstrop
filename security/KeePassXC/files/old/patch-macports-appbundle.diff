diff --git CMakeLists.txt CMakeLists.txt
index 074c7093..22c4cbe5 100644
--- CMakeLists.txt
+++ CMakeLists.txt
@@ -45,7 +45,12 @@ option(WITH_GUI_TESTS "Enable building of GUI tests" OFF)
 option(WITH_DEV_BUILD "Use only for development. Disables/warns about deprecated methods." OFF)
 option(WITH_ASAN "Enable address sanitizer checks (Linux / macOS only)" OFF)
 option(WITH_COVERAGE "Use to build with coverage tests (GCC only)." OFF)
-option(WITH_APP_BUNDLE "Enable Application Bundle for macOS" ON)
+option(WITH_APP_BUNDLE "Enable Application Bundle for Mac" ON)
+if(NOT WITH_APP_BUNDLE)
+  option(WITH_STANDALONE_APP_BUNDLE "Mac application bundles are self-contained and relocatable" OFF)
+else()
+  option(WITH_STANDALONE_APP_BUNDLE "Mac application bundles are self-contained and relocatable" ON)
+endif()
 option(WITH_CCACHE "Use ccache for build" OFF)
 
 set(WITH_XC_ALL OFF CACHE BOOL "Build in all available plugins")
@@ -57,7 +62,7 @@ option(WITH_XC_YUBIKEY "Include YubiKey support." OFF)
 option(WITH_XC_SSHAGENT "Include SSH agent support." OFF)
 option(WITH_XC_KEESHARE "Sharing integration with KeeShare" OFF)
 option(WITH_XC_UPDATECHECK "Include automatic update checks; disable for controlled distributions" ON)
-if(UNIX AND NOT APPLE)
+if(UNIX)
     option(WITH_XC_FDOSECRETS "Implement freedesktop.org Secret Storage Spec server side API." OFF)
 endif()
 option(WITH_XC_DOCS "Enable building of documentation" ON)
@@ -291,6 +296,9 @@ endif()
 
 if(WITH_APP_BUNDLE)
     add_definitions(-DWITH_APP_BUNDLE)
+    if(WITH_STANDALONE_APP_BUNDLE)
+      add_definitions(-DWITH_STANDALONE_APP_BUNDLE)
+    endif()
 endif()
 
 add_gcc_compiler_flags("-fno-common")
@@ -437,10 +445,10 @@ if(WIN32)
     set(BIN_INSTALL_DIR ".")
     set(PLUGIN_INSTALL_DIR ".")
     set(DATA_INSTALL_DIR "share")
-elseif(APPLE AND WITH_APP_BUNDLE)
+elseif(APPLE AND NOT WITH_STANDALONE_APP_BUNDLE)
+    set(CMAKE_INSTALL_MANDIR "@PREFIX@/share/man")
     set(BUNDLE_INSTALL_DIR "${PROGNAME}.app/Contents")
-    set(CMAKE_INSTALL_MANDIR "${BUNDLE_INSTALL_DIR}/Resources/man")
-    set(CLI_INSTALL_DIR "${BUNDLE_INSTALL_DIR}/MacOS")
+    set(CLI_INSTALL_DIR    "@PREFIX@/bin")
     set(PROXY_INSTALL_DIR "${BUNDLE_INSTALL_DIR}/MacOS")
     set(BIN_INSTALL_DIR "${BUNDLE_INSTALL_DIR}/MacOS")
     set(PLUGIN_INSTALL_DIR "${BUNDLE_INSTALL_DIR}/PlugIns")
@@ -529,8 +538,8 @@ set(CMAKE_AUTORCC ON)
 
 if(APPLE)
     set(CMAKE_MACOSX_RPATH TRUE)
-    find_program(MACDEPLOYQT_EXE macdeployqt HINTS ${Qt5_PREFIX}/bin ${Qt5_PREFIX}/tools/qt5/bin ENV PATH)
-    if(NOT MACDEPLOYQT_EXE)
+    find_program(MACDEPLOYQT_EXE macdeployqt HINTS @QT_BINS_DIR@ ENV PATH)
+    if(NOT MACDEPLOYQT_EXE AND WITH_STANDALONE_APP_BUNDLE)
         message(FATAL_ERROR "macdeployqt is required to build on macOS")
     endif()
     message(STATUS "Using macdeployqt: ${MACDEPLOYQT_EXE}")
diff --git src/CMakeLists.txt src/CMakeLists.txt
index b8099eed..41b8839a 100644
--- src/CMakeLists.txt
+++ src/CMakeLists.txt
@@ -240,7 +240,7 @@ add_feature_info(SSHAgent WITH_XC_SSHAGENT "SSH agent integration compatible wit
 add_feature_info(KeeShare WITH_XC_KEESHARE "Sharing integration with KeeShare")
 add_feature_info(YubiKey WITH_XC_YUBIKEY "YubiKey HMAC-SHA1 challenge-response")
 add_feature_info(UpdateCheck WITH_XC_UPDATECHECK "Automatic update checking")
-if(UNIX AND NOT APPLE)
+if(UNIX)
     add_feature_info(FdoSecrets WITH_XC_FDOSECRETS "Implement freedesktop.org Secret Storage Spec server side API.")
 endif()
 
@@ -406,15 +406,17 @@ if(APPLE AND WITH_APP_BUNDLE)
                 DESTINATION "${DATA_INSTALL_DIR}")
     endif()
 
-    set(CPACK_GENERATOR "DragNDrop")
-    set(CPACK_DMG_FORMAT "UDBZ")
-    set(CPACK_DMG_DS_STORE "${CMAKE_SOURCE_DIR}/share/macosx/DS_Store.in")
-    set(CPACK_DMG_BACKGROUND_IMAGE "${CMAKE_SOURCE_DIR}/share/macosx/background.tiff")
-    set(CPACK_DMG_VOLUME_NAME "${PROGNAME}")
-    set(CPACK_SYSTEM_NAME "OSX")
-    set(CPACK_STRIP_FILES ON)
-    set(CPACK_PACKAGE_FILE_NAME "${PROGNAME}-${KEEPASSXC_VERSION}")
-    include(CPack)
+    if(WITH_STANDALONE_APP_BUNDLE)
+        set(CPACK_GENERATOR "DragNDrop")
+        set(CPACK_DMG_FORMAT "UDBZ")
+        set(CPACK_DMG_DS_STORE "${CMAKE_SOURCE_DIR}/share/macosx/DS_Store.in")
+        set(CPACK_DMG_BACKGROUND_IMAGE "${CMAKE_SOURCE_DIR}/share/macosx/background.tiff")
+        set(CPACK_DMG_VOLUME_NAME "${PROGNAME}")
+        set(CPACK_SYSTEM_NAME "OSX")
+        set(CPACK_STRIP_FILES ON)
+        set(CPACK_PACKAGE_FILE_NAME "${PROGNAME}-${KEEPASSXC_VERSION}")
+        include(CPack)
+    endif()
 endif()
 
 install(TARGETS ${PROGNAME}
diff --git src/autotype/mac/CMakeLists.txt src/autotype/mac/CMakeLists.txt
index e0df901f..f8afca07 100644
--- src/autotype/mac/CMakeLists.txt
+++ src/autotype/mac/CMakeLists.txt
@@ -7,7 +7,7 @@ target_link_libraries(keepassxc-autotype-cocoa ${PROGNAME} Qt5::Core Qt5::Widget
 install(TARGETS keepassxc-autotype-cocoa
         LIBRARY DESTINATION ${PLUGIN_INSTALL_DIR} COMPONENT Runtime)
 
-if(WITH_APP_BUNDLE)
+if(WITH_STANDALONE_APP_BUNDLE)
     add_custom_command(TARGET keepassxc-autotype-cocoa
             POST_BUILD
             COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/libkeepassxc-autotype-cocoa.so ${PLUGIN_INSTALL_DIR}/libkeepassxc-autotype-cocoa.so
diff --git src/cli/CMakeLists.txt src/cli/CMakeLists.txt
index a3852c80..b7b0d448 100644
--- src/cli/CMakeLists.txt
+++ src/cli/CMakeLists.txt
@@ -73,7 +73,7 @@ if(WIN32)
 #            COMPONENT Runtime)
 endif()
 
-if(APPLE AND WITH_APP_BUNDLE)
+if(APPLE AND WITH_STANDALONE_APP_BUNDLE)
     set(CLI_APP_DIR "${CMAKE_BINARY_DIR}/src/${CLI_INSTALL_DIR}")
 
     add_custom_command(TARGET keepassxc-cli
diff --git src/core/Resources.cpp src/core/Resources.cpp
index 0cad907f..8418fa35 100644
--- src/core/Resources.cpp
+++ src/core/Resources.cpp
@@ -49,7 +49,7 @@ QString Resources::pluginPath(const QString& name) const
     // for TestAutoType
     pluginPaths << QCoreApplication::applicationDirPath() + "/../src/autotype/test";
 
-#if defined(Q_OS_MACOS) && defined(WITH_APP_BUNDLE)
+#if defined(Q_OS_MACOS) && defined(WITH_STANDALONE_APP_BUNDLE)
     pluginPaths << QCoreApplication::applicationDirPath() + "/../PlugIns";
 #endif
 
@@ -101,10 +101,10 @@ QString Resources::userWordlistPath(const QString& name) const
 Resources::Resources()
 {
     const QString appDirPath = QCoreApplication::applicationDirPath();
-#if defined(Q_OS_UNIX) && !(defined(Q_OS_MACOS) && defined(WITH_APP_BUNDLE))
+#if defined(Q_OS_UNIX) && !(defined(Q_OS_MACOS) && defined(WITH_STANDALONE_APP_BUNDLE))
     trySetResourceDir(KEEPASSX_DATA_DIR) || trySetResourceDir(QString("%1/../%2").arg(appDirPath, KEEPASSX_DATA_DIR))
         || trySetResourceDir(QString("%1/%2").arg(KEEPASSX_PREFIX_DIR, KEEPASSX_DATA_DIR));
-#elif defined(Q_OS_MACOS) && defined(WITH_APP_BUNDLE)
+#elif defined(Q_OS_MACOS) && defined(WITH_STANDALONE_APP_BUNDLE)
     trySetResourceDir(appDirPath + QStringLiteral("/../Resources"));
 #elif defined(Q_OS_WIN)
     trySetResourceDir(appDirPath + QStringLiteral("/share"));
diff --git src/post_install/CMakeLists.txt src/post_install/CMakeLists.txt
index 1adc4740..28c86f4e 100644
--- src/post_install/CMakeLists.txt
+++ src/post_install/CMakeLists.txt
@@ -1,7 +1,7 @@
 # The install commands in this subdirectory will be executed after all the install commands in the
 # current scope are ran. It is required for correct functioning of macdeployqt.
 
-if(APPLE AND WITH_APP_BUNDLE)
+if(APPLE AND WITH_STANDALONE_APP_BUNDLE)
     # Run macdeloyqt on the main app and any extra binaries and plugins as specified by the
     # _MACDEPLOYQT_EXTRA_BINARIES global property.
     # All install(TARGETS) calls should have already been called.
diff --git src/proxy/CMakeLists.txt src/proxy/CMakeLists.txt
index be756672..06664113 100755
--- src/proxy/CMakeLists.txt
+++ src/proxy/CMakeLists.txt
@@ -29,7 +29,7 @@ if(WITH_XC_BROWSER)
             BUNDLE DESTINATION . COMPONENT Runtime
             RUNTIME DESTINATION ${PROXY_INSTALL_DIR} COMPONENT Runtime)
 
-    if(APPLE AND WITH_APP_BUNDLE)
+    if(APPLE AND WITH_STANDALONE_APP_BUNDLE)
         set(PROXY_APP_DIR "${CMAKE_BINARY_DIR}/src/${PROXY_INSTALL_DIR}")
         add_custom_command(TARGET keepassxc-proxy
                 POST_BUILD
