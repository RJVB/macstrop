diff --git deps/cares/config/linux/orig.ares_config.h deps/cares/config/linux/ares_config.h
index 3cb135a..7b4a95c 100644
--- deps/cares/config/linux/orig.ares_config.h
+++ deps/cares/config/linux/ares_config.h
@@ -329,7 +329,7 @@
 #define HAVE_SYS_PARAM_H 1
 
 /* Define to 1 if you have the <sys/random.h> header file. */
-#define HAVE_SYS_RANDOM_H 1
+/* #undef HAVE_SYS_RANDOM_H */
 
 /* Define to 1 if you have the <sys/select.h> header file. */
 #define HAVE_SYS_SELECT_H 1
@@ -570,4 +570,4 @@
 /* #undef _LARGE_FILES */
 
 /* Define to `unsigned int' if <sys/types.h> does not define. */
-/* #undef size_t */
\ No newline at end of file
+/* #undef size_t */
diff --git deps/cares/src/lib/orig.ares_rand.c deps/cares/src/lib/ares_rand.c
index a7a74c9..e6535ea 100644
--- deps/cares/src/lib/orig.ares_rand.c
+++ deps/cares/src/lib/ares_rand.c
@@ -37,6 +37,16 @@
 
 #ifdef HAVE_SYS_RANDOM_H
 #  include <sys/random.h>
+#elif defined(linux)
+// if the header is missing on Linux, the kernel wrapper function probably
+// isn't in libc yet. Create one ourselves:
+#include <sys/syscall.h>
+
+int getrandom(void *buf, size_t l, unsigned int o)
+{
+	return syscall(__NR_getrandom, buf, l, o);
+}
+
 #endif
 
 
