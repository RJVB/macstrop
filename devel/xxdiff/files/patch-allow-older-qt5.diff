diff --git src/help.cpp src/help.cpp
index de4dc41..7a2cc7e 100644
--- src/help.cpp
+++ src/help.cpp
@@ -166,7 +166,7 @@ QString formatOptionsPlain(
             XX_ASSERT( ( startw + word.length() + 1 ) < width ); 
 
             if ( ( cch + word.length() + 1 ) >= width ) {
-               oss << Qt::endl;
+               oss << endl;
                for ( unsigned int iii = 0; iii < startw; ++iii ) { oss << " "; }
                cch = startw;
             }
@@ -174,13 +174,13 @@ QString formatOptionsPlain(
             cch += word.length() + 1;
          }
       }
-      oss << Qt::endl;
+      oss << endl;
 
       // Add an extra line between the options, there are so much that it will
       // make it clearer.
-      oss << Qt::endl;
+      oss << endl;
    }
-   oss << Qt::endl;
+   oss << endl;
    return outs;
 }
 
@@ -195,9 +195,9 @@ QString formatOptionsQml(
    QString outs;
    QTextStream oss( &outs );
 
-   oss << "<table cellpadding=5 width=\"100%\">" << Qt::endl << Qt::endl;
+   oss << "<table cellpadding=5 width=\"100%\">" << endl << endl;
    for ( int ii = 0; ii < nbOptions; ++ii ) {
-      oss << "<tr>" << Qt::endl;
+      oss << "<tr>" << endl;
 
       // Output option name.
       oss << "<td width=\"30%\"><tt>";
@@ -208,18 +208,18 @@ QString formatOptionsQml(
       if ( options[ii]._has_arg ) {
          oss << " &lt;arg&gt;";
       }
-      oss << "</tt></td>" << Qt::endl;
+      oss << "</tt></td>" << endl;
 
 
       // Output formatted help.
-      oss << "<td align=left>" << Qt::endl;
-      oss << options[ii]._help << Qt::endl;
-      oss << "</td>" << Qt::endl;
+      oss << "<td align=left>" << endl;
+      oss << options[ii]._help << endl;
+      oss << "</td>" << endl;
 
-      oss << "</tr>" << Qt::endl << Qt::endl;
+      oss << "</tr>" << endl << endl;
    }
-   oss << "</table>" << Qt::endl << Qt::endl;
-   oss << Qt::flush;
+   oss << "</table>" << endl << endl;
+   oss << flush;
    
    return outs;
 }
@@ -393,84 +393,84 @@ QString XxHelp::getUsage( int helpMask, bool plain )
    if ( plain ) {
       QTextStream oss( &usage, QIODevice::WriteOnly | QIODevice::Append );
       oss << "Usage: "
-          << "xxdiff [OPTIONS] file1 file2 [file3]" << Qt::endl
-          << Qt::endl
+          << "xxdiff [OPTIONS] file1 file2 [file3]" << endl
+          << endl
           << "A graphical file and directories comparison and merge tool."
-          << Qt::endl << Qt::endl;
+          << endl << endl;
 
       if ( helpMask & (1 << XxCmdline::OPT_GENERIC) ) {
-         oss << "Generic options:" << Qt::endl;
+         oss << "Generic options:" << endl;
          options =
             XxCmdline::getOptionList( XxCmdline::OPT_GENERIC, nbOptions );
          oss << formatOptionsPlain( options, nbOptions );
       }
 
       if ( helpMask & (1 << XxCmdline::OPT_QT) ) {
-         oss << "Qt options:" << Qt::endl;
+         oss << "Qt options:" << endl;
          options =
             XxCmdline::getOptionList( XxCmdline::OPT_QT, nbOptions );
          oss << formatOptionsPlain( options, nbOptions );
       }
 
       if ( helpMask & (1 << XxCmdline::OPT_DIFF) ) {
-         oss << "GNU diff options (2-files only):" << Qt::endl;
+         oss << "GNU diff options (2-files only):" << endl;
          options =
             XxCmdline::getOptionList( XxCmdline::OPT_DIFF, nbOptions );
          oss << formatOptionsPlain( options, nbOptions );
-         oss << Qt::endl;
+         oss << endl;
       }
 
       if ( helpMask & (1 << XxCmdline::OPT_XXDIFF) ) {
-         oss << "Options:" << Qt::endl;
+         oss << "Options:" << endl;
          options =
             XxCmdline::getOptionList( XxCmdline::OPT_XXDIFF, nbOptions );
          oss << formatOptionsPlain( options, nbOptions );
       }
 
       if ( helpMask & (1 << XxCmdline::OPT_DISPLAY) ) {
-         oss << "Display Options:" << Qt::endl;
+         oss << "Display Options:" << endl;
          options =
             XxCmdline::getOptionList( XxCmdline::OPT_DISPLAY, nbOptions );
          oss << formatOptionsPlain( options, nbOptions );
       }
 
-      oss << "Any one specified file can be `-' for stdin." << Qt::endl
+      oss << "Any one specified file can be `-' for stdin." << endl
           << "Filenames can be either 2 directories, 2 files or 3 files."
-          << Qt::endl;
+          << endl;
    }
    else {
       QTextStream oss( &usage, QIODevice::WriteOnly | QIODevice::Append );
       if ( helpMask & (1 << XxCmdline::OPT_GENERIC) ) {
-         oss << "<h4>Generic options</h4>" << Qt::endl;
+         oss << "<h4>Generic options</h4>" << endl;
          options =
             XxCmdline::getOptionList( XxCmdline::OPT_GENERIC, nbOptions );
          oss << formatOptionsQml( options, nbOptions );
       }
 
       if ( helpMask & (1 << XxCmdline::OPT_QT) ) {
-         oss << "<h4>Qt options</h4>" << Qt::endl;
+         oss << "<h4>Qt options</h4>" << endl;
          options =
             XxCmdline::getOptionList( XxCmdline::OPT_QT, nbOptions );
          oss << formatOptionsQml( options, nbOptions );
       }
 
       if ( helpMask & (1 << XxCmdline::OPT_DIFF) ) {
-         oss << "<h4>GNU diff options (2-files only)</h4>" << Qt::endl;
+         oss << "<h4>GNU diff options (2-files only)</h4>" << endl;
          options =
             XxCmdline::getOptionList( XxCmdline::OPT_DIFF, nbOptions );
          oss << formatOptionsQml( options, nbOptions );
-         oss << Qt::endl;
+         oss << endl;
       }
 
       if ( helpMask & (1 << XxCmdline::OPT_XXDIFF) ) {
-         oss << "<h4>Options</h4>" << Qt::endl;
+         oss << "<h4>Options</h4>" << endl;
          options =
             XxCmdline::getOptionList( XxCmdline::OPT_XXDIFF, nbOptions );
          oss << formatOptionsQml( options, nbOptions );
       }
 
       if ( helpMask & (1 << XxCmdline::OPT_DISPLAY) ) {
-         oss << "<h4>Display Options</h4>" << Qt::endl;
+         oss << "<h4>Display Options</h4>" << endl;
          options =
             XxCmdline::getOptionList( XxCmdline::OPT_DISPLAY, nbOptions );
          oss << formatOptionsQml( options, nbOptions );
@@ -565,13 +565,13 @@ QDialog* XxHelp::getAboutDialog( QWidget* parent )
    
    QString text;
    QTextStream oss( &text );
-   oss << xx_name << Qt::endl 
-       << Qt::endl
-       << xx_description << Qt::endl
-       << Qt::endl
-       << "Author: Martin Blais <blais@furius.ca>" << Qt::endl
-       << xx_homepage << Qt::endl
-       << "Version: " << getVersion() << Qt::endl;
+   oss << xx_name << endl 
+       << endl
+       << xx_description << endl
+       << endl
+       << "Author: Martin Blais <blais@furius.ca>" << endl
+       << xx_homepage << endl
+       << "Version: " << getVersion() << endl;
 
    QDialog* box = new XxAboutDialog( parent, text );
 
@@ -587,9 +587,9 @@ QDialog* XxHelp::getManPageDialog( QWidget* parent )
    QString docstr;
    {
       QTextStream oss( &docstr );
-      oss << "<qt title=\"xxdiff documentation\">" << Qt::endl
-          << getManual() << Qt::endl
-          << "</qt" << Qt::endl;
+      oss << "<qt title=\"xxdiff documentation\">" << endl
+          << getManual() << endl
+          << "</qt" << endl;
    }
    QDialog* box = new XxManPageDialog( parent, docstr );
    return box;
diff --git src/app.cpp src/app.cpp
index 34ab60a..0573083 100644
--- src/app.cpp
+++ src/app.cpp
@@ -2122,7 +2122,7 @@ bool XxApp::processDiff()
       catch ( const XxError& ex ) {
          QString str;
          QTextStream oss( &str );
-         oss << "Error processing single file:" << ex.getMsg() << Qt::endl;
+         oss << "Error processing single file:" << ex.getMsg() << endl;
          outputDiffErrors( str );
          _returnValue = builder->getStatus();
          return false;
@@ -2193,7 +2193,7 @@ bool XxApp::processDiff()
       catch ( const XxError& ex ) {
          QString str;
          QTextStream oss( &str );
-         oss << "Error unmerging file:" << ex.getMsg() << Qt::endl;
+         oss << "Error unmerging file:" << ex.getMsg() << endl;
          outputDiffErrors( str );
          _returnValue = builder->getStatus();
          return false;
@@ -2225,10 +2225,10 @@ bool XxApp::processDiff()
             QTextStream oss( &str );
             oss << "Error executing \""
                 << _resources->getCommand( CMD_DIFF_FILES_2 )
-                << "\" command, could not build diffs:" << Qt::endl
-                << ex.getMsg() << Qt::endl
-                << "Maybe try --text option." << Qt::endl
-                << Qt::endl;
+                << "\" command, could not build diffs:" << endl
+                << ex.getMsg() << endl
+                << "Maybe try --text option." << endl
+                << endl;
             outputDiffErrors( str );
             _returnValue = builder->getStatus();
             return false;
@@ -2255,10 +2255,10 @@ bool XxApp::processDiff()
             QTextStream oss( &str );
             oss << "Error executing \""
                 << _resources->getCommand( CMD_DIFF_FILES_3 )
-                << "\" command, could not build diffs:" << Qt::endl
-                << ex.getMsg() << Qt::endl
-                << "Maybe try --text option." << Qt::endl
-                << Qt::endl;
+                << "\" command, could not build diffs:" << endl
+                << ex.getMsg() << endl
+                << "Maybe try --text option." << endl
+                << endl;
             outputDiffErrors( str );
             _returnValue = builder->getStatus();
             return false;
@@ -2308,8 +2308,8 @@ bool XxApp::processDiff()
          QTextStream oss( &str );
          oss << "Error executing \""
              << dirdiff_command.constData()
-             << "\" command, could not build diffs:" << Qt::endl
-             << ex.getMsg() << Qt::endl;
+             << "\" command, could not build diffs:" << endl
+             << ex.getMsg() << endl;
          outputDiffErrors( str );
          _returnValue = builder->getStatus();
          return false;
@@ -2731,7 +2732,7 @@ void XxApp::editFile( const QString& filename, const int bufIdx )
          QTextStream oss( &text );
          oss << "There has been an error spawning the editor ("
              << executable << "): "
-             << _editProc[bufIdx]->errorString() << Qt::endl;
+             << _editProc[bufIdx]->errorString() << endl;
       }
       new XxSuicideMessageBox(
          _mainWindow, "Error.", text, QMessageBox::Warning
@@ -2807,7 +2808,7 @@ void XxApp::openFile( const XxFno no )
       else {
          QString str;
          QTextStream oss( &str );
-         oss << "Error: could not open file." << Qt::endl;
+         oss << "Error: could not open file." << endl;
          outputDiffErrors( str );
       }
    }
@@ -3137,7 +3138,7 @@ bool XxApp::validateNeedToSave( uint no ) const
       QString text;
       {
          QTextStream oss( &text );
-         oss << "The selections are all on this file." << Qt::endl
+         oss << "The selections are all on this file." << endl
              << "Save anyway?";
       }
 
@@ -3584,7 +3585,7 @@ void XxApp::diffFilesAtCursor()
          {
             QTextStream oss( &text );
             oss << "There has been an error spawning xxdiff: "
-                << xxdiffProc.errorString() << Qt::endl;
+                << xxdiffProc.errorString() << endl;
          }
          new XxSuicideMessageBox(
             _mainWindow, "Error.", text, QMessageBox::Warning
diff --git src/cmdline.cpp src/cmdline.cpp
index 40f535a..364f47e 100644
--- src/cmdline.cpp
+++ src/cmdline.cpp
@@ -372,12 +372,13 @@ XxCmdline::XxCmdline() :
 XxCmdline::~XxCmdline()
 {
    for ( int ii = 0; ii < _nbQtOptions; ++ii ) {
-      assert( _qtOptions[ii] != 0 );
 #ifndef WINDOWS
-      /* We don't know why Windows barfs on the free here.*/
+      if ( _qtOptions[ii] != 0 ) {
+          /* We don't know why Windows barfs on the free here.*/
 
-      // free(), because they are allocated with qstrdup().
-      free( _qtOptions[ii] );
+          // free(), because they are allocated with qstrdup().
+          free( _qtOptions[ii] );
+	 }
 #endif
    }
 }
@@ -487,25 +488,25 @@ bool XxCmdline::parseCommandLine( const int argc, char* const* argv )
          case 'D': {
             QTextStream oss( &_cmdlineResources, QIODevice::WriteOnly | QIODevice::Append );
             oss << XxResParser::getBoolOptName( BOOL_EXIT_ON_SAME )
-                << ": true" << Qt::endl;
+                << ": true" << endl;
          } break;
 
          case 'E': {
             QTextStream oss( &_cmdlineResources, QIODevice::WriteOnly | QIODevice::Append );
             oss << XxResParser::getBoolOptName( BOOL_EXIT_IF_NO_CONFLICTS )
-                << ": true" << Qt::endl;
+                << ": true" << endl;
          } break;
 
          case 'X': {
             QTextStream oss( &_cmdlineResources, QIODevice::WriteOnly | QIODevice::Append );
             oss << XxResParser::getBoolOptName( BOOL_EXIT_WITH_MERGE_STATUS )
-                << ": true" << Qt::endl;
+                << ": true" << endl;
          } break;
 
          case 'm': {
             QTextStream oss( &_cmdlineResources, QIODevice::WriteOnly | QIODevice::Append );
             oss << XxResParser::getBoolOptName( BOOL_SELECT_MERGE )
-                << ": true" << Qt::endl;
+                << ": true" << endl;
          } break;
 
          case 'U': {
@@ -556,7 +557,7 @@ bool XxCmdline::parseCommandLine( const int argc, char* const* argv )
 
          case 'R': {
             QTextStream oss( &_cmdlineResources, QIODevice::WriteOnly | QIODevice::Append );
-            oss << optarg << Qt::endl << Qt::flush;
+            oss << optarg << endl << flush;
          } break;
 
          case 'A': {
@@ -574,7 +575,7 @@ bool XxCmdline::parseCommandLine( const int argc, char* const* argv )
          case 'c': {
             QTextStream oss( &_cmdlineResources, QIODevice::WriteOnly | QIODevice::Append );
             oss << XxResParser::getShowOptName( SHOW_PANE_MERGED_VIEW )
-                << ": true" << Qt::endl;
+                << ": true" << endl;
          } break;
 
          case 'M': {
@@ -612,7 +613,7 @@ bool XxCmdline::parseCommandLine( const int argc, char* const* argv )
          case 'r': {
             QTextStream oss( &_cmdlineResources, QIODevice::WriteOnly | QIODevice::Append );
             oss << XxResParser::getBoolOptName( BOOL_DIRDIFF_RECURSIVE )
-                << ": true" << Qt::endl;
+                << ": true" << endl;
          } break;
 
          case 'e': {
@@ -694,7 +695,7 @@ bool XxCmdline::parseCommandLine( const int argc, char* const* argv )
 
             QTextStream oss( &_cmdlineResources, QIODevice::WriteOnly | QIODevice::Append );
             oss << XxResParser::getKwdName( FONT_TEXT )
-                << ": \"" << optarg << "\"" << Qt::endl;
+                << ": \"" << optarg << "\"" << endl;
          } break;
 
          case 'j': {
@@ -754,7 +755,7 @@ bool XxCmdline::parseCommandLine( const int argc, char* const* argv )
       QString msg;
       {
          QTextStream oss( &msg );
-         oss << "You can specify at most " << maxfn << " filenames." << Qt::endl;
+         oss << "You can specify at most " << maxfn << " filenames." << endl;
          oss << "Extra arguments: \"";
          for ( int ii = maxfn; ii < _nbFilenames; ++ii ) {
             oss << " " << argv[ optind + ii ];
@@ -818,7 +819,7 @@ void XxCmdline::listResources()
    // rcfile or command-line.
    QTextStream oss_cout( stdout, QIODevice::WriteOnly );
    XxResParser::listResources( oss_cout );
-   oss_cout << Qt::flush;
+   oss_cout << flush;
 }
 
 //------------------------------------------------------------------------------
@@ -845,10 +846,10 @@ void XxCmdline::printVersion()
 #ifdef XX_KDE
             << " [kde]"
 #endif
-           << Qt::endl;
-   oss_cout << QString("  (Qt: %1)").arg( qVersion() ) << Qt::endl;
-   oss_cout << "  Written by Martin Blais <blais@furius.ca>" << Qt::endl
-            << Qt::flush;
+           << endl;
+   oss_cout << QString("  (Qt: %1)").arg( qVersion() ) << endl;
+   oss_cout << "  Written by Martin Blais <blais@furius.ca>" << endl
+            << flush;
 }
 
 //------------------------------------------------------------------------------
diff --git src/text.cpp src/text.cpp
index bc994ac..798eb93 100644
--- src/text.cpp
+++ src/text.cpp
@@ -150,7 +150,11 @@ inline void rentxt(
 
       XX_CHECK( rlen > 0 ); // always true, because xch < xend
       QString str( QString::fromLocal8Bit( renderedText + xch, rlen ) );
+#if QT_VERSION >= QT_VERSION_CHECK(5, 11, 0)
       int nw = fm.horizontalAdvance( str, rlen );
+#else
+      int nw = fm.width( str, rlen );
+#endif
 
 #ifndef XX_DRAWTEXT_DRAWS_BACKGROUND
       // don't draw beyond the viewport, to avoid painting ON the frame decoration (Sunken)
@@ -736,7 +740,11 @@ void XxText::paintEvent( QPaintEvent *e )
 
       uint cpos = resources.getVerticalLinePos();
       // Dont use fm.maxWidth(), since, at least on OSX, it returns 0
+#if QT_VERSION >= QT_VERSION_CHECK(5, 11, 0)
       int posx = cpos * fm.horizontalAdvance("w") - horizontalPos;
+#else
+      int posx = cpos * fm.width("w") - horizontalPos;
+#endif
 
       QColor vlineColor = resources.getColor( COLOR_VERTICAL_LINE );
       p.setPen( vlineColor );
diff --git src/exceptions.cpp src/exceptions.cpp
index e98afc1..108c014 100644
--- src/exceptions.cpp
+++ src/exceptions.cpp
@@ -48,7 +48,7 @@ void issueWarning( const QString& str )
 {
    // Send it to stderr.
    QTextStream oss_cerr( stderr, QIODevice::WriteOnly );
-   oss_cerr << "Warning: " << str << Qt::endl;
+   oss_cerr << "Warning: " << str << endl;
 }
 
 /*==============================================================================
@@ -63,7 +63,7 @@ XxError::XxError(
 )
 {
    QTextStream oss( &_msg );
-   oss << "xxdiff (" << file << ":" << line << "): " << Qt::endl;
+   oss << "xxdiff (" << file << ":" << line << "): " << endl;
    if ( !msg.isEmpty() ) {
       oss << msg;
    }
@@ -108,7 +108,7 @@ XxUsageError::XxUsageError(
    else {
       // Don't base class msg.
       QTextStream oss( &_msg, QIODevice::WriteOnly | QIODevice::Append );
-      oss << Qt::endl;
+      oss << endl;
 
       // Don't output usage in case of an explicit error.
       oss << "Use 'xxdiff --help' for more information.";
@@ -130,7 +130,7 @@ XxIoError::XxIoError(
    std::runtime_error( strerror( errno ) )
 {
    QTextStream oss( &_msg, QIODevice::WriteOnly | QIODevice::Append );
-   oss << Qt::endl;
+   oss << endl;
    oss << "IO error: " << strerror( errno );
 }
 
@@ -147,15 +147,15 @@ XxInternalError::XxInternalError(
    std::runtime_error( "Internal error." )
 {
    QTextStream oss( &_msg, QIODevice::WriteOnly | QIODevice::Append );
-   oss << Qt::endl;
-   oss << "Internal error." << Qt::endl << Qt::endl;
-   oss << "There has been an internal error within xxdiff." << Qt::endl
-       << "To report bugs, please use the sourceforge bug tracker" << Qt::endl
-       << "at https://github.com/blais/xxdiff/" << Qt::endl
-       << "and log the above information above and if possible," << Qt::endl
-       << "the files that caused the error, and as much detail as" << Qt::endl
+   oss << endl;
+   oss << "Internal error." << endl << endl;
+   oss << "There has been an internal error within xxdiff." << endl
+       << "To report bugs, please use the sourceforge bug tracker" << endl
+       << "at https://github.com/blais/xxdiff/" << endl
+       << "and log the above information above and if possible," << endl
+       << "the files that caused the error, and as much detail as" << endl
        << "you can to reproduce the error.";
-   oss << Qt::endl << Qt::flush; // for extra space
+   oss << endl << flush; // for extra space
 
 // We need this because somehow when called from an activate signal the catch
 // handler is not working properly and the app dumps core.  At least this way
diff --git src/builderFiles2.cpp src/builderFiles2.cpp
index 5ed5fa3..b0e045f 100644
--- src/builderFiles2.cpp
+++ src/builderFiles2.cpp
@@ -254,8 +254,8 @@ std::unique_ptr<XxDiffs> XxBuilderFiles2::process(
       XxLine::Type type;
       if ( parseDiffLine( type, line, f1n1, f1n2, f2n1, f2n2 ) == true ) {
          XX_LOCAL_TRACE( "ERROR" );
-         errors << "Diff error:" << Qt::endl;
-         errors << line << Qt::endl;
+         errors << "Diff error:" << endl;
+         errors << line << endl;
          continue;
       }
 
@@ -367,7 +367,7 @@ std::unique_ptr<XxDiffs> XxBuilderFiles2::process(
    // Collect stderr.
    QString errstr = diffProc.readAllStandardError();
    if ( ! errstr.isEmpty() ) {
-      errors << errstr << Qt::endl;
+      errors << errstr << endl;
    }
    _status = ( diffProc.exitStatus() == QProcess::NormalExit ) ? diffProc.exitCode() : 2;
 #else
@@ -375,7 +375,7 @@ std::unique_ptr<XxDiffs> XxBuilderFiles2::process(
 #endif
 
    // Saved error text.
-   errors << Qt::flush;
+   errors << flush;
    XX_LOCAL_TRACE( "Errors: " << _errors );
 
    // If we've read no lines and there are diff errors then blow off
diff --git src/builderFiles3.cpp src/builderFiles3.cpp
index 5a2558c..ed454d6 100644
--- src/builderFiles3.cpp
+++ src/builderFiles3.cpp
@@ -101,7 +101,7 @@ XxParseDiffError::XxParseDiffError(
    oss << "Error parsing diff3 output:"
        << " (" << f1n1 << "," << f1n2 << ")  file2: "
        << " (" << f2n1 << "," << f2n2 << ")  file3: "
-       << " (" << f3n1 << "," << f3n2 << ")" << Qt::endl;
+       << " (" << f3n1 << "," << f3n2 << ")" << endl;
 }
 
 /*==============================================================================
@@ -478,8 +478,8 @@ std::unique_ptr<XxDiffs> XxBuilderFiles3::process(
       if ( parseDiffLine( type, line,
                           sno, f1n1, f1n2, f2n1, f2n2, f3n1, f3n2 ) == true ) {
          XX_LOCAL_TRACE( "ERROR" );
-         errors << "Diff error:" << Qt::endl;
-         errors << line << Qt::endl;
+         errors << "Diff error:" << endl;
+         errors << line << endl;
          continue;
       }
 
@@ -553,12 +553,12 @@ std::unique_ptr<XxDiffs> XxBuilderFiles3::process(
    // Collect stderr.
    QString errstr = diffProc.readAllStandardError();
    if ( ! errstr.isEmpty() ) {
-      errors << errstr << Qt::endl;
+      errors << errstr << endl;
    }
    _status = ( diffProc.exitStatus() == QProcess::NormalExit ) ? diffProc.exitCode() : 2;
 
    // Saved error text.
-   errors << Qt::flush;
+   errors << flush;
    XX_LOCAL_TRACE( "Errors: " << _errors );
 
    // If we've read no lines and there are diff errors then blow off
diff --git src/builderDirs2.cpp src/builderDirs2.cpp
index 73a7af3..063fa93 100644
--- src/builderDirs2.cpp
+++ src/builderDirs2.cpp
@@ -117,8 +117,8 @@ XxParseDiffError::XxParseDiffError(
    std::runtime_error( "Parse diff output error." )
 {
    QTextStream oss( &_msg, QIODevice::WriteOnly | QIODevice::Append );
-   oss << "Error parsing diff output: " << Qt::endl
-       << buf << Qt::endl;
+   oss << "Error parsing diff output: " << endl
+       << buf << endl;
 }
 
 /*==============================================================================
@@ -339,8 +339,8 @@ void buildSolelyFromOutput(
          line, path1, path2, type, filename, onlyDir
       ) == true ) {
          XX_LOCAL_TRACE( "ERROR" );
-         errors << "Diff error:" << Qt::endl;
-         errors << line << Qt::endl;
+         errors << "Diff error:" << endl;
+         errors << line << endl;
          continue;
       }
 
@@ -435,8 +435,8 @@ void buildAgainstReadDirectory(
          line, path1, path2, type, filename, onlyDir
       ) == true ) {
          XX_LOCAL_TRACE( "ERROR" );
-         errors << "Diff error:" << Qt::endl;
-         errors << line << Qt::endl;
+         errors << "Diff error:" << endl;
+         errors << line << endl;
          continue;
       }
 
@@ -479,8 +479,8 @@ void buildAgainstReadDirectory(
       std::vector<DirDiffType>::const_iterator it2 = 
          std::find( types2.begin(), types2.end(), UNKNOWN );
       if ( it1 != types1.end() || it2 != types2.end() ) {
-         errors << "Forgotten files in directory diffs." << Qt::endl
-                << "Check your subordinate directory diff program." << Qt::endl;
+         errors << "Forgotten files in directory diffs." << endl
+                << "Check your subordinate directory diff program." << endl;
          
          // Patch it up, fallback somehow: for each file that is UNKNOWN in the
          // first array, if the file is available and UNKNOWN in the second,
@@ -681,12 +681,12 @@ std::unique_ptr<XxDiffs> XxBuilderDirs2::process(
    // Collect stderr.
    QString errstr = diffProc.readAllStandardError();
    if ( ! errstr.isEmpty() ) {
-      errors << errstr << Qt::endl;
+      errors << errstr << endl;
    }
    _status = ( diffProc.exitStatus() == QProcess::NormalExit ) ? diffProc.exitCode() : 2;
 
    // Saved error text.
-   errors << Qt::flush;
+   errors << flush;
    XX_LOCAL_TRACE( "Errors: " << _errors );
 
    // If we've read no lines and there are diff errors then blow off
diff --git src/builderUnmerge.cpp src/builderUnmerge.cpp
index 8f0db96..25deacf 100644
--- src/builderUnmerge.cpp
+++ src/builderUnmerge.cpp
@@ -94,7 +94,7 @@ XxConflictFormatError::XxConflictFormatError(
    oss << "Error parsing conflicts file:"
        << " (" << f1n1 << "," << f1n2 << ")  file2: "
        << " (" << f2n1 << "," << f2n2 << ")  file3: "
-       << " (" << f3n1 << "," << f3n2 << ")" << Qt::endl;
+       << " (" << f3n1 << "," << f3n2 << ")" << endl;
 }
 
 XX_NAMESPACE_BEGIN
@@ -203,19 +203,19 @@ std::unique_ptr<XxDiffs> XxBuilderUnmerge::process(
    if ( !reStart.isValid() ) {
       QString str;
       QTextStream oss( &str );
-      oss << "TAG_UNMERGE_START is invalid: " << reStart.pattern() << Qt::endl;
+      oss << "TAG_UNMERGE_START is invalid: " << reStart.pattern() << endl;
       throw XxError( XX_EXC_PARAMS, str );
    }
    if ( !reSep.isValid() ) {
       QString str;
       QTextStream oss( &str );
-      oss << "TAG_UNMERGE_SEP is invalid: " << reSep.pattern() << Qt::endl;
+      oss << "TAG_UNMERGE_SEP is invalid: " << reSep.pattern() << endl;
       throw XxError( XX_EXC_PARAMS, str );
    }
    if ( !reEnd.isValid() ) {
       QString str;
       QTextStream oss( &str );
-      oss << "TAG_UNMERGE_END is invalid: " << reEnd.pattern() << Qt::endl;
+      oss << "TAG_UNMERGE_END is invalid: " << reEnd.pattern() << endl;
       throw XxError( XX_EXC_PARAMS, str );
    }
 
@@ -274,7 +274,7 @@ std::unique_ptr<XxDiffs> XxBuilderUnmerge::process(
                             << fsize1 << " " << fsize2 );
             if ( fsize1 == 0 && fsize2 == 0 ) {
                errors << "Warning: empty change at line " << (f1n1 - 1)
-                      << " in file with conflicts." << Qt::endl;
+                      << " in file with conflicts." << endl;
             }
             if ( fsize1 == 0 ) {
                createInsertRightBlock( f2n1, fsize2 );
@@ -312,7 +312,7 @@ std::unique_ptr<XxDiffs> XxBuilderUnmerge::process(
       /*--_curHunk; // Extend current hunk.*/ // (it works anyway)
       createInsertLeftBlock( f1n1, nbLines + 1 - f1n1 );
       errors << "Warning: file ends inside change at line " << (f1n1 - 1)
-             << Qt::endl;
+             << endl;
    }
    else if ( inConflict == IN2 ) {
       int fsize1 = f1n2 - f1n1;
@@ -330,13 +330,13 @@ std::unique_ptr<XxDiffs> XxBuilderUnmerge::process(
          createChangeBlock( f1n1, f2n1, fsize1, fsize2 );
       }
       errors << "Warning: file ends inside change at line " << (f1n1 - 1)
-             << Qt::endl;
+             << endl;
    }
 
    XX_LOCAL_TRACE( "DONE" );
 
    // Saved error text.
-   errors << Qt::flush;
+   errors << flush;
    XX_LOCAL_TRACE( "Errors: " << _errors );
 
    XX_LOCAL_TRACE( "Left: " << outFileLeft );
@@ -382,25 +382,25 @@ std::unique_ptr<XxDiffs> XxBuilderUnmerge::process(
    if ( !reStart.isValid() ) {
       QString str;
       QTextStream oss( &str );
-      oss << "TAG_UNMERGE_START is invalid: " << reStart.pattern() << Qt::endl;
+      oss << "TAG_UNMERGE_START is invalid: " << reStart.pattern() << endl;
       throw XxError( XX_EXC_PARAMS, str );
    }
    if ( !reSep1.isValid() ) {
       QString str;
       QTextStream oss( &str );
-      oss << "TAG_UNMERGE_SEP_EXTRA is invalid: " << reSep1.pattern() << Qt::endl;
+      oss << "TAG_UNMERGE_SEP_EXTRA is invalid: " << reSep1.pattern() << endl;
       throw XxError( XX_EXC_PARAMS, str );
    }
    if ( !reSep2.isValid() ) {
       QString str;
       QTextStream oss( &str );
-      oss << "TAG_UNMERGE_SEP is invalid: " << reSep2.pattern() << Qt::endl;
+      oss << "TAG_UNMERGE_SEP is invalid: " << reSep2.pattern() << endl;
       throw XxError( XX_EXC_PARAMS, str );
    }
    if ( !reEnd.isValid() ) {
       QString str;
       QTextStream oss( &str );
-      oss << "TAG_UNMERGE_END is invalid: " << reEnd.pattern() << Qt::endl;
+      oss << "TAG_UNMERGE_END is invalid: " << reEnd.pattern() << endl;
       throw XxError( XX_EXC_PARAMS, str );
    }
 
@@ -489,7 +489,7 @@ std::unique_ptr<XxDiffs> XxBuilderUnmerge::process(
                             << f3n1 << " " << f3n2 );
             if ( fsize1 == 0 && fsize2 == 0 && fsize3 == 0 ) {
                errors << "Warning: empty change at line " << (f1n1 - 1)
-                      << " in file with conflicts." << Qt::endl;
+                      << " in file with conflicts." << endl;
             }
             else if ( f2n1 == -1 ) {
                //
@@ -595,7 +595,7 @@ std::unique_ptr<XxDiffs> XxBuilderUnmerge::process(
       createIgnoreBlock( f1n1 - 1, f1n1 - 1, f1n1 - 1, nbLines + 1 - (f1n1-1) );
 
       errors << "Warning: file ends inside change at line " << (f1n1 - 1)
-             << Qt::endl;
+             << endl;
    }
    else if ( f1n1 <= nbLines ) {
       // Add final ignore region if present.
@@ -605,7 +605,7 @@ std::unique_ptr<XxDiffs> XxBuilderUnmerge::process(
    XX_LOCAL_TRACE( "DONE" );
 
    // Saved error text.
-   errors << Qt::flush;
+   errors << flush;
    XX_LOCAL_TRACE( "Errors: " << _errors );
 
    XX_LOCAL_TRACE( "Left: " << outFileLeft );
diff --git src/diffs.cpp src/diffs.cpp
index feae905..c23e9bf 100644
--- src/diffs.cpp
+++ src/diffs.cpp
@@ -60,7 +60,7 @@ int outputLine(
 
       //os << QString::fromLocal8Bit(text, len);
       os << QByteArray(text, len);
-      os << Qt::endl;
+      os << endl;
       return 1;
    }
    return 0;
@@ -977,7 +977,7 @@ void XxDiffs::saveChunk(
 #else
          oss.setCodec( "ISO-8859-1" );
 #endif
-         oss << cond << Qt::endl;
+         oss << cond << endl;
 
          int nbOutlines = 0;
          for ( uint iii = unselBegin; iii < unselEnd; ++iii ) {
@@ -995,12 +995,12 @@ void XxDiffs::saveChunk(
          } else {
             ++state;
          }
-         oss << '\0' << Qt::flush; // end string and flush
+         oss << '\0' << flush; // end string and flush
          os << static_cast<const char*>( line );
       }
    }
 
-   os << tags[END] << Qt::endl;
+   os << tags[END] << endl;
 }
 
 //------------------------------------------------------------------------------
@@ -1033,14 +1033,14 @@ bool XxDiffs::saveSelectedOnly(
 
             os << ( no == 0 ? '<' : '>' ) << fline << ": ";
             os << QString::fromLocal8Bit(text, len);
-            os << Qt::endl;
+            os << endl;
 
             some = true;
             prevOut = true;
          }
       }
       else if ( prevOut == true ) {
-         os << Qt::endl;
+         os << endl;
          prevOut = false;
       }
    }
diff --git src/resParser.cpp src/resParser.cpp
index 9913a71..f06ca65 100644
--- src/resParser.cpp
+++ src/resParser.cpp
@@ -662,28 +662,28 @@ QString formatGeometry( const QRect& geom )
 //
 void drbegin( QTextStream& os )
 {
-   os << "<PRE>" << Qt::endl;
+   os << "<PRE>" << endl;
 }
 
 //------------------------------------------------------------------------------
 //
 void drend( QTextStream& os )
 {
-   os << "</PRE>" << Qt::endl;
+   os << "</PRE>" << endl;
 }
 
 //------------------------------------------------------------------------------
 //
 void ddbegin( QTextStream& os )
 {
-   os << "<BLOCKQUOTE>" << Qt::endl;
+   os << "<BLOCKQUOTE>" << endl;
 }
 
 //------------------------------------------------------------------------------
 //
 void ddend( QTextStream& os )
 {
-   os << "</BLOCKQUOTE>" << Qt::endl;
+   os << "</BLOCKQUOTE>" << endl;
 }
 
 //------------------------------------------------------------------------------
@@ -794,7 +794,7 @@ int parseFromKeywordList(
    if ( !noerror ) {
       QString os;
       QTextStream oss( &os );
-      oss << "Unknown " << errmsg << ": " << name << Qt::flush;
+      oss << "Unknown " << errmsg << ": " << name << flush;
       resParsererror( NULL, os.toLocal8Bit().constData() );
    }
    num = ERROR_TOKEN;
@@ -969,7 +969,7 @@ void XxResParser::genInitFile(
    const QRect& geom = res1.getPreferredGeometry();
    if ( geom != res2.getPreferredGeometry() ) {
       os << searchTokenName( kwdList, kwdList_size, PREFGEOMETRY ) << ": "
-         << formatGeometry( geom ) << Qt::endl;
+         << formatGeometry( geom ) << endl;
    }
    // Perhaps we should change the default init geometry here to use the actual
    // application geometry.
@@ -977,7 +977,7 @@ void XxResParser::genInitFile(
    QString styleKey = res1.getStyleKey();
    if ( styleKey != res2.getStyleKey() ) {
       os << searchTokenName( kwdList, kwdList_size, STYLE )
-         << ": \"" << styleKey << "\"" << Qt::endl;
+         << ": \"" << styleKey << "\"" << endl;
    }
 
    int nbaccel = sizeof(accelList)/sizeof(StringToken);
@@ -991,7 +991,7 @@ void XxResParser::genInitFile(
             astr = QKeySequence( aval ).toString();
          }
          os << accelStr << "." << accelList[ii]._name << ": \""
-            << astr << "\"" << Qt::endl;
+            << astr << "\"" << endl;
       }
    }
 
@@ -1000,7 +1000,7 @@ void XxResParser::genInitFile(
       os << searchTokenName( kwdList, kwdList_size, FONT_APP )
          << ": \""
          << fontApp.toString()
-         << "\"" << Qt::endl;
+         << "\"" << endl;
    }
 
    const QFont& fontText = res1.getFontText();
@@ -1008,7 +1008,7 @@ void XxResParser::genInitFile(
       os << searchTokenName( kwdList, kwdList_size, FONT_TEXT )
          << ": \""
          << fontText.toString()
-         << "\"" << Qt::endl;
+         << "\"" << endl;
    }
 
    int nbcolors = sizeof(colorList)/sizeof(StringToken);
@@ -1019,13 +1019,13 @@ void XxResParser::genInitFile(
       if ( res1.getColor( color, true ) !=
            res2.getColor( color, true ) ) {
          os << colorStr << "." << colorList[ii]._name << ".Fore" << ": \""
-            << res1.getColor( color, true ).name() << "\"" << Qt::endl;
+            << res1.getColor( color, true ).name() << "\"" << endl;
       }
 
       if ( res1.getColor( color, false ) !=
            res2.getColor( color, false ) ) {
          os << colorStr << "." << colorList[ii]._name << ".Back" << ": \""
-            << res1.getColor( color, false ).name() << "\"" << Qt::endl;
+            << res1.getColor( color, false ).name() << "\"" << endl;
       }
    }
 
@@ -1035,7 +1035,7 @@ void XxResParser::genInitFile(
       bool b1 = res1.getBoolOpt( bo );
       if ( b1 != res2.getBoolOpt( bo ) ) {
          os << boolkwdList[ii]._name << ": "
-            << ( b1 ? "True" : "False" ) << Qt::endl;
+            << ( b1 ? "True" : "False" ) << endl;
       }
    }
 
@@ -1046,13 +1046,13 @@ void XxResParser::genInitFile(
       bool b1 = res1.getShowOpt( bo );
       if ( b1 != res2.getShowOpt( bo ) ) {
          os << showStr << "." << showList[ii]._name << ": "
-            << ( b1 ? "True" : "False" ) << Qt::endl;
+            << ( b1 ? "True" : "False" ) << endl;
       }
    }
 
    if ( res1.getTabWidth() != res2.getTabWidth() ) {
       os << searchTokenName( kwdList, kwdList_size, TAB_WIDTH ) << ": "
-         << res1.getTabWidth() << Qt::endl;
+         << res1.getTabWidth() << endl;
    }
 
    int nbcommand = sizeof(commandList)/sizeof(StringToken);
@@ -1062,7 +1062,7 @@ void XxResParser::genInitFile(
       const QString& b1 = res1.getCommand( bo );
       if ( b1 != res2.getCommand( bo ) ) {
          os << commandStr << "." << commandList[ii]._name << ": \""
-            << b1 << "\"" << Qt::endl;
+            << b1 << "\"" << endl;
       }
    }
 
@@ -1074,7 +1074,7 @@ void XxResParser::genInitFile(
       const QString& b1 = res1.getCommandSwitch( bo );
       if ( b1 != res2.getCommandSwitch( bo ) ) {
          os << commandSwitchStr << "." << commandSwitchList[ii]._name << ": \""
-            << b1 << "\"" << Qt::endl;
+            << b1 << "\"" << endl;
       }
    }
 
@@ -1086,23 +1086,23 @@ void XxResParser::genInitFile(
       const char* bmap[3] = { "Nop", "False", "True" };
       if ( b1 != res2.getInitSwitch( bo ) ) {
          os << initSwitchStr << "." << commandSwitchList[ii]._name << ": "
-            << bmap[b1+1] << Qt::endl;
+            << bmap[b1+1] << endl;
       }
    }
 
    if ( res1.getOverviewFileWidth() != res2.getOverviewFileWidth() ) {
       os << searchTokenName( kwdList, kwdList_size, OVERVIEW_FILE_WIDTH ) << ": "
-         << res1.getOverviewFileWidth() << Qt::endl;
+         << res1.getOverviewFileWidth() << endl;
    }
 
    if ( res1.getOverviewSepWidth() != res2.getOverviewSepWidth() ) {
       os << searchTokenName( kwdList, kwdList_size, OVERVIEW_SEP_WIDTH ) << ": "
-         << res1.getOverviewSepWidth() << Qt::endl;
+         << res1.getOverviewSepWidth() << endl;
    }
 
    if ( res1.getVerticalLinePos() != res2.getVerticalLinePos() ) {
       os << searchTokenName( kwdList, kwdList_size, VERTICAL_LINE_POS ) << ": "
-         << res1.getVerticalLinePos() << Qt::endl;
+         << res1.getVerticalLinePos() << endl;
    }
 
    int nbtag = sizeof(tagList)/sizeof(StringToken);
@@ -1112,46 +1112,46 @@ void XxResParser::genInitFile(
       const QString& b1 = res1.getTag( bo );
       if ( b1 != res2.getTag( bo ) ) {
          os << tagStr << "." << tagList[ii]._name << ": \""
-            << b1 << "\"" << Qt::endl;
+            << b1 << "\"" << endl;
       }
    }
 
    if ( res1.getClipboardHeadFormat() !=
         res2.getClipboardHeadFormat() ) {
       os << searchTokenName( kwdList, kwdList_size, CLIPBOARD_HEAD_FORMAT ) << ": \""
-         << XxUtil::escapeChars( res1.getClipboardHeadFormat() ) << "\"" << Qt::endl;
+         << XxUtil::escapeChars( res1.getClipboardHeadFormat() ) << "\"" << endl;
    }
    if ( res1.getClipboardLineFormat() !=
         res2.getClipboardLineFormat() ) {
       os << searchTokenName( kwdList, kwdList_size, CLIPBOARD_LINE_FORMAT ) << ": \""
-         << XxUtil::escapeChars( res1.getClipboardLineFormat() ) << "\"" << Qt::endl;
+         << XxUtil::escapeChars( res1.getClipboardLineFormat() ) << "\"" << endl;
    }
 
    if ( res1.getHordiffType() != res2.getHordiffType() ) {
       const char* hdtstr[3] = { "None", "Single", "Multiple" };
       os << searchTokenName( kwdList, kwdList_size, HORDIFF_TYPE ) << ": "
-         << hdtstr[ int(res1.getHordiffType()) ] << Qt::endl;
+         << hdtstr[ int(res1.getHordiffType()) ] << endl;
    }
 
    if ( res1.getHordiffMax() != res2.getHordiffMax() ) {
       os << searchTokenName( kwdList, kwdList_size, HORDIFF_MAX ) << ": "
-         << res1.getHordiffMax() << Qt::endl;
+         << res1.getHordiffMax() << endl;
    }
 
    if ( res1.getHordiffContext() != res2.getHordiffContext() ) {
       os << searchTokenName( kwdList, kwdList_size, HORDIFF_CONTEXT ) << ": "
-         << res1.getHordiffContext() << Qt::endl;
+         << res1.getHordiffContext() << endl;
    }
 
    if ( res1.getShowPaneMergedViewPercent() !=
         res2.getShowPaneMergedViewPercent() ) {
       os << searchTokenName( kwdList, kwdList_size, SHOW_PANE_MERGED_VIEW_PERCENT )
-         << ": " << res1.getShowPaneMergedViewPercent() << Qt::endl;
+         << ": " << res1.getShowPaneMergedViewPercent() << endl;
    }
 
    if ( res1.getMergedFilename() != res2.getMergedFilename() ) {
       os << searchTokenName( kwdList, kwdList_size, MERGED_FILENAME ) << ": \""
-         << res1.getMergedFilename() << "\"" << Qt::endl;
+         << res1.getMergedFilename() << "\"" << endl;
    }
    // Ignore file not saved (cannot be read).
 }
@@ -1166,10 +1166,10 @@ void XxResParser::listResources( QTextStream& os )
    int ii;
 
    os << searchTokenName( kwdList, kwdList_size, PREFGEOMETRY ) << ": "
-      << formatGeometry( res.getPreferredGeometry() ) << Qt::endl;
+      << formatGeometry( res.getPreferredGeometry() ) << endl;
 
    os << searchTokenName( kwdList, kwdList_size, STYLE )
-      << ": \"" << res.getStyleKey() << "\"" << Qt::endl;
+      << ": \"" << res.getStyleKey() << "\"" << endl;
 
    int nbaccel = sizeof(accelList)/sizeof(StringToken);
    const char* accelStr = searchTokenName( kwdList, kwdList_size, ACCEL );
@@ -1181,20 +1181,20 @@ void XxResParser::listResources( QTextStream& os )
          astr = QKeySequence( aval ).toString();
       }
       os << accelStr << "." << accelList[ii]._name << ": \""
-         << astr.toLocal8Bit().constData() << "\"" << Qt::endl;
+         << astr.toLocal8Bit().constData() << "\"" << endl;
    }
 
    const QFont& fontApp = res.getFontApp();
    os << searchTokenName( kwdList, kwdList_size, FONT_APP )
       << ": \""
       << fontApp.toString()
-      << "\"" << Qt::endl;
+      << "\"" << endl;
 
    const QFont& fontText = res.getFontText();
    os << searchTokenName( kwdList, kwdList_size, FONT_TEXT )
       << ": \""
       << fontText.toString()
-      << "\"" << Qt::endl;
+      << "\"" << endl;
 
    int nbcolors = sizeof(colorList)/sizeof(StringToken);
    const char* colorStr = searchTokenName( kwdList, kwdList_size, COLOR );
@@ -1202,17 +1202,17 @@ void XxResParser::listResources( QTextStream& os )
       XxColor color = XxColor( colorList[ii]._token );
 
       os << colorStr << "." << colorList[ii]._name << ".Fore" << ": \""
-         << res.getColor( color, true ).name() << "\"" << Qt::endl;
+         << res.getColor( color, true ).name() << "\"" << endl;
 
       os << colorStr << "." << colorList[ii]._name << ".Back" << ": \""
-         << res.getColor( color, false ).name() << "\"" << Qt::endl;
+         << res.getColor( color, false ).name() << "\"" << endl;
    }
 
    int nbbool = sizeof(boolkwdList)/sizeof(StringToken);
    for ( ii = 0; ii < nbbool; ++ii ) {
       XxBoolOpt bo = static_cast<XxBoolOpt>( boolkwdList[ii]._token - BOOLKWD_BASE );
       bool b1 = res.getBoolOpt( bo );
-      os << boolkwdList[ii]._name << ": " << ( b1 ? "True" : "False" ) << Qt::endl;
+      os << boolkwdList[ii]._name << ": " << ( b1 ? "True" : "False" ) << endl;
    }
 
    int nbshow = sizeof(showList)/sizeof(StringToken);
@@ -1221,11 +1221,11 @@ void XxResParser::listResources( QTextStream& os )
       XxShowOpt bo = XxShowOpt(showList[ii]._token);
       bool b1 = res.getShowOpt( bo );
       os << showStr << "." << showList[ii]._name << ": "
-         << ( b1 ? "True" : "False" ) << Qt::endl;
+         << ( b1 ? "True" : "False" ) << endl;
    }
 
    os << searchTokenName( kwdList, kwdList_size, TAB_WIDTH ) << ": "
-      << res.getTabWidth() << Qt::endl;
+      << res.getTabWidth() << endl;
 
    int nbcommand = sizeof(commandList)/sizeof(StringToken);
    const char* commandStr = searchTokenName( kwdList, kwdList_size, COMMAND );
@@ -1233,7 +1233,7 @@ void XxResParser::listResources( QTextStream& os )
       XxCommand bo = XxCommand(commandList[ii]._token);
       const QString& b1 = res.getCommand( bo );
       os << commandStr << "." << commandList[ii]._name << ": \""
-         << b1.toLocal8Bit().constData() << "\"" << Qt::endl;
+         << b1.toLocal8Bit().constData() << "\"" << endl;
    }
 
    int nbcommandSwitch = sizeof(commandSwitchList)/sizeof(StringToken);
@@ -1243,7 +1243,7 @@ void XxResParser::listResources( QTextStream& os )
       XxCommandSwitch bo = XxCommandSwitch(commandSwitchList[ii]._token);
       const QString& b1 = res.getCommandSwitch( bo );
       os << commandSwitchStr << "." << commandSwitchList[ii]._name << ": \""
-         << b1.toLocal8Bit().constData() << "\"" << Qt::endl;
+         << b1.toLocal8Bit().constData() << "\"" << endl;
    }
 
    const char* initSwitchStr = searchTokenName( kwdList, kwdList_size, INITSW );
@@ -1253,17 +1253,17 @@ void XxResParser::listResources( QTextStream& os )
       XX_CHECK( -1 <= b1 && b1 <= 1 );
       const char* bmap[3] = { "Nop", "False", "True" };
       os << initSwitchStr << "." << commandSwitchList[ii]._name << ": "
-         << bmap[b1+1] << Qt::endl;
+         << bmap[b1+1] << endl;
    }
 
    os << searchTokenName( kwdList, kwdList_size, OVERVIEW_FILE_WIDTH ) << ": "
-      << res.getOverviewFileWidth() << Qt::endl;
+      << res.getOverviewFileWidth() << endl;
 
    os << searchTokenName( kwdList, kwdList_size, OVERVIEW_SEP_WIDTH ) << ": "
-      << res.getOverviewSepWidth() << Qt::endl;
+      << res.getOverviewSepWidth() << endl;
 
    os << searchTokenName( kwdList, kwdList_size, VERTICAL_LINE_POS ) << ": "
-      << res.getVerticalLinePos() << Qt::endl;
+      << res.getVerticalLinePos() << endl;
 
    int nbtag = sizeof(tagList)/sizeof(StringToken);
    const char* tagStr = searchTokenName( kwdList, kwdList_size, TAG );
@@ -1271,29 +1271,29 @@ void XxResParser::listResources( QTextStream& os )
       XxTag bo = XxTag(tagList[ii]._token);
       const QString& b1 = res.getTag( bo );
       os << tagStr << "." << tagList[ii]._name << ": \""
-         << b1.toLocal8Bit().constData() << "\"" << Qt::endl;
+         << b1.toLocal8Bit().constData() << "\"" << endl;
    }
 
    os << searchTokenName( kwdList, kwdList_size, CLIPBOARD_HEAD_FORMAT ) << ": \""
-      << XxUtil::escapeChars( res.getClipboardHeadFormat() ) << "\"" << Qt::endl;
+      << XxUtil::escapeChars( res.getClipboardHeadFormat() ) << "\"" << endl;
    os << searchTokenName( kwdList, kwdList_size, CLIPBOARD_LINE_FORMAT ) << ": \""
-      << XxUtil::escapeChars( res.getClipboardLineFormat() ) << "\"" << Qt::endl;
+      << XxUtil::escapeChars( res.getClipboardLineFormat() ) << "\"" << endl;
 
    const char* hdtstr[3] = { "None", "Single", "Multiple" };
    os << searchTokenName( kwdList, kwdList_size, HORDIFF_TYPE ) << ": "
-      << hdtstr[ int(res.getHordiffType()) ] << Qt::endl;
+      << hdtstr[ int(res.getHordiffType()) ] << endl;
 
    os << searchTokenName( kwdList, kwdList_size, HORDIFF_MAX ) << ": "
-      << res.getHordiffMax() << Qt::endl;
+      << res.getHordiffMax() << endl;
 
    os << searchTokenName( kwdList, kwdList_size, HORDIFF_CONTEXT ) << ": "
-      << res.getHordiffContext() << Qt::endl;
+      << res.getHordiffContext() << endl;
 
    os << searchTokenName( kwdList, kwdList_size, SHOW_PANE_MERGED_VIEW_PERCENT )
-      << ": " << res.getShowPaneMergedViewPercent() << Qt::endl;
+      << ": " << res.getShowPaneMergedViewPercent() << endl;
 
    os << searchTokenName( kwdList, kwdList_size, MERGED_FILENAME ) << ": \""
-      << res.getMergedFilename() << "\"" << Qt::endl;
+      << res.getMergedFilename() << "\"" << endl;
 
    // Ignore file not saved (cannot be read).
 }
@@ -1321,20 +1321,20 @@ QString XxResParser::getResourceRef()
       drbegin( os );
       const StringToken* tok = searchToken( kwdList, kwdList_size, PREFGEOMETRY );
       os << tok->_name << ": "
-         << formatGeometry( res.getPreferredGeometry() ) << Qt::endl;
+         << formatGeometry( res.getPreferredGeometry() ) << endl;
       drend( os );
       ddbegin( os );
-      os << tok->_desc << Qt::endl;
+      os << tok->_desc << endl;
       ddend( os );
    }
 
    {
       drbegin( os );
       const StringToken* tok = searchToken( kwdList, kwdList_size, STYLE );
-      os << tok->_name << ": \"" << res.getStyleKey() << "\"" << Qt::endl;
+      os << tok->_name << ": \"" << res.getStyleKey() << "\"" << endl;
       drend( os );
       ddbegin( os );
-      os << tok->_desc << Qt::endl;
+      os << tok->_desc << endl;
       ddend( os );
    }
 
@@ -1342,10 +1342,10 @@ QString XxResParser::getResourceRef()
       drbegin( os );
       int nbaccel = sizeof(accelList)/sizeof(StringToken);
       const StringToken* tok = searchToken( kwdList, kwdList_size, ACCEL );
-      os << tok->_name << "." << "[NAME]." << ": \"[ACCELERATOR]\"" << Qt::endl;
+      os << tok->_name << "." << "[NAME]." << ": \"[ACCELERATOR]\"" << endl;
       drend( os );
       ddbegin( os );
-      os << tok->_desc << Qt::endl;
+      os << tok->_desc << endl;
 
       drbegin( os );
       for ( ii = 0; ii < nbaccel; ++ii ) {
@@ -1361,7 +1361,7 @@ QString XxResParser::getResourceRef()
                astr = "&lt;key&gt;";
             }
          os << tok->_name << "." << accelList[ii]._name << ": \""
-            << XxHelp::xmlize( astr ) << "\"" << Qt::endl;
+            << XxHelp::xmlize( astr ) << "\"" << endl;
       }
       drend( os );
       ddend( os );
@@ -1380,10 +1380,10 @@ QString XxResParser::getResourceRef()
       else {
          os << "&lt;xfld-font-spec&gt;";
       }
-      os << "\"" << Qt::endl;
+      os << "\"" << endl;
       drend( os );
       ddbegin( os );
-      os << tok->_desc << Qt::endl;
+      os << tok->_desc << endl;
       ddend( os );
    }
 
@@ -1400,11 +1400,11 @@ QString XxResParser::getResourceRef()
       else {
          os << "&lt;xfld-font-spec&gt;";
       }
-      os << "\"" << Qt::endl;
+      os << "\"" << endl;
 
       drend( os );
       ddbegin( os );
-      os << tok->_desc << Qt::endl;
+      os << tok->_desc << endl;
       ddend( os );
    }
 
@@ -1413,10 +1413,10 @@ QString XxResParser::getResourceRef()
       int nbcolors = sizeof(colorList)/sizeof(StringToken);
       const StringToken* tok = searchToken( kwdList, kwdList_size, COLOR );
       os << tok->_name << "." << "[NAME].[Fore|Back]"
-         << ": \"[COLOR]\"" << Qt::endl;
+         << ": \"[COLOR]\"" << endl;
       drend( os );
       ddbegin( os );
-      os << tok->_desc << Qt::endl;
+      os << tok->_desc << endl;
 
       for ( ii = 0; ii < nbcolors; ++ii ) {
          const StringToken* tokc = &( colorList[ii] );
@@ -1431,7 +1431,7 @@ QString XxResParser::getResourceRef()
          else {
             os << "&lt;color&gt;";
          }
-         os << "\"" << Qt::endl;
+         os << "\"" << endl;
 
          os << tok->_name << "." << tokc->_name << ".Back" << ": \"";
          if ( qApp != 0 ) {
@@ -1440,11 +1440,11 @@ QString XxResParser::getResourceRef()
          else {
             os << "&lt;color&gt;";
          }
-         os << "\"" << Qt::endl;
+         os << "\"" << endl;
 
          drend( os );
          ddbegin( os );
-         os << tokc->_desc << Qt::endl;
+         os << tokc->_desc << endl;
          ddend( os );
       }
       ddend( os );
@@ -1458,10 +1458,10 @@ QString XxResParser::getResourceRef()
          const StringToken* tok = &( boolkwdList[ii] );
 
          drbegin( os );
-         os << tok->_name << ": " << ( b1 ? "True" : "False" ) << Qt::endl;
+         os << tok->_name << ": " << ( b1 ? "True" : "False" ) << endl;
          drend( os );
          ddbegin( os );
-         os << tok->_desc << Qt::endl;
+         os << tok->_desc << endl;
          ddend( os );
       }
    }
@@ -1470,10 +1470,10 @@ QString XxResParser::getResourceRef()
       drbegin( os );
       int nbshow = sizeof(showList)/sizeof(StringToken);
       const StringToken* tok = searchToken( kwdList, kwdList_size, SHOW );
-      os << tok->_name << "." << "[NAME]" << ": [True|False]" << Qt::endl;
+      os << tok->_name << "." << "[NAME]" << ": [True|False]" << endl;
       drend( os );
       ddbegin( os );
-      os << tok->_desc << Qt::endl;
+      os << tok->_desc << endl;
 
       for ( ii = 0; ii < nbshow; ++ii ) {
          const StringToken* tokc = &( showList[ii] );
@@ -1482,10 +1482,10 @@ QString XxResParser::getResourceRef()
 
          drbegin( os );
          os << tok->_name << "."
-            << tokc->_name << ": " << ( b1 ? "True" : "False" ) << Qt::endl;
+            << tokc->_name << ": " << ( b1 ? "True" : "False" ) << endl;
          drend( os );
          ddbegin( os );
-         os << tokc->_desc << Qt::endl;
+         os << tokc->_desc << endl;
          ddend( os );
       }
       ddend( os );
@@ -1494,10 +1494,10 @@ QString XxResParser::getResourceRef()
    {
       drbegin( os );
       const StringToken* tok = searchToken( kwdList, kwdList_size, TAB_WIDTH );
-      os << tok->_name << ": " << res.getTabWidth() << Qt::endl;
+      os << tok->_name << ": " << res.getTabWidth() << endl;
       drend( os );
       ddbegin( os );
-      os << tok->_desc << Qt::endl;
+      os << tok->_desc << endl;
       ddend( os );
    }
 
@@ -1506,10 +1506,10 @@ QString XxResParser::getResourceRef()
       drbegin( os );
       int nbcommand = sizeof(commandList)/sizeof(StringToken);
       const StringToken* tok = searchToken( kwdList, kwdList_size, COMMAND );
-      os << tok->_name << "." << "[NAME]" << ": \"[COMMAND]\"" << Qt::endl;
+      os << tok->_name << "." << "[NAME]" << ": \"[COMMAND]\"" << endl;
       drend( os );
       ddbegin( os );
-      os << tok->_desc << Qt::endl;
+      os << tok->_desc << endl;
 
       for ( ii = 0; ii < nbcommand; ++ii ) {
          const StringToken* tokc = &( commandList[ii] );
@@ -1518,10 +1518,10 @@ QString XxResParser::getResourceRef()
 
          drbegin( os );
          os << tok->_name << "." << tokc->_name << ": \""
-            << b1 << "\"" << Qt::endl;
+            << b1 << "\"" << endl;
          drend( os );
          ddbegin( os );
-         os << tokc->_desc << Qt::endl;
+         os << tokc->_desc << endl;
          ddend( os );
       }
       ddend( os );
@@ -1535,11 +1535,11 @@ QString XxResParser::getResourceRef()
          XxCommandSwitch bo = XxCommandSwitch(commandSwitchList[ii]._token);
          QString b1 = XxHelp::xmlize( res.getCommandSwitch( bo ) );
          os << tok->_name << "." << commandSwitchList[ii]._name << ": \""
-            << b1 << "\"" << Qt::endl;
+            << b1 << "\"" << endl;
       }
       drend( os );
       ddbegin( os );
-      os << tok->_desc << Qt::endl;
+      os << tok->_desc << endl;
       ddend( os );
    }
 
@@ -1553,11 +1553,11 @@ QString XxResParser::getResourceRef()
          XX_CHECK( -1 <= b1 && b1 <= 1 );
          const char* bmap[3] = { "Nop", "False", "True" };
          os << tok->_name << "." << commandSwitchList[ii]._name << ": "
-            << bmap[b1+1] << "" << Qt::endl;
+            << bmap[b1+1] << "" << endl;
       }
       drend( os );
       ddbegin( os );
-      os << tok->_desc << Qt::endl;
+      os << tok->_desc << endl;
       ddend( os );
    }
 
@@ -1565,10 +1565,10 @@ QString XxResParser::getResourceRef()
       drbegin( os );
       const StringToken* tok =
          searchToken( kwdList, kwdList_size, OVERVIEW_FILE_WIDTH );
-      os << tok->_name << ": " << res.getOverviewFileWidth() << Qt::endl;
+      os << tok->_name << ": " << res.getOverviewFileWidth() << endl;
       drend( os );
       ddbegin( os );
-      os << tok->_desc << Qt::endl;
+      os << tok->_desc << endl;
       ddend( os );
    }
 
@@ -1576,10 +1576,10 @@ QString XxResParser::getResourceRef()
       drbegin( os );
       const StringToken* tok =
          searchToken( kwdList, kwdList_size, OVERVIEW_SEP_WIDTH );
-      os << tok->_name << ": " << res.getOverviewSepWidth() << Qt::endl;
+      os << tok->_name << ": " << res.getOverviewSepWidth() << endl;
       drend( os );
       ddbegin( os );
-      os << tok->_desc << Qt::endl;
+      os << tok->_desc << endl;
       ddend( os );
    }
 
@@ -1587,10 +1587,10 @@ QString XxResParser::getResourceRef()
       drbegin( os );
       const StringToken* tok =
          searchToken( kwdList, kwdList_size, VERTICAL_LINE_POS );
-      os << tok->_name << ": " << res.getVerticalLinePos() << Qt::endl;
+      os << tok->_name << ": " << res.getVerticalLinePos() << endl;
       drend( os );
       ddbegin( os );
-      os << tok->_desc << Qt::endl;
+      os << tok->_desc << endl;
       ddend( os );
    }
 
@@ -1598,10 +1598,10 @@ QString XxResParser::getResourceRef()
       drbegin( os );
       int nbtag = sizeof(tagList)/sizeof(StringToken);
       const StringToken* tok = searchToken( kwdList, kwdList_size, TAG );
-      os << tok->_name << "." << "[NAME]" << ": [True|False]" << Qt::endl;
+      os << tok->_name << "." << "[NAME]" << ": [True|False]" << endl;
       drend( os );
       ddbegin( os );
-      os << tok->_desc << Qt::endl;
+      os << tok->_desc << endl;
 
       for ( ii = 0; ii < nbtag; ++ii ) {
          const StringToken* tokc = &( tagList[ii] );
@@ -1610,10 +1610,10 @@ QString XxResParser::getResourceRef()
 
          drbegin( os );
          os << tok->_name << "."
-            << tokc->_name << ": \"" << b1 << "\"" << Qt::endl;
+            << tokc->_name << ": \"" << b1 << "\"" << endl;
          drend( os );
          ddbegin( os );
-         os << tokc->_desc << Qt::endl;
+         os << tokc->_desc << endl;
          ddend( os );
       }
       ddend( os );
@@ -1624,10 +1624,10 @@ QString XxResParser::getResourceRef()
       const StringToken* tok =
          searchToken( kwdList, kwdList_size, CLIPBOARD_HEAD_FORMAT );
       QString cf = XxHelp::xmlize( res.getClipboardHeadFormat() );
-      os << tok->_name << ": \"" << cf << "\"" << Qt::endl;
+      os << tok->_name << ": \"" << cf << "\"" << endl;
       drend( os );
       ddbegin( os );
-      os << tok->_desc << Qt::endl;
+      os << tok->_desc << endl;
       ddend( os );
    }
    {
@@ -1635,10 +1635,10 @@ QString XxResParser::getResourceRef()
       const StringToken* tok =
          searchToken( kwdList, kwdList_size, CLIPBOARD_LINE_FORMAT );
       QString cf = XxHelp::xmlize( res.getClipboardLineFormat() );
-      os << tok->_name << ": \"" << cf << "\"" << Qt::endl;
+      os << tok->_name << ": \"" << cf << "\"" << endl;
       drend( os );
       ddbegin( os );
-      os << tok->_desc << Qt::endl;
+      os << tok->_desc << endl;
       ddend( os );
    }
 
@@ -1646,20 +1646,20 @@ QString XxResParser::getResourceRef()
       drbegin( os );
       const StringToken* tok = searchToken( kwdList, kwdList_size, HORDIFF_TYPE );
       const char* hdtstr[3] = { "None", "Single", "Multiple" };
-      os << tok->_name << ": " << hdtstr[ int(res.getHordiffType()) ] << Qt::endl;
+      os << tok->_name << ": " << hdtstr[ int(res.getHordiffType()) ] << endl;
       drend( os );
       ddbegin( os );
-      os << tok->_desc << Qt::endl;
+      os << tok->_desc << endl;
       ddend( os );
    }
 
    {
       drbegin( os );
       const StringToken* tok = searchToken( kwdList, kwdList_size, HORDIFF_MAX );
-      os << tok->_name << ": " << res.getHordiffMax() << Qt::endl;
+      os << tok->_name << ": " << res.getHordiffMax() << endl;
       drend( os );
       ddbegin( os );
-      os << tok->_desc << Qt::endl;
+      os << tok->_desc << endl;
       ddend( os );
    }
 
@@ -1667,10 +1667,10 @@ QString XxResParser::getResourceRef()
       drbegin( os );
       const StringToken* tok = searchToken( kwdList, kwdList_size,
                                             HORDIFF_CONTEXT );
-      os << tok->_name << ": " << res.getHordiffContext() << Qt::endl;
+      os << tok->_name << ": " << res.getHordiffContext() << endl;
       drend( os );
       ddbegin( os );
-      os << tok->_desc << Qt::endl;
+      os << tok->_desc << endl;
       ddend( os );
    }
 
@@ -1678,10 +1678,10 @@ QString XxResParser::getResourceRef()
       drbegin( os );
       const StringToken* tok =
          searchToken( kwdList, kwdList_size, SHOW_PANE_MERGED_VIEW_PERCENT );
-      os << tok->_name << ": " << res.getShowPaneMergedViewPercent() << Qt::endl;
+      os << tok->_name << ": " << res.getShowPaneMergedViewPercent() << endl;
       drend( os );
       ddbegin( os );
-      os << tok->_desc << Qt::endl;
+      os << tok->_desc << endl;
       ddend( os );
    }
 
@@ -1689,16 +1689,16 @@ QString XxResParser::getResourceRef()
       drbegin( os );
       const StringToken* tok = searchToken( kwdList, kwdList_size, MERGED_FILENAME );
       QString cf = XxHelp::xmlize( res.getMergedFilename() );
-      os << tok->_name << ": \"" << cf << "\"" << Qt::endl;
+      os << tok->_name << ": \"" << cf << "\"" << endl;
       drend( os );
       ddbegin( os );
-      os << tok->_desc << Qt::endl;
+      os << tok->_desc << endl;
       ddend( os );
    }
 
    // Ignore file not saved (cannot be read).
 
-   os << Qt::flush;
+   os << flush;
    return resref;
 }
 
