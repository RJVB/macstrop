# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           gobject_introspection 1.0

name                dbusmenu-gtk
categories          devel gnome
maintainers         gmail.com:rjvbertin
license             LGPL-2.1
description         expose menus on DBus
long_description    A DBus interface to expose notification area menus on DBus. GTk2/3 bindings.

homepage            https://launchpad.net/libdbusmenu

platform darwin {
    PortGroup   cxx11 1.1
}
fetch.type      bzr
bzr.url         lp:~dbusmenu-team/libdbusmenu/trunk.16.10
bzr.revision    488
version         16.04.1.${bzr.revision}
distname        ldbusmenu-gtk
worksrcdir      ldbusmenu-gtk

test.run        no

platforms       darwin

variant gtk2 conflicts gtk3 description {builds the GTk2 variant} {}
variant gtk3 conflicts gtk2 description {builds the GTk3 variant} {}
variant vala description {build the Vala bindings} {}

if {![variant_isset gtk2] && ![variant_isset gtk3]} {
    default_variants +gtk2
}

depends_lib-append \
                port:glib2 \
                port:gettext \
                port:libxslt

depends_build-append \
                port:autoconf \
                port:automake \
                port:gnome-common \
                port:pkgconfig \
                port:gtk-doc

gobject_introspection yes

configure.args-append \
                --disable-silent-rules \
                --disable-dependency-tracking \
                --disable-gtk-doc-html \
                --enable-introspection=yes

if {![variant_isset vala]} {
    configure.args-append \
                --disable-vala
} else {
    depends_lib-append \
                port:vala
}

if {[variant_isset gtk2]} {
    configure.args-append \
                --with-gtk=2
}
if {[variant_isset gtk3]} {
    configure.cflags-append \
                -Wno-error
    configure.cxxflags-append \
                -Wno-error
    configure.args-append \
                --with-gtk=3
}

if {![file exists ${configure.dir}/configure]} {
    # first run; generate the configure script and run it
    # with the required arguments.
    configure.cmd   ./autogen.sh
}

livecheck.type      regex
livecheck.url       ${homepage}
livecheck.regex     "Latest version is (.*)"
