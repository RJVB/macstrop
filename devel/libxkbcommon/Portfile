# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0

github.setup        xkbcommon libxkbcommon 1.8.0 xkbcommon-

platform darwin {
    subport "${name}-x11" {}
    if {${subport} eq "${name}-x11"} {
        PortGroup       active_variants 1.1
        PortGroup       stub 1.0
        description     shim for the port:libxkbcommon-x11
        long_description {*}${description}

        depends_lib-append \
                        port:libxkbcommon
        require_active_variants libxkbcommon x11
        return
    }
}

PortGroup           meson 1.0
PortGroup           LTO 1.0

platform darwin {
    PortGroup       legacysupport 1.1

    # strnlen and static_assert
    legacysupport.newest_darwin_requires_legacy 14

    # When building universal the meson test for unistd.h fails because
    # clang: error: cannot use 'cpp-output' output with multiple -arch options
    # leading to build failure later when unistd.h doesn't get included if
    # implicit function declarations are not allowed (Xcode 12+).
    PortGroup       muniversal 1.0
}

categories          devel
maintainers         gmail.com:rjvbertin
license             MIT
description         A keyboard description library.
long_description    Xkbcommon is a library to handle keyboard descriptions, including loading them from disk, \
                    parsing them and handling their state. It's mainly meant for client toolkits, window systems, \
                    and other system applications. Currently that includes Wayland, Qt, Clutter and more. \
                    It is also used by some XCB (X11) applications for proper keyboard support.
homepage            https://xkbcommon.org
platforms           darwin linux

checksums           rmd160  e58f3a80e8108a30af33a593c368c3b927914a9b \
                    sha256  ab20ea6fd99bd799b17d43e6ff6e649fb3eea7dd196c408fe1654c4b31682abb
#                     size    995697

installs_libs       yes

platform darwin {
    variant old_versioning description {Support non-disruptive upgrading from versions <=1.5.0 that built using autotools} {}
    default_variants-append +old_versioning
    if {[variant_isset old_versioning]} {
        patchfiles-append \
                    patch-dylib-version-1.0.0.diff
    }
}

depends_build-append \
                    port:bison \
                    port:pkgconfig \
                    port:xorg-libxcb

depends_run-append  port:libxml2 \
                    port:xkeyboard-config \
                    port:icu

compiler.c_standard 2011

configure.args-append \
                    -Ddefault_library=both \
                    -Denable-docs=false \
                    -Denable-wayland=false \
                    -Denable-x11=false

variant x11 description {enable support for creating keymaps with the X11 protocol} {
    depends_lib-append \
                    port:xorg-libxcb
    configure.args-replace \
                    -Denable-x11=false \
                    -Denable-x11=true
}

variant docs description {} {
    configure.args-replace \
                    -Denable-docs=false \
                    -Denable-docs=true
}

variant wayland description {} {
    depends_lib-append \
                    port:wayland \
                    port:wayland-protocols
    configure.args-replace \
                    -Denable-wayland=false \
                    -Denable-wayland=true
}

if {${os.platform} eq "linux" || [file exists ${prefix}/lib/pkgconfig/xkbcommon-x11.pc]} {
    default_variants-append +x11
}

if {${subport} eq ${name}} {
    if {[file exists ${destroot}/usr/share/bash-completion]} {
        file rename ${destroot}/usr/share/bash-completion ${destroot}${prefix}/share/
    }
}

build.pre_args-prepend -k 0

pre-activate {
    # upstream would like to see us provide the x11 (and presumably wayland) bits in separate port(s) ...
    # we'll talk about that when they provide a way to build and install just those components, against
    # the installed "common" bits.
    if {![catch {lindex [registry_active libxkbcommon-x11] 0} installed]} {
        set _version [lindex $installed 1]
        if {[vercmp $_version 1.8.0] < 0} {
            registry_deactivate_composite libxkbcommon-x11 "" [list ports_nodepcheck 1]
        }
    }
}

if {${subport} ne ${name}} {
    livecheck.type  none
}
