# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# kate: backspace-indents true; indent-pasted-text true; indent-width 4; keep-extra-spaces true; remove-trailing-spaces modified; replace-tabs true; replace-tabs-save true; syntax Tcl/Tk; tab-indents true; tab-width 4;

PortSystem          1.0
PortGroup           kde4    1.1
PortGroup           compiler_blacklist_versions 1.0

fetch.type          git
git.url             git://anongit.kde.org/akonadi
# git.branch          9c0dc6b
git.branch          1fc0e05b4bba6d95595c69899c1b38599942a13c

name                akonadi
set akoversion      1.13.1
version             ${akoversion}.20161023 ; revision 1
categories          devel kde kde4
maintainers         nicos openmaintainer
license             LGPL-2+
description         A personal information management storage service.
long_description    Akonadi is an extensible cross-desktop storage service \
for PIM data and metadata providing concurrent read, write, and query access.
platforms           darwin
# homepage            http://community.kde.org/KDE_PIM/Akonadi
# master_sites        kde:stable/${name}/src/
# use_bzip2           yes

# checksums           rmd160  411e4e3b203cd9681b10d21af75806f723a687ec \
#                     sha256  8c7f690002ea22c139f3a64394aef2e816e00ca47fd971af7d54a66087356dd2

worksrcdir          ${name}-${akoversion}
distname            ${name}-${akoversion}

depends_lib-append  port:boost171 \
                    port:shared-mime-info

#Older compilers cannot handle c++0x instructions contained in akonadi
compiler.blacklist  gcc-4.2 llvm-gcc-4.2 apple-gcc-4.2
compiler.blacklist-append   {clang < 500}

configure.args-append  -DPOSTGRES_PATH=Off
# mute akonadiserver which is usually overly chatty:
configure.cflags-append     -DQT_NO_DEBUG_OUTPUT
configure.cxxflags-append   -DQT_NO_DEBUG_OUTPUT
# Install the headerfiles in their own directory to prevent clashes with KF5 headers
configure.args-append       -DINCLUDE_INSTALL_DIR=${kde4.include_dirs}

set startup_root ""
post-destroot {
    if {[file exists ${destroot}${prefix}/lib/cmake/KDE4/Akonadi/AkonadiConfig.cmake]} {
        # add the extra level of indirection!
        reinplace "s|/../../../|/../../../../|g" ${destroot}${prefix}/lib/cmake/KDE4/Akonadi/AkonadiConfig.cmake
    }
    #Create a simple startup item
    xinstall -d -m 755 ${destroot}${prefix}/Library/LaunchDaemons
    set plist [open "${destroot}${prefix}/Library/LaunchDaemons/org.macports.akonadi.plist" w 0644]

    puts ${plist} "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
    puts ${plist} "<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">"
    puts ${plist} "<plist version=\"1.0\">"
    puts ${plist} "<dict>"
    puts ${plist} "<key>Label</key>"
    puts ${plist} "<string>org.macports.akonadi</string>"
    puts ${plist} "<key>ProgramArguments</key>"
    puts ${plist} "<array>"
    puts ${plist} "<string>${prefix}/bin/akonadiserver-script.sh</string>"
    puts ${plist} "</array>"
    puts ${plist} "<key>Disabled</key>"
    puts ${plist} "<true/>"
    puts ${plist} "<key>RunAtLoad</key>"
    puts ${plist} "<true/>"
    puts ${plist} "</dict>"
    puts ${plist} "</plist>"
    close ${plist}

    #Create the script to launch server (needed to set the path, so that
    #akonadictl can find akonadi_control
    xinstall -d -m 755 ${destroot}${prefix}/bin
    set scriptFl [open "${destroot}${prefix}/bin/akonadiserver-script.sh" w 0755]
    puts ${scriptFl} "#!/bin/sh"
    puts ${scriptFl} "export PATH=${prefix}/bin:${prefix}/sbin:\$PATH"
    puts ${scriptFl} "${prefix}/bin/akonadictl start"
    close ${scriptFl}

    # The startupitem.install keyword does not exist in MacPorts < 2.1.
    if {![info exists startupitem.install]} {
        set startupitem.install yes
    }
    if { ${startupitem.install} != "no" } {
        xinstall -d -m 755 ${destroot}${startup_root}/Library/LaunchDaemons
        ln -s ${prefix}/Library/LaunchDaemons/org.macports.akonadi.plist ${destroot}${startup_root}/Library/LaunchDaemons
    }

    set docdir ${prefix}/share/doc/${name}
    xinstall -d ${destroot}${docdir}
    xinstall -m 0644 -W ${worksrcpath} AUTHORS NEWS README README.sqlite \
        ${destroot}${docdir}
}

post-activate {
    if { ![variant_isset no_root] } {
        file attributes ${prefix}/Library/LaunchDaemons/org.macports.akonadi.plist -owner root -group wheel 
    }
}

notes "Applications using akonadi need the akonadi server to be running to function.
To start the server manually, run
 akonadictl start &
Otherwise, an agent to start the server at logon is provided.
To start it run the following command:
 launchctl load -w ${startup_root}/Library/LaunchDaemons/org.macports.akonadi.plist"

variant no_root description {Run the akonadi server start as MacPorts install user.} {
    pre-fetch {
        if { ${install.user}=="root" || ${install.group}=="wheel" } {
            ui_error "The akonadi server should not be run as root with no_root variant."
            error "Please do not use this variant with your MacPorts configuration."
        }
    }

    set startup_root  [join [lrange [exec /usr/bin/dscl . -read Users/${install.user} NFSHomeDirectory] 1 end]]
    # Files are installed into user's startup directory.
    destroot.violate_mtree  yes
}

variant mysql5 requires mysql51 description {Legacy compatibility variant} {}

variant mysql51 \
   conflicts sqlite mysql55 mysql56 mariadb55 percona55 \
   description {build with mysql51 port} {

   ui_msg "Make qt4-mac-mysql51-plugin dependency a path:-style dependency"
   depends_lib-append      port:qt4-mac-mysql51-plugin
   depends_run-append      port:mysql51-server
   configure.args-append   -DDATABASE_BACKEND=MYSQL \
                           -DMYSQLD_EXECUTABLE=${prefix}/lib/mysql51/bin/mysqld
}

variant mysql55 \
   conflicts sqlite mysql51 mysql56 mariadb55 percona55 \
   description {build with mysql55 port} {

   ui_msg "Make qt4-mac-mysql55-plugin dependency a path:-style dependency"
   depends_lib-append      port:qt4-mac-mysql55-plugin
   depends_run-append      port:mysql55-server
   configure.args-append   -DDATABASE_BACKEND=MYSQL \
                           -DMYSQLD_EXECUTABLE=${prefix}/lib/mysql55/bin/mysqld
}

variant mysql56 \
   conflicts sqlite mysql51 mysql55 mariadb55 percona55 \
   description {build with mysql56 port} {

   ui_msg "Make qt4-mac-mysql56-plugin dependency a path:-style dependency"
   depends_lib-append      port:qt4-mac-mysql56-plugin
   depends_run-append      port:mysql56-server
   configure.args-append   -DDATABASE_BACKEND=MYSQL \
                           -DMYSQLD_EXECUTABLE=${prefix}/lib/mysql55/bin/mysqld
}

variant mariadb requires mariadb55 description {Legacy compatibility variant} {}

variant mariadb55 \
   conflicts sqlite mysql51 mysql55 mysql56 percona55 \
   description {build with mariadb port} {

   depends_lib-append      path:${qt_plugins_dir}/sqldrivers/libqsqlmysql.dylib:qt4-mac-mariadb-plugin
   depends_run-append      port:mariadb-server
   configure.args-append   -DDATABASE_BACKEND=MYSQL \
                           -DMYSQLD_EXECUTABLE=${prefix}/lib/mariadb/bin/mysqld
}

variant percona requires percona55 description {Legacy compatibility variant} {}

variant percona55 \
   conflicts sqlite mysql51 mysql55 mysql56 mariadb55 \
   description {build with percona55 port} {

   ui_msg "Make qt4-mac-percona-plugin dependency a path:-style dependency"
   depends_lib-append      port:qt4-mac-percona-plugin
   depends_run-append      port:percona-server
   configure.args-append   -DDATABASE_BACKEND=MYSQL \
                           -DMYSQLD_EXECUTABLE=${prefix}/lib/percona/bin/mysqld
}

variant sqlite \
   conflicts mysql51 mysql55 mysql56 mariadb55 percona55 \
   description {Use sqlite backend instead of MySQL} {

   configure.args-append   -DDATABASE_BACKEND=SQLITE \
                           -DMYSQLD_EXECUTABLE=Off
}

if {![variant_isset mysql5] && ![variant_isset mysql51] && ![variant_isset mysql55] \
    && ![variant_isset mysql56] && ![variant_isset mariadb55] && ![variant_isset percona55] \
    && ![variant_isset sqlite]} {
    default_variants +mariadb55
}

# package require fileutil
post-patch {
    fs-traverse item ${workpath}/${distname}/server {
        if {[file isfile ${item}]} {
#             # fix '#include "utils.h"' -> "src/utils.h" to avoid a conflict
#             # with the 'utils.h' header installed by the cdparanoia port
#             # do this only on the files actually containing the pattern (which would also exclude the
#             # .git directory)
#             if {[::fileutil::grep "include.*utils.h" ${item}] != ""} {
#                 reinplace "/include/s@\\(utils\\.h\\)@src/\\1@g" ${item}
#             }
            reinplace "/include/s@\\(utils\\.h\\)@src/\\1@g" ${item}
        }
    }
	reinplace "s|/Applications|${applications_dir}|" ${worksrcpath}/CMakeLists.txt
}

variant verbose description {Enable debug output (chatty!)} {
    configure.cflags-delete     -DQT_NO_DEBUG_OUTPUT
    configure.cxxflags-delete   -DQT_NO_DEBUG_OUTPUT
}

platform darwin {
    #Deactivate tests as they require full C++11 support (ticket #45300)
    configure.args-append -DAKONADI_BUILD_TESTS:BOOL=OFF -DBUILD_TESTING:BOOL=OFF
    if {${os.major} == 9} {
        if {[info exists universal_target] && ${universal_target} == "10.4"} {
        # Needed if compiling for 10.4 universal on 10.5
            post-configure {
                reinplace "s|#define HAVE_EXECINFO_H 1||" ${workpath}/build/config-akonadi.h
            }
        }
    }
}

livecheck.type      none
