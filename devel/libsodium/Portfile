# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0
PortGroup           muniversal 1.0

# Upstream recommends using the stable branch:
# https://doc.libsodium.org/installation
github.setup        jedisct1 libsodium d37afd6015fa246b967aa216611874883e5670c1
version             1.0.18-20200728
revision            0
checksums           rmd160  154e61138bc9e14f6823caed62c3841b5fb180e0 \
                    sha256  b9d55bdc55bf4bbea83c614558a5a3dd0af1cec7fd1d0e2a6081a77064a086c3 \
                    size    2041012

categories          devel security
platforms           darwin
license             MIT

maintainers         nomaintainer

description         Portable and packageable NaCl-based crypto library

long_description    libsodium is a library for network communication, \
                    encryption, decryption, signatures, etc.

github.tarball_from archive

depends_build-append \
                    port:pkgconfig

compiler.cxx_standard \
                    2011

configure.args      --disable-silent-rules

test.run            yes
test.target         check

github.livecheck.branch \
                    stable

variant LTO description {build with link-time optimisation} {}
if {[variant_isset LTO]} {
    if {${configure.compiler} eq "cc"} {
        configure.env-append \
                    AR="[string map {"cc" "gcc-ar"} ${configure.cc}]" \
                    NM="[string map {"cc" "gcc-nm"} ${configure.cc}]" \
                    RANLIB="[string map {"cc" "gcc-ranlib"} ${configure.cc}]"
        configure.cflags-append \
                    -ftracer -flto -fuse-linker-plugin -ffat-lto-objects
        configure.ldflags-append \
                    ${configure.optflags} -ftracer -flto -fuse-linker-plugin
    } elseif {[string match *clang* ${configure.compiler}]} {
        if {${os.platform} ne "darwin"} {
            ui_error "unsupported combination +LTO with configure.compiler=${configure.compiler}"
            return -code error "Unsupported variant/compiler combination in ${subport}"
        }
        if {[string match macports-clang* ${configure.compiler}]} {
            configure.env-append \
                    AR="[string map {"clang" "llvm-ar"} ${configure.cc}]" \
                    NM="[string map {"clang" "llvm-nm"} ${configure.cc}]" \
                    RANLIB="[string map {"clang" "llvm-ranlib"} ${configure.cc}]"
        }
        configure.cflags-append \
                    -flto
        configure.ldflags-append \
                    ${configure.optflags} -flto
    } else {
        configure.env-append \
                    AR="[string map {"gcc" "gcc-ar"} ${configure.cc}]" \
                    NM="[string map {"gcc" "gcc-nm"} ${configure.cc}]" \
                    RANLIB="[string map {"gcc" "gcc-ranlib"} ${configure.cc}]"
        configure.cflags-append \
                    -ftracer -flto -fuse-linker-plugin -ffat-lto-objects
        configure.ldflags-append \
                    ${configure.optflags} -ftracer -flto -fuse-linker-plugin
    }
}

post-destroot {
    # make us a drop-in replacement for NaCL
    ln -s sodium ${destroot}${prefix}/include/nacl
    ln -s libsodium.a ${destroot}${prefix}/lib/libnacl.a
    ln -s libsodium.la ${destroot}${prefix}/lib/libnacl.la
}

livecheck.type      none
#livecheck.version   ${version}
#livecheck.url       http://www.ryandesign.com/macports/version.php/${name}
#livecheck.regex     {^([^-]+-\d{8})}
