# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 140960 2015-10-06 20:13:45Z michaelld@macports.org $

PortSystem          1.0

name                soprano
categories          devel
maintainers         pixilla gmail.com:rjvbertin openmaintainer
license             GPL-2+ LGPL-2+

description         The Qt-based RDF framework.
long_description    Soprano is a software library that provides an \
                    object-oriented C++/Qt framework for RDF data.

platforms           darwin
homepage            https://projects.kde.org/projects/kdesupport/soprano

if {${subport} eq "${name}"} {
    PortGroup       kde4 1.1

    version         2.9.4 ; revision 4
    master_sites    sourceforge:soprano
    use_bzip2       yes
    checksums       rmd160  b5e8db32a77ab9fed5dac74783cb137259d91bb2 \
                    sha256  64066fbd54e71d7ae4c8a4116997448a72808a2813cff3bb5d2c28f0fce9e0e5

    patchfiles-append \
                    patch-kde4-header-location.diff
    compiler.cxx_standard 1998
    configure.cxxflags-append -std=gnu++98
    configure.args-append \
                    -DQT5_BUILD=OFF \
                    -DINCLUDE_INSTALL_DIR=${kde4.include_dirs}
    # virtuoso is used by nepomuk, which MacPorts still (kind of) supports
    # default_variants +virtuoso

    post-destroot {
        xinstall -m 755 -d ${destroot}${kde4.include_dirs}
        file rename ${destroot}/${prefix}/include/Soprano ${destroot}${kde4.include_dirs}/Soprano
        file rename ${destroot}/${prefix}/include/soprano ${destroot}${kde4.include_dirs}/soprano
    }
}

subport ${name}-qt5 {
    set qt5.prefer_kde 1
    PortGroup       qt5 1.0
    PortGroup       cmake 1.1
    fetch.type          git
    git.url             git://anongit.kde.org/soprano
    git.branch          d7f30f1d2f7a862d687360877c730dc0d6030500
    version             2.9.4.3
    # soprano-qt5 doesn't yet have any dependents, so can be moved 
    # more easily than the Qt4-based port:soprano.
    cmake.install_prefix \
                    ${prefix}/libexec/${subport}
    configure.args-append \
                    -DQT5_BUILD=ON
    default_variants +clucene
    worksrcdir      ${name}-5
    distname        ${name}-5
    patchfiles-append \
                    patch-sopranodirs.diff
    post-patch {
        reinplace "s|@PREFIX@|${prefix}|g" ${worksrcpath}/soprano/sopranodirs.cpp
    }
}

depends_lib-append  port:strigi \
                    port:libiodbc

patchfiles          patch-parsers-raptor-raptorparser.h.diff \
                    patch-serializers-raptor-raptorserializer.cpp.diff

configure.args-append \
                    -DSOPRANO_DISABLE_CLUCENE_INDEX=ON \
                    -DSOPRANO_DISABLE_VIRTUOSO_BACKEND=ON \
                    -DSOPRANO_DISABLE_RAPTOR_PARSER=ON \
                    -DSOPRANO_DISABLE_RAPTOR_SERIALIZER=ON \
                    -DSOPRANO_DISABLE_REDLAND_BACKEND=ON

variant raptor description {build the Raptor and Redland backends (required for KDELibs4 nepomuk)} {
    configure.args-replace \
                    -DSOPRANO_DISABLE_RAPTOR_PARSER=ON \
                    -DSOPRANO_DISABLE_RAPTOR_PARSER=OFF
    configure.args-replace \
                    -DSOPRANO_DISABLE_RAPTOR_SERIALIZER=ON \
                    -DSOPRANO_DISABLE_RAPTOR_SERIALIZER=OFF
    configure.args-replace \
                    -DSOPRANO_DISABLE_REDLAND_BACKEND=ON \
                    -DSOPRANO_DISABLE_REDLAND_BACKEND=OFF
    depends_lib-append \
                    port:raptor2 \
                    port:redland
}

default_variants-append +raptor

variant clucene description {add support for Clucene-based full-text indexing} {
    # clucene is already a dependency for strigi, so +clucene could
    # just as well be a default variant too it would seem.
    configure.args-delete \
                    -DSOPRANO_DISABLE_CLUCENE_INDEX=ON
    depends_lib-append \
                    port:clucene
}

variant virtuoso description {build the Virtuoso storage backend} {
    configure.args-delete \
                    -DSOPRANO_DISABLE_VIRTUOSO_BACKEND=ON
    depends_run-append \
                    port:virtuoso

    #Virtuoso builds only on 64bit, but it is only a runtime dependency,
    #automatically deactivated if not available (ticket #41773)
    depends_skip_archcheck \
                    virtuoso
}

platform darwin {
    pre-configure {
        if {![file isfile "/System/Library/Frameworks/JavaVM.framework/Headers/jni.h"]} {
            ui_error "${name} requires the Java for Mac OS X development headers."
            if {${os.major} == 11} {
                ui_error "Download the Java Developer Package from: <http://support.apple.com/kb/DL1421>"
            } elseif {${os.major} == 10} {
                ui_error "Download the Java Developer Package from: <https://connect.apple.com/cgi-bin/WebObjects/MemberSite.woa/wa/getSoftware?bundleID=20719>"
            } elseif {${os.major} == 9} {
                ui_error "Download the Java Developer Package from: <https://connect.apple.com/cgi-bin/WebObjects/MemberSite.woa/wa/getSoftware?bundleID=20720>"
            } else {
                ui_error "Make sure your Xcode installation is complete."
            }
            return -code error "missing Java headers"
        }
    }
}

livecheck.type      sourceforge
livecheck.url       http://sourceforge.net/projects/soprano/files/Soprano/
livecheck.regex     soprano-(\\d+(\\.\\d+)+)
