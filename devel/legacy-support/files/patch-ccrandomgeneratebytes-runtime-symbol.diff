diff --git a/include/MacportsLegacySupport.h b/include/MacportsLegacySupport.h
index 7bb6420..eb3906d 100644
--- a/include/MacportsLegacySupport.h
+++ b/include/MacportsLegacySupport.h
@@ -382,4 +382,8 @@
                                                             || __MPLS_TARGET_OSVER == 1090 \
                                                             || __MPLS_TARGET_OSVER <  1060)
 
+/* CCRandomGenerateBytes */
+#define __MPLS_SDK_SUPPORT_CCRANDOMGENERATEBYTES__   (__MPLS_SDK_MAJOR < 101000)
+#define __MPLS_LIB_SUPPORT_CCRANDOMGENERATEBYTES__   (__MPLS_TARGET_OSVER < 101000)
+
 #endif /* _MACPORTS_LEGACYSUPPORTDEFS_H_ */
diff --git a/src/CCRandomGenerateBytes.c b/src/CCRandomGenerateBytes.c
new file mode 100644
index 0000000..afc264f
--- /dev/null
+++ b/src/CCRandomGenerateBytes.c
@@ -0,0 +1,37 @@
+/* MP support header */
+#include "MacportsLegacySupport.h"
+
+// See: https://blog.xoria.org/randomness-on-apple-platforms/
+
+#ifdef __MPLS_LIB_SUPPORT_CCRANDOMGENERATEBYTES__
+#include <stdlib.h>
+
+typedef enum {
+    kCCSuccess          = 0,
+    kCCParamError       = -4300,
+    kCCBufferTooSmall   = -4301,
+    kCCMemoryFailure    = -4302,
+    kCCAlignmentError   = -4303,
+    kCCDecodeError      = -4304,
+    kCCUnimplemented    = -4305,
+    kCCOverflow         = -4306,
+    kCCRNGFailure       = -4307,
+    kCCUnspecifiedError = -4308,
+    kCCCallSequenceError= -4309,
+    kCCKeySizeError     = -4310,
+    kCCInvalidKey       = -4311,
+} CCRNGStatus;
+
+CCRNGStatus CCRandomGenerateBytes(void *bytes, size_t count)
+{
+    if (0 == count) {
+        return kCCSuccess;
+    }
+
+    if (NULL == bytes) {
+        return kCCParamError;
+    }
+    arc4random_buf(bytes, count);
+    return kCCSuccess;
+}
+#endif // __MPLS_LIB_SUPPORT_CCRANDOMGENERATEBYTES__
diff --git a/src/add_symbols.c b/src/add_symbols.c
index 1dac4b6..f96d536 100644
--- a/src/add_symbols.c
+++ b/src/add_symbols.c
@@ -88,3 +88,13 @@ extern const char pthread_get_stacksize_np_tmp5 __asm("$ld$add$os10.5$_pthread_g
 extern const char pthread_get_stacksize_np_tmp9 __asm("$ld$add$os10.9$_pthread_get_stacksize_np"); __attribute__((visibility("default"))) const char pthread_get_stacksize_np_tmp9 = 0;
 extern const char pthread_get_stacksize_np_tmp10 __asm("$ld$add$os10.10$_pthread_get_stacksize_np"); __attribute__((visibility("default"))) const char pthread_get_stacksize_np_tmp10 = 0;
 #endif
+
+#if !(__MPLS_LIB_SUPPORT_CCRANDOMGENERATEBYTES__)
+extern const char CCRandomGenerateBytes_tmp4 __asm("$ld$add$os10.4$_CCRandomGenerateBytes"); __attribute__((visibility("default"))) const char CCRandomGenerateBytes_tmp4 = 0;
+extern const char CCRandomGenerateBytes_tmp5 __asm("$ld$add$os10.5$_CCRandomGenerateBytes"); __attribute__((visibility("default"))) const char CCRandomGenerateBytes_tmp5 = 0;
+extern const char CCRandomGenerateBytes_tmp6 __asm("$ld$add$os10.6$_CCRandomGenerateBytes"); __attribute__((visibility("default"))) const char CCRandomGenerateBytes_tmp6 = 0;
+extern const char CCRandomGenerateBytes_tmp7 __asm("$ld$add$os10.7$_CCRandomGenerateBytes"); __attribute__((visibility("default"))) const char CCRandomGenerateBytes_tmp7 = 0;
+extern const char CCRandomGenerateBytes_tmp8 __asm("$ld$add$os10.8$_CCRandomGenerateBytes"); __attribute__((visibility("default"))) const char CCRandomGenerateBytes_tmp8 = 0;
+extern const char CCRandomGenerateBytes_tmp9 __asm("$ld$add$os10.9$_CCRandomGenerateBytes"); __attribute__((visibility("default"))) const char CCRandomGenerateBytes_tmp9 = 0;
+#endif
+
