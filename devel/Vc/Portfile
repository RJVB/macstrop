# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.1
PortGroup           muniversal 1.0
PortGroup           github 1.0
set LTO.fat_LTO_Objects yes
set LTO.require_fat_LTO_Objects yes
PortGroup           LTO 1.0

github.setup        VcDevel Vc 1.4.1
github.tarball_from releases
categories          math devel
license             BSD
maintainers         gmail.com:rjvbertin openmaintainer
description         Portable, zero-overhead SIMD library for C++
long_description    Vc is a free software library to ease explicit vectorisation of \
                    C++ code. It has an intuitive API and provides portability \
                    between different compilers and compiler versions as well as \
                    portability between different vector instruction sets. Thus an \
                    application written with Vc can be compiled for \n\
                    AVX and AVX2 \n\
                    SSE2 up to SSE4.2 \n\
                    SSE4a, XOP, FMA4, and FMA \n\
                    Scalar (fallback which works everywhere)
platforms           darwin linux
checksums           rmd160  8943e4602e857885a3e11f902273ce3e53e3de99 \
                    sha256  68e609a735326dc3625e98bd85258e1329fb2a26ce17f32c432723b750a4119f
#                     size    638797


installs_libs       yes

variant docs description {Create API docs using the KF5 doc generator} {}
if {[variant_isset docs]} {
    set kf5.allow_apidocs_generation yes
    set kf5.dont_use_xz yes
    PortGroup       kf5 1.1
    if {[info exists qt5_dependency]} {
        depends_lib-delete ${qt5_dependency}
    }
    set kf5.docs_dir \
                    ${prefix}/share/doc/Vc
}

compiler.cxx_standard 2014

configure.args-append \
                    -DBUILD_TESTING=OFF \
                    -DBUILD_EXAMPLES=OFF

# variant tests description {build the tests} {
#     configure.args-replace \
#                     -DBUILD_TESTING=OFF \
#                     -DBUILD_TESTING=ON
#     test.run        yes
# }

if {![string match *gcc* ${configure.compiler}]} {
    variant examples description {build the examples} {
        PortGroup   qt4 1.0
        configure.args-replace \
                    -DBUILD_EXAMPLES=OFF \
                    -DBUILD_EXAMPLES=ON
        post-destroot {
            xinstall -m 755 -d ${destroot}${prefix}/libexec/Vc
            # unreadable syntax: copy all matching files returned by glob to libexec/Vc
            xinstall -m 755 {*}[glob ${build.dir}/examples/*/example_*] \
                    ${destroot}${prefix}/libexec/Vc
        }
    }
}

# make the build a bit less resource-hungry:
# cmake.generator     Ninja
