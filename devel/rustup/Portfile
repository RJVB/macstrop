# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0
set rustup.shim_cargo_portgroup yes
use_configure       0
PortGroup           rustup 1.0
PortGroup           save_configure_cmd 1.0
PortGroup           compress_workdir 1.0

github.setup        rust-lang rustup 1.28.1

description         the rust toolchain installer

long_description    Rustup installs the rust programming language from the official release channels, \
                    enabling you to easily switch between stable, beta, and nightly compilers and keep \
                    them updated. It makes cross-compiling simpler with binary builds of the standard \
                    library for common platforms. Invoked as `rustup-init` the installed binary acts \
                    like the initial installation script downloaded from rustup.rs (and takes the same \
                    arguments). Invoked as `rustup` it acts as an installer and updater. This port \
                    also installs a minimal version of matthiaskrgr's cargo-cache cleanup utility.

categories          devel
platforms           darwin linux
license             Apache-2

installs_libs 		no

maintainers         nomaintainer

# matthiaskrgr  cargo-cache 
set cccommit        029748e2d305301c14ab73a8910bb0a1b0de45d1
checksums           rmd160  73bc2b6fe445c2717e0e4b8a5ac1a4a581c4f9ad \
                    sha256  45b16143ac4b5dd2183e603aa9066d65cfb80bd545399683b0ca317bf6cb9de8 
#                     size    1011489

depends_lib-append  port:curl \
                    port:xz \
                    port:libiconv \
                    port:zlib \
                    port:openssl

post-extract {
    if {![file exists ${workpath}/cargo-cache]} {
        system -W ${workpath} "git clone --depth=1 https://github.com/matthiaskrgr/cargo-cache.git"
    }
}

patch.pre_args      -Np1

# make it possible to set an env.var so rustup doesn't call rustc
# and we don't get a crash on legacy systems before all required
# binaries have been relinked to the legacy-support libSystem.
patchfiles-append   patch-allow-not-calling-rustc.diff

cargo.offline_cmd

if {[variant_isset rustup_build]} {
    # no point here in verifying how up-to-date cargo.lock is...
    rustup::set_use_configure no
    post-extract {
        ui_info "not doing system -W ${workpath}/cargo-cache \"${cargo.bin} update\""
    }
} else {
    post-configure {
        ui_info "not doing system -W ${workpath}/cargo-cache \"${cargo.bin} update\""
    }
}

configure.save_configure_cmd "install log"

post-build {
    # build the minimal version of cargo-cache, so as to skip the git-related features  
    # as they are incompatible with port:libiconv
    system "${cargo.bin} install --path ${workpath}/cargo-cache --features ci-autoclean"
}

destroot {
    xinstall -m 755 \
        ${worksrcpath}/target/[cargo.rust_platform]/release/${name}-init \
        ${destroot}${prefix}/bin/rustup
    ln -s rustup ${destroot}${prefix}/bin/rustup-init
    xinstall -m 755 ${cargo.home}/bin/cargo-cache ${destroot}${prefix}/bin/cargo-cache-autoclean
}

