PortSystem      1.0
PortGroup       github 1.0
platform darwin {
    PortGroup   legacysupport 1.0
}
PortGroup       LTO 1.0
PortGroup       save_configure_cmd 1.0

# Enable HFS compression of the workdir if the compress_workdir PortGroup is installed
if {[file exists ${filespath}/../../../_resources/port1.0/group/compress_workdir-1.0.tcl]} {
    PortGroup   compress_workdir 1.0
}

github.setup    midipix-project slibtool 8f60d4195d6fe703ec4d19bcf06162ea8fc548a4
version         0.5.35.95
distname        slibtool-src

fetch.type      git

categories      devel
platforms       macosx linux
license         MIT
maintainers     gmail.com:rjvbertin openmaintainer
description     a skinny libtool implementation, written in C
long_description \
                slibtool is an independent reimplementation of the widely used libtool, \
                written in C. slibtool is designed to be a clean, fast, easy-to-use \
                libtool drop-in replacement (when invoked as rlibtool), \
                and is accordingly aimed at package authors, \
                distro developers, and system integrators. slibtool maintains compatibility \
                with libtool in nearly every aspect of the tool's functionality as well as \
                semantics, leaving out (or turning into a no-op) only a small number of \
                features that are no longer needed on modern systems. \n\
                The easiest usage is via `MAKEFLAGS=LIBTOOL=rlibtool`.

# Proof of interest: re-building Mesa with a primed ccache after a make clean:
# > CD `port work mesa`/mesa-19.0.8-i386/ nice +15 time wmake --MP -kj4 > & /dev/null
# 2688.511 user_cpu 1621.190 kernel_cpu 33:14.06 total_time 216.1%CPU {87580672M 9326F 135962440R 2066I 6646O 114356k 380420w 28730321c}
# > CD `port work mesa`/mesa-19.0.8-i386/ nice +15 env MAKEFLAGS=LIBTOOL=rlibtool \
#   SLIBTOOL_AR=/opt/local/bin/llvm-ar-mp-5.0 SLIBTOOL_NM=/opt/local/bin/llvm-nm-mp-5.0 SLIBTOOL_RANLIB=/opt/local/bin/gecho \
#   time wmake --MP -kj4 > & /dev/null
# 1072.870 user_cpu 118.142 kernel_cpu 5:59.47 total_time 331.3%CPU   {169623552M 812F 17578743R 278I 4820O 1063k 7921w 621852c}

patch.pre_args  -Np1
patchfiles-append \
                patch_ar+ranlib_envvars.diff
# patchfiles-append \
#                 patch-llvm_ar-no-mri.diff
patchfiles-append \
                patch-support-ccache.diff \
                patch-whole_archive.diff \
                patch-colours-optional.diff
# platform darwin {
#     patchfiles-append \
#                 patch-mac.diff
# }

post-patch {
    reinplace "s|(mktemp|(gmktemp|g" ${worksrcpath}/sofort/ccenv/ccenv.sh
}

universal_variant yes

build.dir       ${workpath}/build
configure.dir   ${build.dir}
configure.cmd   ${worksrcpath}/configure

#                 --disable-dependency-tracking
configure.cc    [file tail ${configure.cc}]
configure.args-append \
                --source-dir=${worksrcpath} \
                "--host=[exec ${configure.cc} -dumpmachine]" \
                --compiler=${configure.cc} \
                --make=gmake

pre-configure {
    file delete -force ${build.dir}/ccenv

#     set cmd [join "${configure.cmd} ${configure.pre_args} ${configure.args}"]
#     configure.args-append "|& tee -a ${workpath}/.macports.${subport}.configure.log'"
#     configure.pre_args-prepend "-cf '${configure.cmd} "
#     configure.cmd "/bin/csh"
#     ui_debug "configure command set to `${configure.cmd} ${configure.pre_args} ${configure.args} |& tee -a ${workpath}/.macports.${subport}.configure.log'"
#     system "echo '## ${cmd}' > ${workpath}/.macports.${subport}.configure.log"
}

configure.save_configure_cmd "install log"

notes-append \
    "Use SLIBTOOL_AR and SLIBTOOL_RANLIB if slibtool (rlibtool) misguesses these tools."
