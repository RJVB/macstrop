# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem      1.0
PortGroup       github 1.0
platform darwin {
    PortGroup   legacysupport 1.0
}
PortGroup       LTO 1.0
PortGroup       save_configure_cmd 1.0

# Enable HFS compression of the workdir if the compress_workdir PortGroup is installed
if {[file exists ${filespath}/../../../_resources/port1.0/group/compress_workdir-1.0.tcl]} {
    PortGroup   compress_workdir 1.0
}

github.setup    midipix-project slibtool 8f60d4195d6fe703ec4d19bcf06162ea8fc548a4
version         0.5.35.95
distname        slibtool-src

fetch.type      git

categories      devel
platforms       macosx linux
license         MIT
maintainers     gmail.com:rjvbertin openmaintainer
description     a skinny libtool implementation, written in C
long_description \
                slibtool is an independent reimplementation of the widely used libtool, \
                written in C. slibtool is designed to be a clean, fast, easy-to-use \
                libtool drop-in replacement (when invoked as rlibtool), \
                and is accordingly aimed at package authors, \
                distro developers, and system integrators. slibtool maintains compatibility \
                with libtool in nearly every aspect of the tool's functionality as well as \
                semantics, leaving out (or turning into a no-op) only a small number of \
                features that are no longer needed on modern systems. \n\
                The easiest usage is via `MAKEFLAGS=LIBTOOL=rlibtool`.

installs_libs   no

# Proof of interest: re-building Mesa with a primed ccache after a make clean:
# > CD `port work mesa`/mesa-19.0.8-i386/ nice +15 time wmake --MP -kj4 > & /dev/null
# 2688.511 user_cpu 1621.190 kernel_cpu 33:14.06 total_time 216.1%CPU {87580672M 9326F 135962440R 2066I 6646O 114356k 380420w 28730321c}
# > CD `port work mesa`/mesa-19.0.8-i386/ nice +15 env MAKEFLAGS=LIBTOOL=rlibtool \
#   SLIBTOOL_AR=/opt/local/bin/llvm-ar-mp-5.0 SLIBTOOL_NM=/opt/local/bin/llvm-nm-mp-5.0 SLIBTOOL_RANLIB=/opt/local/bin/gecho \
#   time wmake --MP -kj4 > & /dev/null
# 1072.870 user_cpu 118.142 kernel_cpu 5:59.47 total_time 331.3%CPU   {169623552M 812F 17578743R 278I 4820O 1063k 7921w 621852c}
##
# Building codeblocks on OS X 10.9.5 (i7@2.6Ghz), -j4, without vs. with :
# 1493.780 user_cpu 249.341 kernel_cpu 10:50.45 total_time 267.9%CPU {185204736M 118591F 22402313R 108I 9276O 11376k 55991w 818435c}
# 1077.185 user_cpu 167.450 kernel_cpu  6:54.13 total_time 300.5%CPU {361783296M  57072F 13512162R   1I 8276O  2314k 19555w 465236c}
# Building codeblocks on Linux (4.14.328, N3150), -j3, without vs. with :
# 1337.691 user_cpu 131.013 kernel_cpu 9:26.65 total_time 259.1%CPU {183852M 23F 13632247R 15268016I 7447850O 62485w 349109c}
# 1025.479 user_cpu 105.838 kernel_cpu 7:23.09 total_time 255.3%CPU {183864M 19F  9920742R 13344418I 7361949O 16899w 258343c}


variant quieter description {disable some of the default trace output} {}
default_variants-append +quieter

patch.pre_args  -Np1
patchfiles-append \
                patch_ar+ranlib_envvars.diff
# patchfiles-append \
#                 patch-llvm_ar-no-mri.diff
patchfiles-append \
                patch-support-ccache.diff
# this patch currently introduces a small memory leak to inject "-Wl,-force_load,/path/to/foo"!
patchfiles-append \
                patch-whole_archive.diff
patchfiles-append \
                patch-colours-optional.diff
patchfiles-append \
                patch-apple-linker-options.diff
if {[variant_isset quieter]} {
    patchfiles-append \
                patch-less-verbose.diff
}
patchfiles-append \
                patch-mac.diff

post-patch {
    reinplace "s|(mktemp|(gmktemp|g" ${worksrcpath}/sofort/ccenv/ccenv.sh
}

universal_variant yes

build.dir       ${workpath}/build
configure.dir   ${build.dir}
configure.cmd   ${worksrcpath}/configure

#                 --disable-dependency-tracking
configure.cc    [file tail ${configure.cc}]
configure.args-append \
                --source-dir=${worksrcpath} \
                "--host=[exec ${configure.cc} -dumpmachine]" \
                --compiler=${configure.cc} \
                --make=gmake

pre-configure {
    file delete -force ${build.dir}/ccenv
}

configure.save_configure_cmd "install log"

notes-append \
    "Use SLIBTOOL_AR and SLIBTOOL_RANLIB if slibtool (rlibtool) misguesses these tools."
