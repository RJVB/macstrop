diff --git libusb/os/orig.darwin_usb.c libusb/os/darwin_usb.c
index c0963e0..4f87ee6 100644
--- libusb/os/orig.darwin_usb.c
+++ libusb/os/darwin_usb.c
@@ -1069,13 +1069,19 @@ static enum libusb_error darwin_check_configuration (struct libusb_context *ctx,
   return LIBUSB_SUCCESS;
 }
 
-static IOReturn darwin_request_descriptor (usb_device_t device, UInt8 desc, UInt8 desc_index, void *buffer, size_t buffer_size) {
+static IOReturn darwin_request_descriptor (usb_device_t device, UInt8 desc, UInt8 desc_index, void *buffer, size_t buffer_size
+    , UInt16 idProduct, UInt16 idVendor) {
   IOUSBDevRequestTO req;
 
   assert(buffer_size <= UINT16_MAX);
 
   memset (buffer, 0, buffer_size);
 
+  // RJVB: off-limit my Behringer UMC204HD which reboots
+  if (idVendor == 0x1397 && idProduct == 0x0508) {
+      return kIOReturnNotPermitted;
+  }
+
   /* Set up request for descriptor/ */
   req.bmRequestType = USBmakebmRequestType(kUSBIn, kUSBStandard, kUSBDevice);
   req.bRequest      = kUSBRqGetDescriptor;
@@ -1108,11 +1114,15 @@ static enum libusb_error darwin_cache_device_descriptor (struct libusb_context *
   /* According to Apple's documentation the device must be open for DeviceRequest but we may not be able to open some
    * devices and Apple's USB Prober doesn't bother to open the device before issuing a descriptor request.  Still,
    * to follow the spec as closely as possible, try opening the device */
+  // RJVB: ignore my Behringer UMC204HD which reboots
+  if (idVendor == 0x1397 && idProduct == 0x0508) {
+      return darwin_to_libusb(kIOReturnNotPermitted);
+  }
   is_open = ((*device)->USBDeviceOpenSeize(device) == kIOReturnSuccess);
 
   do {
     /**** retrieve device descriptor ****/
-    ret = darwin_request_descriptor (device, kUSBDeviceDesc, 0, &dev->dev_descriptor, sizeof(dev->dev_descriptor));
+    ret = darwin_request_descriptor (device, kUSBDeviceDesc, 0, &dev->dev_descriptor, sizeof(dev->dev_descriptor), idVendor, idProduct);
 
     if (kIOReturnOverrun == ret && kUSBDeviceDesc == dev->dev_descriptor.bDescriptorType)
       /* received an overrun error but we still received a device descriptor */
