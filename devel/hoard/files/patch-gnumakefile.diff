diff --git a/src/GNUmakefile b/src/GNUmakefile
index 288546c..d72979c 100644
--- a/src/GNUmakefile
+++ b/src/GNUmakefile
@@ -1,11 +1,27 @@
 # Commands to compile Hoard for various targets.
 # Run make (with no arguments) to see the complete target list.
 
-CPPFLAGS = -std=c++14 -flto -O3 -DNDEBUG -ffast-math -fno-builtin-malloc -Wall -Wextra -Wshadow -Wconversion -Wuninitialized # -DHL_NO_MALLOC_SIZE_CHECKS=1
+CXXFLAGS = -flto -O3
+CPPFLAGS = -std=c++14 ${CXXFLAGS} -DNDEBUG -ffast-math -fno-builtin-malloc -Wall -Wextra -Wshadow -Wconversion -Wuninitialized # -DHL_NO_MALLOC_SIZE_CHECKS=1
 CPPFLAGS_NOLTO = -std=c++14 -O3 -DNDEBUG -ffast-math -fno-builtin-malloc -Wall -Wextra -Wshadow -Wconversion -Wuninitialized # -DHL_NO_MALLOC_SIZE_CHECKS=1
 #CPPFLAGS = -std=c++14 -g -O0 -ffast-math -fno-builtin-malloc -Wall -Wextra -Wshadow -Wconversion -Wuninitialized
 CXX ?= clang++
 
+# Prefix for installations (Unix / Mac)
+
+ifeq ($(UNAME_S),Darwin)
+# Mac: can't copy into /usr/lib
+PREFIX ?= /usr/local/lib
+else
+PREFIX ?= /usr/lib
+  ifeq ($(UNAME_S),Linux)
+    LINKER_N := $(shell ldd --version 2>&1 | head -n 1 | cut -f 1 -d " ")
+    ifeq ($(LINKER_N),musl)
+        CPPFLAGS = $(CPPFLAGS_NOLTO) -D__MUSL__
+    endif
+  endif
+endif
+
 # Compute platform (OS and architecture) and build accordingly.
 
 ifeq ($(OS),Windows_NT)
@@ -31,21 +47,6 @@ else
 endif
 endif
 
-# Prefix for installations (Unix / Mac)
-
-ifeq ($(UNAME_S),Darwin)
-# Mac: can't copy into /usr/lib
-PREFIX ?= /usr/local/lib
-else
-PREFIX ?= /usr/lib
-  ifeq ($(UNAME_S),Linux)
-    LINKER_N := $(shell ldd --version 2>&1 | head -n 1 | cut -f 1 -d " ")
-    ifeq ($(LINKER_N),musl)
-        CPPFLAGS = $(CPPFLAGS_NOLTO) -D__MUSL__
-    endif
-  endif
-endif
-
 help:
 	@echo To build Hoard, specify the desired build target:
 	@echo -------------------------------------------------
@@ -56,9 +57,7 @@ help:
 	@echo Linux-gcc-aarch64
 	@echo Linux-gcc-x86
 	@echo Linux-gcc-x86_64
-	@echo Darwin-gcc-i386
-	@echo Darwin-gcc-arm
-	@echo Darwin-gcc-powerpc
+	@echo Darwin
 	@echo SunOS-sunw-sparc
 	@echo SunOS-sunw-i386
 	@echo SunOS-gcc-sparc
@@ -67,7 +66,7 @@ help:
 	@echo generic-gcc
 	@echo windows
 
-.PHONY: Darwin-gcc-i386 Darwin-gcc-arm Darwin-gcc-powerpc debian freebsd netbsd Linux-gcc-x86 Linux-gcc-x86-debug SunOS-sunw-sparc SunOS-sunw-i386 SunOS-gcc-sparc generic-gcc Linux-gcc-arm Linux-gcc-aarch64 Linux-gcc-x86_64 Linux-gcc-unknown windows windows-debug clean test release
+.PHONY: Darwin debian freebsd netbsd Linux-gcc-x86 Linux-gcc-x86-debug SunOS-sunw-sparc SunOS-sunw-i386 SunOS-gcc-sparc generic-gcc Linux-gcc-arm Linux-gcc-aarch64 Linux-gcc-x86_64 Linux-gcc-unknown windows windows-debug clean test release
 
 #
 # Source files
@@ -111,9 +110,11 @@ NETBSD_COMPILE = $(CXX) -g $(CPPFLAGS_NOLTO) -DNDEBUG -fPIC $(INCLUDES) -D_REENT
 DEBIAN_COMPILE = $(CXX) -g -O3 -fPIC -DNDEBUG -I. -Iinclude -Iinclude/util -Iinclude/hoard -Iinclude/superblocks -IHeap-Layers -D_REENTRANT=1 -shared source/libhoard.cpp source/unixtls.cpp Heap-Layers/wrappers/wrapper.cpp -Bsymbolic -o libhoard.so -lpthread -lstdc++ -ldl
 
 # -ftls-model=local-dynamic
-MACOS_COMPILE = $(CXX) -ftls-model=initial-exec -ftemplate-depth=1024 -arch x86_64 -arch arm64 -pipe -g $(CPPFLAGS) $(INCLUDES) -D_REENTRANT=1 -compatibility_version 1 -current_version 1 -D'CUSTOM_PREFIX(x)=xx\#\#x' $(MACOS_SRC) -dynamiclib -install_name $(DESTDIR)$(PREFIX)/libhoard.dylib -o libhoard.dylib -ldl -lpthread
+# MACOS_COMPILE = $(CXX) -ftls-model=initial-exec -ftemplate-depth=1024 -arch x86_64 -arch arm64 -pipe -g $(CPPFLAGS) $(INCLUDES) -D_REENTRANT=1 -compatibility_version 1 -current_version 1 -D'CUSTOM_PREFIX(x)=xx\#\#x' $(MACOS_SRC) -dynamiclib -install_name $(DESTDIR)$(PREFIX)/libhoard.dylib -o libhoard.dylib -ldl -lpthread
+MACOS_COMPILE = $(CXX) -ftls-model=initial-exec -ftemplate-depth=1024 $(CPPFLAGS) $(INCLUDES) -D_REENTRANT=1 -compatibility_version 1 -current_version 1 -D'CUSTOM_PREFIX(x)=xx\#\#x' $(MACOS_SRC) -dynamiclib -install_name $(PREFIX)/libhoard.dylib -o libhoard.dylib -lpthread 
 
-MACOS_COMPILE_DEBUG = $(CXX) -std=c++14 -D_FORTIFY_SOURCE=2 -fstack-protector -ftrapv -fno-builtin-malloc -ftemplate-depth=1024 -arch x86_64 -arch arm64 -pipe -g -O0 -Wall $(INCLUDES) -D_REENTRANT=1 -compatibility_version 1 -current_version 1 -D'CUSTOM_PREFIX(x)=xx\#\#x' $(MACOS_SRC) -dynamiclib -o libhoard.dylib -ldl -lpthread
+# MACOS_COMPILE_DEBUG = $(CXX) -std=c++14 -D_FORTIFY_SOURCE=2 -fstack-protector -ftrapv -fno-builtin-malloc -ftemplate-depth=1024 -arch x86_64 -arch arm64 -pipe -g -O0 -Wall $(INCLUDES) -D_REENTRANT=1 -compatibility_version 1 -current_version 1 -D'CUSTOM_PREFIX(x)=xx\#\#x' $(MACOS_SRC) -dynamiclib -o libhoard.dylib -ldl -lpthread
+MACOS_COMPILE_DEBUG = $(CXX) -std=c++14 -D_FORTIFY_SOURCE=2 -fstack-protector -ftrapv -fno-builtin-malloc -ftemplate-depth=1024 -g -O0 -Wall $(INCLUDES) -D_REENTRANT=1 -compatibility_version 1 -current_version 1 -D'CUSTOM_PREFIX(x)=xx\#\#x' $(MACOS_SRC) -dynamiclib -install_name $(PREFIX)/libhoard.dylib -o libhoard.dylib -lpthread 
 
 MACOS_COMPILE_PPC = $(CXX) -ftls-model=initial-exec -ftemplate-depth=1024 -arch ppc -pipe -g $(CPPFLAGS) $(INCLUDES) -D_REENTRANT=1 -compatibility_version 1 -current_version 1 -D'CUSTOM_PREFIX(x)=xx\#\#x' $(MACOS_SRC) -dynamiclib -install_name $(DESTDIR)$(PREFIX)/libhoard.dylib -o libhoard.dylib -ldl -lpthread
 
@@ -125,7 +126,8 @@ LINUX_GCC_AARCH64_COMPILE = aarch64-linux-gnu-g++ $(CPPFLAGS) -g -W -Wconversion
 
 LINUX_GCC_x86_COMPILE = $(CXX) -m32 $(CPPFLAGS) -I/usr/include/nptl -ffast-math -g -fno-builtin-malloc -DNDEBUG  $(INCLUDES) -D_REENTRANT=1 -shared  $(GNU_SRC) -Bsymbolic -o libhoard.so -ldl -lpthread
 
-LINUX_GCC_x86_64_COMPILE = $(CXX) $(CPPFLAGS) -g -W -Wconversion -Wall -I/usr/include/nptl -fno-builtin-malloc -pipe -fPIC -DNDEBUG  $(INCLUDES) -D_REENTRANT=1 -shared   $(GNU_SRC) -Bsymbolic -o libhoard.so -ldl -lpthread
+# LINUX_GCC_x86_64_COMPILE = $(CXX) $(CPPFLAGS) -g -W -Wconversion -Wall -I/usr/include/nptl -fno-builtin-malloc -pipe -fPIC -DNDEBUG  $(INCLUDES) -D_REENTRANT=1 -shared   $(GNU_SRC) -Bsymbolic -o libhoard.so -ldl -lpthread
+LINUX_GCC_x86_64_COMPILE = $(CXX) $(CPPFLAGS) -W -Wconversion -Wall -I/usr/include/nptl -fno-builtin-malloc -pipe -fPIC -DNDEBUG  $(INCLUDES) -D_REENTRANT=1 -shared   $(GNU_SRC) -Bsymbolic -o libhoard.so -ldl -lpthread
 
 LINUX_GCC_UNKNOWN_COMPILE = $(CXX) $(CPPFLAGS) -g -W -Wconversion -Wall -I/usr/include/nptl -fno-builtin-malloc -pipe -fPIC -DNDEBUG  $(INCLUDES) -D_REENTRANT=1 -shared   $(GNU_SRC) -Bsymbolic -o libhoard.so -ldl -lpthread
 
@@ -177,29 +179,17 @@ windows-debug: $(DEPS)
 	cl /analyze /analyze:stacksize131072 $(WIN_INCLUDES) $(WIN_DEBUG_DEFINES) $(WIN_DEBUG_FLAGS) "source\libhoard.cpp" "Heap-Layers\wrappers\winwrapper.cpp" "source\wintls.cpp" /GL /link /DLL /subsystem:console /OUT:libhoard.dll
 	cl $(WIN_INCLUDES) $(WIN_DEBUG_DEFINES) $(WIN_DEBUG_FLAGS) /c "source\uselibhoard.cpp"
 
-Darwin-gcc-i386:
-	$(MACOS_COMPILE)
-
-Darwin-gcc-i386-install: Darwin-gcc-i386
-	cp libhoard.dylib $(DESTDIR)$(PREFIX)
-
-Darwin-gcc-arm:
+Darwin:
 	$(MACOS_COMPILE)
 
-Darwin-gcc-arm-install: Darwin-gcc-arm
-	cp libhoard.dylib $(DESTDIR)$(PREFIX)
-
-Darwin-gcc-powerpc:
-	$(MACOS_COMPILE_PPC)
-
-Darwin-gcc-powerpc-install: Darwin-gcc-powerpc
-	cp libhoard.dylib $(DESTDIR)$(PREFIX)
+Darwin-install: Darwin
+	cp -p libhoard.dylib $(DESTDIR)$(PREFIX)
 
 generic-gcc:
 	$(GENERIC_GCC_COMPILE)
 
 generic-gcc-install: generic-gcc
-	cp libhoard.so $(DESTDIR)$(PREFIX)
+	cp -p libhoard.so $(DESTDIR)$(PREFIX)
 
 Linux-gcc-arm:
 	$(LINUX_GCC_ARM_COMPILE)
@@ -226,7 +216,7 @@ Linux-gcc-x86_64:
 	$(LINUX_GCC_x86_64_COMPILE)
 
 Linux-gcc-x86_64-install: Linux-gcc-x86_64
-	cp libhoard.so $(DESTDIR)$(PREFIX)
+	cp -p libhoard.so $(DESTDIR)$(PREFIX)
 
 Linux-gcc-unknown:
 	$(LINUX_GCC_UNKNOWN_COMPILE)
@@ -282,7 +272,7 @@ SunOS-gcc-sparc-debug:
 Darwin-gcc-i386-debug:
 	$(MACOS_COMPILE_DEBUG)
 
-Darwin-gcc-arm-debug:
+Darwin-debug:
 	$(MACOS_COMPILE_DEBUG)
 
 Linux-gcc-x86_64-static:
