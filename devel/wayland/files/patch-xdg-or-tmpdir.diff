diff --git a/cursor/os-compatibility.c b/cursor/os-compatibility.c
index f2445ce..affd6a3 100644
--- a/cursor/os-compatibility.c
+++ b/cursor/os-compatibility.c
@@ -118,7 +118,7 @@ int
 os_create_anonymous_file(off_t size)
 {
 	static const char template[] = "/wayland-cursor-shared-XXXXXX";
-	const char *path;
+	char *path;
 	char *name;
 	size_t name_size;
 	int fd;
@@ -137,6 +137,12 @@ os_create_anonymous_file(off_t size)
 #endif
 	{
 		path = getenv("XDG_RUNTIME_DIR");
+#ifdef __APPLE__
+		if (!path || path[0] != '/') {
+			path = getenv("TMPDIR");
+			fprintf(stderr, "Using TMPDIR=\"%s\" instead of XDG_RUNTIME_DIR\n", path);
+		}
+#endif
 		if (!path || path[0] != '/') {
 			errno = ENOENT;
 			return -1;
diff --git a/src/wayland-client.c b/src/wayland-client.c
index 90fb9c7..fcb956b 100644
--- a/src/wayland-client.c
+++ b/src/wayland-client.c
@@ -1064,7 +1064,7 @@ connect_to_socket(const char *name)
 {
 	struct sockaddr_un addr;
 	socklen_t size;
-	const char *runtime_dir;
+	char *runtime_dir;
 	int name_size, fd;
 	bool path_is_absolute;
 
@@ -1076,8 +1076,18 @@ connect_to_socket(const char *name)
 	path_is_absolute = name[0] == '/';
 
 	runtime_dir = getenv("XDG_RUNTIME_DIR");
+#ifdef __APPLE__;
 	if (((!runtime_dir || runtime_dir[0] != '/') && !path_is_absolute)) {
+		runtime_dir = getenv("TMPDIR");
+		wl_log("Using TMPDIR=\"%s\" instead of XDG_RUNTIME_DIR\n", runtime_dir);
+	}
+#endif
+	if (((!runtime_dir || runtime_dir[0] != '/') && !path_is_absolute)) {
+#ifdef __APPLE__
+		wl_log("error: XDG_RUNTIME_DIR and/or TMPDIR are invalid or not set in the environment.\n");
+#else
 		wl_log("error: XDG_RUNTIME_DIR is invalid or not set in the environment.\n");
+#endif
 		/* to prevent programs reporting
 		 * "failed to create display: Success" */
 		errno = ENOENT;
diff --git a/src/wayland-server.c b/src/wayland-server.c
index 0e15da3..511fdf8 100644
--- a/src/wayland-server.c
+++ b/src/wayland-server.c
@@ -1606,14 +1606,25 @@ static int
 wl_socket_init_for_display_name(struct wl_socket *s, const char *name)
 {
 	int name_size;
-	const char *runtime_dir = "";
+	char *runtime_dir = "";
 	const char *separator = "";
 
 	if (name[0] != '/') {
 		runtime_dir = getenv("XDG_RUNTIME_DIR");
+#ifdef __APPLE__
 		if (!runtime_dir || runtime_dir[0] != '/') {
+			runtime_dir = getenv("TMPDIR");
+			wl_log("Using TMPDIR=\"%s\" instead of XDG_RUNTIME_DIR\n", runtime_dir);
+		}
+#endif
+		if (!runtime_dir || runtime_dir[0] != '/') {
+#ifdef __APPLE__
+			wl_log("error: XDG_RUNTIME_DIR and/or TMPDIR are invalid"
+			       " or not set in the environment\n");
+#else
 			wl_log("error: XDG_RUNTIME_DIR is invalid or not set in"
 			       " the environment\n");
+#endif
 
 			/* to prevent programs reporting
 			 * "failed to add socket: Success" */
diff --git a/tests/compositor-introspection-test.c b/tests/compositor-introspection-test.c
index 064d253..11f81e8 100644
--- a/tests/compositor-introspection-test.c
+++ b/tests/compositor-introspection-test.c
@@ -40,7 +40,14 @@ static const char *
 require_xdg_runtime_dir(void)
 {
 	char *val = getenv("XDG_RUNTIME_DIR");
+#ifdef __APPLE__
+	if (!val || val[0] != '/') {
+		val = getenv("TMPDIR");
+	}
+	assert(val && val[0] == '/' && "set $XDG_RUNTIME_DIR or $TMPDIR to run this test");
+#else
 	assert(val && val[0] == '/' && "set $XDG_RUNTIME_DIR to run this test");
+#endif
 
 	return val;
 }
diff --git a/tests/protocol-logger-test.c b/tests/protocol-logger-test.c
index a0ebd22..7748b68 100644
--- a/tests/protocol-logger-test.c
+++ b/tests/protocol-logger-test.c
@@ -40,7 +40,14 @@ static const char *
 require_xdg_runtime_dir(void)
 {
 	char *val = getenv("XDG_RUNTIME_DIR");
+#ifdef __APPLE__
+	if (!val || val[0] != '/') {
+		val = getenv("TMPDIR");
+	}
+	assert(val && val[0] == '/' && "set $XDG_RUNTIME_DIR or $TMPDIR to run this test");
+#else
 	assert(val && val[0] == '/' && "set $XDG_RUNTIME_DIR to run this test");
+#endif
 
 	return val;
 }
diff --git a/tests/socket-test.c b/tests/socket-test.c
index 78743dc..81df9a6 100644
--- a/tests/socket-test.c
+++ b/tests/socket-test.c
@@ -51,7 +51,14 @@ static const char *
 require_xdg_runtime_dir(void)
 {
 	char *val = getenv("XDG_RUNTIME_DIR");
+#ifdef __APPLE__
+	if (!val || val[0] != '/') {
+		val = getenv("TMPDIR");
+	}
+	assert(val && val[0] == '/' && "set $XDG_RUNTIME_DIR or $TMPDIR to run this test");
+#else
 	assert(val && val[0] == '/' && "set $XDG_RUNTIME_DIR to run this test");
+#endif
 
 	return val;
 }
diff --git a/tests/test-runner.c b/tests/test-runner.c
index 7a61ecb..65c6c8d 100644
--- a/tests/test-runner.c
+++ b/tests/test-runner.c
@@ -204,8 +204,15 @@ set_xdg_runtime_dir(void)
 static void
 rmdir_xdg_runtime_dir(void)
 {
-	const char *xrd_env = getenv("XDG_RUNTIME_DIR");
+	char *xrd_env = getenv("XDG_RUNTIME_DIR");
+#ifdef __APPLE__
+	if (!xrd_env || xrd_env[0] != '/') {
+		xrd_env = getenv("TMPDIR");
+	}
+	assert(xrd_env && xrd_env[0] == '/' && "No XDG_RUNTIME_DIR nor TMPDIR set");
+#else
 	assert(xrd_env && xrd_env[0] == '/' && "No XDG_RUNTIME_DIR set");
+#endif
 
 	/* rmdir may fail if some test didn't do clean up */
 	if (rmdir(xrd_env) == -1)
