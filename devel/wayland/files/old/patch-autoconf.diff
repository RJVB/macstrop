--- orig.configure.ac	2017-02-21 22:15:19.000000000 +0100
+++ configure.ac	2017-05-01 22:53:37.000000000 +0200
@@ -98,15 +98,15 @@
 
 if test "x$enable_libraries" = "xyes"; then
 	PKG_CHECK_MODULES(FFI, [libffi])
-	AC_CHECK_DECL(SFD_CLOEXEC,[],
-		      [AC_MSG_ERROR("SFD_CLOEXEC is needed to compile wayland libraries")],
-		      [[#include <sys/signalfd.h>]])
-	AC_CHECK_DECL(TFD_CLOEXEC,[],
-		      [AC_MSG_ERROR("TFD_CLOEXEC is needed to compile wayland libraries")],
-		      [[#include <sys/timerfd.h>]])
-	AC_CHECK_DECL(CLOCK_MONOTONIC,[],
-		      [AC_MSG_ERROR("CLOCK_MONOTONIC is needed to compile wayland libraries")],
-		      [[#include <time.h>]])
+dnl 	AC_CHECK_DECL(SFD_CLOEXEC,[],
+dnl 		      [AC_MSG_ERROR("SFD_CLOEXEC is needed to compile wayland libraries")],
+dnl 		      [[#include <sys/signalfd.h>]])
+dnl 	AC_CHECK_DECL(TFD_CLOEXEC,[],
+dnl 		      [AC_MSG_ERROR("TFD_CLOEXEC is needed to compile wayland libraries")],
+dnl 		      [[#include <sys/timerfd.h>]])
+dnl 	AC_CHECK_DECL(CLOCK_MONOTONIC,[],
+dnl 		      [AC_MSG_ERROR("CLOCK_MONOTONIC is needed to compile wayland libraries")],
+dnl 		      [[#include <time.h>]])
 	AC_CHECK_HEADERS([execinfo.h])
 fi
 
--- orig.Makefile.am	2017-02-07 23:59:06.000000000 +0100
+++ Makefile.am	2017-05-01 23:09:49.000000000 +0200
@@ -73,7 +73,7 @@
 	protocol/wayland-client-protocol.h
 
 libwayland_server_la_CFLAGS = $(FFI_CFLAGS) $(AM_CFLAGS) -pthread
-libwayland_server_la_LIBADD = $(FFI_LIBS) libwayland-private.la libwayland-util.la -lrt -lm
+libwayland_server_la_LIBADD = $(FFI_LIBS) libwayland-private.la libwayland-util.la  -lm
 libwayland_server_la_LDFLAGS = -version-info 1:0:1
 libwayland_server_la_SOURCES =			\
 	src/wayland-server.c			\
@@ -85,7 +85,7 @@
 	protocol/wayland-protocol.c
 
 libwayland_client_la_CFLAGS = $(FFI_CFLAGS) $(AM_CFLAGS) -pthread
-libwayland_client_la_LIBADD = $(FFI_LIBS) libwayland-private.la libwayland-util.la -lrt -lm
+libwayland_client_la_LIBADD = $(FFI_LIBS) libwayland-private.la libwayland-util.la  -lm
 libwayland_client_la_LDFLAGS = -version-info 3:0:3
 libwayland_client_la_SOURCES =			\
 	src/wayland-client.c
@@ -144,135 +144,135 @@
 	-DICONDIR=\"$(ICONDIR)\"
 
 
-built_test_programs =				\
-	array-test				\
-	client-test				\
-	display-test				\
-	connection-test				\
-	event-loop-test				\
-	fixed-test				\
-	interface-test				\
-	list-test				\
-	map-test				\
-	os-wrappers-test			\
-	sanity-test				\
-	socket-test				\
-	queue-test				\
-	signal-test				\
-	newsignal-test				\
-	resources-test				\
-	message-test				\
-	headers-test				\
-	compositor-introspection-test		\
-	protocol-logger-test
-
-if ENABLE_CPP_TEST
-built_test_programs += cpp-compile-test
-endif
-
-AM_TESTS_ENVIRONMENT =							\
-	export WAYLAND_SCANNER='$(top_builddir)/wayland-scanner'	\
-	TEST_DATA_DIR='$(top_srcdir)/tests/data'			\
-	TEST_OUTPUT_DIR='$(top_builddir)/tests/output'			\
-	SED=$(SED)							\
-	;
-
-TESTS = $(built_test_programs)			\
-	tests/scanner-test.sh
-
-noinst_PROGRAMS =				\
-	$(built_test_programs)			\
-	exec-fd-leak-checker			\
-	fixed-benchmark
-
-noinst_LTLIBRARIES += libtest-runner.la
-
-libtest_runner_la_SOURCES =			\
-	tests/test-runner.c			\
-	tests/test-runner.h			\
-	tests/test-helpers.c			\
-	tests/test-compositor.h			\
-	tests/test-compositor.c
-libtest_runner_la_LIBADD =			\
-	libwayland-private.la			\
-	libwayland-util.la			\
-	libwayland-client.la			\
-	libwayland-server.la			\
-	-lrt -ldl $(FFI_LIBS)
-
-
-array_test_SOURCES = tests/array-test.c
-array_test_LDADD = libtest-runner.la
-client_test_SOURCES = tests/client-test.c
-client_test_LDADD = libtest-runner.la
-display_test_SOURCES = tests/display-test.c
-display_test_LDADD = libtest-runner.la
-connection_test_SOURCES = tests/connection-test.c
-connection_test_LDADD = libtest-runner.la
-event_loop_test_SOURCES = tests/event-loop-test.c
-event_loop_test_LDADD = libtest-runner.la
-fixed_test_SOURCES = tests/fixed-test.c
-fixed_test_LDADD = libtest-runner.la
-interface_test_SOURCES = tests/interface-test.c
-interface_test_LDADD = libtest-runner.la
-list_test_SOURCES = tests/list-test.c
-list_test_LDADD = libtest-runner.la
-map_test_SOURCES = tests/map-test.c
-map_test_LDADD = libtest-runner.la
-sanity_test_SOURCES = tests/sanity-test.c
-sanity_test_LDADD = libtest-runner.la
-socket_test_SOURCES = tests/socket-test.c
-socket_test_LDADD = libtest-runner.la
-queue_test_SOURCES = tests/queue-test.c
-queue_test_LDADD = libtest-runner.la
-signal_test_SOURCES = tests/signal-test.c
-signal_test_LDADD = libtest-runner.la
-# wayland-server.c is needed here to access wl_priv_* functions
-newsignal_test_SOURCES = tests/newsignal-test.c src/wayland-server.c
-newsignal_test_LDADD = libtest-runner.la
-resources_test_SOURCES = tests/resources-test.c
-resources_test_LDADD = libtest-runner.la
-message_test_SOURCES = tests/message-test.c
-message_test_LDADD = libtest-runner.la
-compositor_introspection_test_SOURCES = tests/compositor-introspection-test.c
-compositor_introspection_test_LDADD = libtest-runner.la
-protocol_logger_test_SOURCES = tests/protocol-logger-test.c
-protocol_logger_test_LDADD = libtest-runner.la
-headers_test_SOURCES = tests/headers-test.c \
-		       tests/headers-protocol-test.c \
-		       tests/headers-protocol-core-test.c
-headers_test_LDADD = libtest-runner.la
-nodist_headers_test_SOURCES =			\
-	protocol/wayland-server-protocol-core.h	\
-	protocol/wayland-client-protocol-core.h
-
-if ENABLE_CPP_TEST
-cpp_compile_test_SOURCES = tests/cpp-compile-test.cpp
-endif
-
-fixed_benchmark_SOURCES = tests/fixed-benchmark.c
-fixed_benchmark_LDADD = libtest-runner.la
-
-os_wrappers_test_SOURCES = tests/os-wrappers-test.c
-os_wrappers_test_LDADD = libtest-runner.la
-
-exec_fd_leak_checker_SOURCES = tests/exec-fd-leak-checker.c
-exec_fd_leak_checker_LDADD = libtest-runner.la
-
-EXTRA_DIST += tests/scanner-test.sh			\
-	tests/data/example.xml				\
-	tests/data/example-client.h			\
-	tests/data/example-server.h			\
-	tests/data/example-code.c			\
-	tests/data/small.xml				\
-	tests/data/small-code.c				\
-	tests/data/small-client.h			\
-	tests/data/small-server.h			\
-	tests/data/small-code-core.c			\
-	tests/data/small-client-core.h			\
-	tests/data/small-server-core.h
-
-tests/scanner-test.sh: $(top_builddir)/wayland-scanner
+# built_test_programs =				\
+# 	array-test				\
+# 	client-test				\
+# 	display-test				\
+# 	connection-test				\
+# 	event-loop-test				\
+# 	fixed-test				\
+# 	interface-test				\
+# 	list-test				\
+# 	map-test				\
+# 	os-wrappers-test			\
+# 	sanity-test				\
+# 	socket-test				\
+# 	queue-test				\
+# 	signal-test				\
+# 	newsignal-test				\
+# 	resources-test				\
+# 	message-test				\
+# 	headers-test				\
+# 	compositor-introspection-test		\
+# 	protocol-logger-test
+# 
+# if ENABLE_CPP_TEST
+# built_test_programs += cpp-compile-test
+# endif
+
+# AM_TESTS_ENVIRONMENT =							\
+# 	export WAYLAND_SCANNER='$(top_builddir)/wayland-scanner'	\
+# 	TEST_DATA_DIR='$(top_srcdir)/tests/data'			\
+# 	TEST_OUTPUT_DIR='$(top_builddir)/tests/output'			\
+# 	SED=$(SED)							\
+# 	;
+# 
+# TESTS = $(built_test_programs)			\
+# 	tests/scanner-test.sh
+
+# noinst_PROGRAMS =				\
+# 	$(built_test_programs)			\
+# 	exec-fd-leak-checker			\
+# 	fixed-benchmark
+
+# noinst_LTLIBRARIES += libtest-runner.la
+# 
+# libtest_runner_la_SOURCES =			\
+# 	tests/test-runner.c			\
+# 	tests/test-runner.h			\
+# 	tests/test-helpers.c			\
+# 	tests/test-compositor.h			\
+# 	tests/test-compositor.c
+# libtest_runner_la_LIBADD =			\
+# 	libwayland-private.la			\
+# 	libwayland-util.la			\
+# 	libwayland-client.la			\
+# 	libwayland-server.la			\
+# 	$(FFI_LIBS)
+# 
+# 
+# array_test_SOURCES = tests/array-test.c
+# array_test_LDADD = libtest-runner.la
+# client_test_SOURCES = tests/client-test.c
+# client_test_LDADD = libtest-runner.la
+# display_test_SOURCES = tests/display-test.c
+# display_test_LDADD = libtest-runner.la
+# connection_test_SOURCES = tests/connection-test.c
+# connection_test_LDADD = libtest-runner.la
+# event_loop_test_SOURCES = tests/event-loop-test.c
+# event_loop_test_LDADD = libtest-runner.la
+# fixed_test_SOURCES = tests/fixed-test.c
+# fixed_test_LDADD = libtest-runner.la
+# interface_test_SOURCES = tests/interface-test.c
+# interface_test_LDADD = libtest-runner.la
+# list_test_SOURCES = tests/list-test.c
+# list_test_LDADD = libtest-runner.la
+# map_test_SOURCES = tests/map-test.c
+# map_test_LDADD = libtest-runner.la
+# sanity_test_SOURCES = tests/sanity-test.c
+# sanity_test_LDADD = libtest-runner.la
+# socket_test_SOURCES = tests/socket-test.c
+# socket_test_LDADD = libtest-runner.la
+# queue_test_SOURCES = tests/queue-test.c
+# queue_test_LDADD = libtest-runner.la
+# signal_test_SOURCES = tests/signal-test.c
+# signal_test_LDADD = libtest-runner.la
+# # wayland-server.c is needed here to access wl_priv_* functions
+# newsignal_test_SOURCES = tests/newsignal-test.c src/wayland-server.c
+# newsignal_test_LDADD = libtest-runner.la
+# resources_test_SOURCES = tests/resources-test.c
+# resources_test_LDADD = libtest-runner.la
+# message_test_SOURCES = tests/message-test.c
+# message_test_LDADD = libtest-runner.la
+# compositor_introspection_test_SOURCES = tests/compositor-introspection-test.c
+# compositor_introspection_test_LDADD = libtest-runner.la
+# protocol_logger_test_SOURCES = tests/protocol-logger-test.c
+# protocol_logger_test_LDADD = libtest-runner.la
+# headers_test_SOURCES = tests/headers-test.c \
+# 		       tests/headers-protocol-test.c \
+# 		       tests/headers-protocol-core-test.c
+# headers_test_LDADD = libtest-runner.la
+# nodist_headers_test_SOURCES =			\
+# 	protocol/wayland-server-protocol-core.h	\
+# 	protocol/wayland-client-protocol-core.h
+# 
+# if ENABLE_CPP_TEST
+# cpp_compile_test_SOURCES = tests/cpp-compile-test.cpp
+# endif
+# 
+# fixed_benchmark_SOURCES = tests/fixed-benchmark.c
+# fixed_benchmark_LDADD = libtest-runner.la
+# 
+# os_wrappers_test_SOURCES = tests/os-wrappers-test.c
+# os_wrappers_test_LDADD = libtest-runner.la
+# 
+# exec_fd_leak_checker_SOURCES = tests/exec-fd-leak-checker.c
+# exec_fd_leak_checker_LDADD = libtest-runner.la
+# 
+# EXTRA_DIST += tests/scanner-test.sh			\
+# 	tests/data/example.xml				\
+# 	tests/data/example-client.h			\
+# 	tests/data/example-server.h			\
+# 	tests/data/example-code.c			\
+# 	tests/data/small.xml				\
+# 	tests/data/small-code.c				\
+# 	tests/data/small-client.h			\
+# 	tests/data/small-server.h			\
+# 	tests/data/small-code-core.c			\
+# 	tests/data/small-client-core.h			\
+# 	tests/data/small-server-core.h
+# 
+# tests/scanner-test.sh: $(top_builddir)/wayland-scanner
 
 clean-local:
 	-rm -rf tests/output
