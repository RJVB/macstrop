# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           meson 1.0
set LTO.allow_ThinLTO no
PortGroup           LTO 1.0

name                wayland
categories          devel graphics
maintainers         gmail.com:rjvbertin
license             MIT
homepage            https://wayland.freedesktop.org
use_xz              yes
platforms           darwin

depends_build-append    port:pkgconfig

patch.pre_args      -Np1

subport wayland-protocols {
    PortGroup           gitlab 1.0
    gitlab.instance     https://gitlab.freedesktop.org
    # somewhat arbitrary version clamp to prevent errors building/running the tests
    # (and who knows what errors in projects using the protocols)
    gitlab.setup        wayland wayland-protocols 1.23

    description         wayland protocols
    long_description    ${description}
    checksums           rmd160  6496f81976fee57131557214fb23ab119abe1b5e \
                        sha256  b860c692ff83b4bd6251dc74c579ced3a68ec0743b7af801ef3f501da3fde330
#                         size    75435

    supported_archs     noarch
    installs_libs       no

    depends_build-append port:wayland
    depends_run-append  port:wayland

    # our wayland-scanner fails to generate certain xdg_?? structures (incl. xdg_toplevel_interface)
    # so link the tests in flat_namespace with `-undefined warning` (and let the corresponding tests fail).
    patchfiles-append   patch-wprots-undefined-warn.diff

    build.pre_args-prepend -k 0

    post-destroot {
        file rename ${destroot}${prefix}/share/pkgconfig/wayland-protocols.pc ${destroot}${prefix}/lib/pkgconfig
    }

    test.run            yes
    test.pre_args-prepend -k 0

    livecheck.url       https://wayland.freedesktop.org/releases.html
    livecheck.regex     "${subport}-(\\d+(?:\\.\\d+)*)"
}

if {${subport} eq "wayland"} {
    if {${os.platform} eq "darwin"} {
        # Port implementation courtesy @barracuda156
        PortGroup           github 1.0
        PortGroup           legacysupport 1.1

        # CLOCK_MONOTONIC
        legacysupport.newest_darwin_requires_legacy 15

        github.setup        XQuartz wayland 04654ba7b57ccbf583db899a327f8f7000f90546
        version             1.21.0.40
        categories          devel graphics
        license             MIT
        maintainers         nomaintainer
        description         Core Wayland protocol and libraries
        long_description    Wayland is intended as a simpler replacement for X \
                            easier to develop and maintain. GTk, Qt, GNOME and KDE have backends for it.
        homepage            http://wayland.freedesktop.org

        fetch.type          git
        distname            ${name}-git
#         checksums           rmd160  bb764639d4eeabf3f613196a53a400fb54a1e7b3 \
#                             sha256  2d168e637a62350bbfc1535931d7e6d34893de30bb710c7d1bf87dc14eeeb38c \
#                             size    351832
#         github.tarball_from archive

        depends_build-append \
                            path:bin/cmake:cmake

        depends_lib-append  port:epoll-shim \
                            port:libffi \
                            port:libxml2

        patchfiles-append   0001-Darwin-fixes-from-owl-compositor.patch \
                            0002-wayland-os.c-LOCAL_PEERPID-may-not-be-defined.patch \
                            0003-os-wrappers-test-F_DUPFD_CLOEXEC-may-not-be-defined.patch \
                            patch-darwin-dylib-versions.diff

        # stdatomic.h
        compiler.c_standard 2011

        configure.args-append \
                            -Ddocumentation=false \
                            -Ddtd_validation=true \
                            -Dlibraries=true \
                            -Dscanner=true \
                            -Dtests=true

        test.run            yes

        github.livecheck.branch darwin-portability

        variant docs description {} {
            configure.args-replace \
                            -Ddocumentation=false \
                            -Ddocumentation=true
        }
        installs_libs       yes
    } else {
        version         0
        PortGroup       stub 1.0
        pre-fetch {
            ui_error "This port has a proper Unix-specific implementation in the LinuxPorts tree"
            return -code error "Unsupported platform"
        }
    }
}

meson.save_configure_cmd    "install log"
