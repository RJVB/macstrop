# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:et:fenc=utf-8::et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           active_variants 1.1
platform darwin {
    PortGroup       legacysupport 1.1
    # Availability.h
    legacysupport.newest_darwin_requires_legacy 8
}
if {[variant_isset universal]} {
    set LTO.LTO.maybe_ForceLD yes
}
set LTO.allow_ThinLTO   no
PortGroup           LTO 1.0
PortGroup           save_configure_cmd 1.0

name                hwloc
set branch          2.12
version             ${branch}.0
epoch               1
categories          devel
platforms           darwin
maintainers         {i0ntempest @i0ntempest} openmaintainer
description         Portable Hardware Locality
license             BSD

long_description \
    The Portable Hardware Locality (hwloc) software package provides a \
    portable abstraction (across OS, versions, architectures, ...) of \
    the hierarchical topology of modern architectures, including NUMA \
    memory nodes, sockets, shared caches, cores and simultaneous \
    multithreading.

homepage            https://www.open-mpi.org/projects/hwloc/
master_sites        https://www.open-mpi.org/software/hwloc/v${branch}/downloads/

use_bzip2           yes
checksums           rmd160  4e0de87e68205fd82bf4cdc792c08a549debc8e4 \
                    sha256  06a0a2bdc0a5714e839164683846a0e936a896213758e9d37e49e232b89c58d4
#                     size    5624806

depends_build       port:pkgconfig
depends_lib-append  port:libxml2
configure.args      --without-x \
                    --disable-cairo \
                    --disable-cuda \
                    --disable-opencl

configure.checks.implicit_function_declaration.whitelist-append strchr

test.run            yes
test.target         check

livecheck.type      regex
livecheck.regex     "${name} (\[0-9.\]+)"

variant cuda description {Enable CUDA support} {
    configure.args-replace  --disable-cuda --enable-cuda
}

variant opencl description {Enable OpenCL support - interesting for AMD & NVidia GPUs only!} {
    configure.args-replace  --disable-opencl --enable-opencl
}

variant gui description {Add graphical output capability} {
    depends_lib-append      path:lib/pkgconfig/cairo.pc:cairo \
                            port:xorg-libX11
    require_active_variants path:lib/pkgconfig/cairo.pc:cairo x11
    configure.args-replace  --without-x --with-x
    configure.args-replace  --disable-cairo --enable-cairo
    configure.args-append   --x-includes=${prefix}/include/X11
    platform darwin {
        depends_lib-append  port:xorg-libice \
                            port:xorg-libsm
        configure.args-append \
                            --x-libraries=${prefix}/lib
    }
}

notes {
  * GUI support is now disabled by default. It can be enabled via variant gui.
  * OpenCL and CUDA support is now disabled by default. It can be enabled by variants\
  opencl and cuda, respectively.
}
