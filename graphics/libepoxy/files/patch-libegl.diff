diff --git test/egl_without_glx.c.orig test/egl_without_glx.c
index 195ef41..cf5c786 100644
--- test/egl_without_glx.c.orig
+++ test/egl_without_glx.c
@@ -31,6 +31,7 @@
  */
 
 #define _GNU_SOURCE
+#define _DARWIN_C_SOURCE
 
 #include <stdio.h>
 #include <string.h>
@@ -83,7 +84,11 @@ static EGLenum extra_error = EGL_SUCCESS;
 static EGLBoolean
 override_eglBindAPI(EGLenum api)
 {
+#ifdef __APPLE__
+    void *egl = dlopen("/opt/local/lib/libEGL.1.dylib", RTLD_LAZY | RTLD_LOCAL);
+#else
     void *egl = dlopen("libEGL.so.1", RTLD_LAZY | RTLD_LOCAL);
+#endif
     EGLBoolean (*real_eglBindAPI)(EGLenum api) = dlsym(egl, "eglBindAPI");
 
     last_api = api;
@@ -104,7 +109,11 @@ override_eglBindAPI(EGLenum api)
 static EGLint
 override_eglGetError(void)
 {
+#ifdef __APPLE__
+    void *egl = dlopen("/opt/local/lib/libEGL.1.dylib", RTLD_LAZY | RTLD_LOCAL);
+#else
     void *egl = dlopen("libEGL.so.1", RTLD_LAZY | RTLD_LOCAL);
+#endif
     EGLint (*real_eglGetError)(void) = dlsym(egl, "eglGetError");
 
     if (extra_error != EGL_SUCCESS) {
diff --git src/dispatch_common.c.orig src/dispatch_common.c
index 6b1a130..b7953f7 100644
--- src/dispatch_common.c.orig
+++ src/dispatch_common.c
@@ -176,8 +176,9 @@
 #if defined(__APPLE__)
 #define GLX_LIB "@PREFIX@/lib/libGL.1.dylib"
 #define OPENGL_LIB "/System/Library/Frameworks/OpenGL.framework/Versions/Current/OpenGL"
-#define GLES1_LIB "libGLESv1_CM.so"
-#define GLES2_LIB "libGLESv2.so"
+#define EGL_LIB "@PREFIX@/lib/libEGL.1.dylib"
+#define GLES1_LIB "@PREFIX@/lib/libGLESv1_CM.1.dylib"
+#define GLES2_LIB "@PREFIX@/lib/libGLESv2.2.dylib"
 #elif defined(__ANDROID__)
 #define GLX_LIB "libGLESv2.so"
 #define EGL_LIB "libEGL.so"
diff --git test/dlwrap.c.orig test/dlwrap.c
index c0c24c2..461d085 100644
--- test/dlwrap.c.orig
+++ test/dlwrap.c
@@ -64,10 +64,16 @@ static struct libwrap {
     const char *symbol_prefix;
     void *handle;
 } wrapped_libs[] = {
+#ifdef __APPLE__
+    { "@PREFIX@/lib/libGL.dylib", "GL", NULL },
+    { "@PREFIX@/lib/libEGL.dylib", "EGL", NULL },
+    { "@PREFIX@/lib/libGLESv2.dylib", "GLES2", NULL },
+#else
     { "libGL.so", "GL", NULL },
     { "libEGL.so", "EGL", NULL },
     { "libGLESv2.so", "GLES2", NULL },
     { "libOpenGL.so", "GL", NULL},
+#endif
 };
 
 /* Match 'filename' against an internal list of libraries for which
@@ -320,6 +326,11 @@ override_EGL_eglGetProcAddress(const char *name)
             return symbol;
     }
 
+#ifdef __APPLE__
+    return DEFER_TO_GL("@PREFIX@/lib/libEGL.1.dylib", override_EGL_eglGetProcAddress,
+                       "eglGetProcAddress", (name));
+#else
     return DEFER_TO_GL("libEGL.so.1", override_EGL_eglGetProcAddress,
                        "eglGetProcAddress", (name));
+#endif
 }
