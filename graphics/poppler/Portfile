# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           gobject_introspection 1.0
PortGroup           LTO 1.0
PortGroup           cmake 1.1
platform darwin {
    PortGroup       legacysupport 1.1
}
if {${subport} ne "popper-qt5"} {
    PortGroup       preserve_runtime_libraries 1.0
}

name                poppler
conflicts           poppler-devel xpdf-tools
set my_name         poppler
version             24.01.0

categories          graphics
license             GPL-2+
maintainers         {devans @dbevans} {mascguy @mascguy} openmaintainer

description         Poppler is a PDF rendering library based on the xpdf-3.0 code base.
long_description    {*}${description}
homepage            https://poppler.freedesktop.org/

master_sites        ${homepage}
distname            ${my_name}-${version}
dist_subdir         ${my_name}
use_xz              yes

checksums           rmd160  f18cff10c9066c5b499749e25b89fd2d77a9e749 \
                    sha256  c7def693a7a492830f49d497a80cc6b9c85cb57b15e9be2d2d615153b79cae08
#                     size    1895736

if {${os.platform} eq "darwin"} {
    set py_ver      3.11
} else {
    set py_ver      3.9
}

set py_ver_nodot    [string map {. {}} ${py_ver}]

depends_build-append \
                    port:pkgconfig \
                    port:python${py_ver_nodot}

depends_lib-append \
                    port:bzip2 \
                    path:lib/pkgconfig/cairo.pc:cairo \
                    port:curl \
                    port:expat \
                    port:freetype \
                    path:lib/pkgconfig/glib-2.0.pc:glib2 \
                    port:gpgme \
                    port:lcms2 \
                    port:libiconv \
                    path:include/turbojpeg.h:libjpeg-turbo \
                    port:libpng \
                    port:nss \
                    port:openjpeg \
                    port:poppler-data \
                    port:tiff \
                    port:zlib
platform darwin {
    depends_lib-append \
                    port:fontconfig
}

# remove top-level paths, such that internal headers and
# libraries are used instead of any already-installed ones.
configure.ldflags-delete \
                    -L${prefix}/lib
configure.cppflags-delete \
                    -I${prefix}/include

configure.ldflags-append \
                    -liconv
gobject_introspection yes

compiler.cxx_standard 2017
compiler.c_standard   2011
compiler.thread_local_storage yes

# match clang, not strequal
patchfiles-append   patch-cmake_modules_PopplerMacros.cmake.diff

# fix header include path ordering for gobject-introspection call to
# be source / build first, then system, as best can be determined
patchfiles-append   patch-glib_CMakeFiles.txt-fix-include-ordering.diff

# Relax overly modern requirements to allow to build against older deps
patchfiles-append   patch-allow-older-deps.diff

if {${configure.compiler} eq "macports-gcc-7"} {
    patchfiles-append \
                    patch-poppler-gcc7-noexcept.diff
}

cmake.save_configure_cmd "install log"

configure.args-append \
                    -DBUILD_CPP_TESTS=OFF \
                    -DBUILD_GTK_TESTS=OFF \
                    -DBUILD_MANUAL_TESTS=OFF \
                    -DBUILD_QT5_TESTS=OFF \
                    -DBUILD_QT6_TESTS=OFF \
                    -DENABLE_BOOST=OFF \
                    -DENABLE_QT5=OFF \
                    -DENABLE_QT6=OFF \
                    -DENABLE_UNSTABLE_API_ABI_HEADERS=ON \
                    -DGLIB2_MKENUMS_PYTHON=${prefix}/bin/python${py_ver} \
                    -DRUN_GPERF_IF_PRESENT=OFF \
                    -DWITH_NSS3=ON

# # Poppler cmake doesn't understand build type "MacPorts"; use release unless +debug is set
# if {[variant_isset debug]} {
#     cmake.build_type Debug
# } else {
#     cmake.build_type RelWithDebInfo
# }

variant boost conflicts boost171 description "Use Boost when building the Splash graphics backend" {
    PortGroup boost 1.0

    boost.version 1.76
    configure.args-replace \
                    -DENABLE_BOOST=OFF \
                    -DENABLE_BOOST=ON
}

variant boost171 conflicts boost description "Use Boost when building the Splash graphics backend" {
    PortGroup boost 1.0

    boost.version 1.71
    configure.args-replace \
                    -DENABLE_BOOST=OFF \
                    -DENABLE_BOOST=ON
}

if {![variant_isset boost171]} {
    default_variants-append +boost
}

subport ${name}-qt5 {
    PortGroup qt5 1.0

    # Builds with Qt 5.8 (requires toSecsSinceEpoch and fromSecsSinceEpoch)
    # despite CMakeLists.txt in poppler 23.01 saying 5.12 is required
    # (no longer at this moment because corrected via a patch above)
    qt5.min_version 5.8

    configure.env-append \
                    MOCQT5=${qt_bins_dir}/moc
    configure.args-delete \
                    -DENABLE_QT5=OFF
    platform darwin {
        configure.args-delete \
                    -DENABLE_XPDF_HEADERS=ON
    }
    configure.args-append \
                    -DENABLE_CPP=OFF \
                    -DENABLE_GLIB=OFF \
                    -DENABLE_UTILS=OFF

    post-destroot {
        file delete ${destroot}${prefix}/lib/pkgconfig/poppler-cairo.pc
        if {[variant_exists preserve_runtime_libraries] && [variant_isset preserve_runtime_libraries]} {
           if {![catch {set installed [lindex [registry_active ${subport}] 0]}]} {
                set _version [lindex $installed 1]
                # check if the (or a) previous port version is active
                if {[vercmp $_version ${version}] <= 0} {
                    # move new interface lib aside
                    if {${os.platform} eq "darwin"} {
                        file rename ${destroot}${prefix}/lib/libpoppler-qt5.1.dylib \
                            ${destroot}${prefix}/lib/libpoppler-qt5.1n.dylib
                        # make sure the linker editor is aware of the rename trick we're pulling
                        system "install_name_tool -id ${prefix}/lib/libpoppler-qt5.1n.dylib \
                            ${destroot}${prefix}/lib/libpoppler-qt5.1n.dylib"
                        # update link library
                        ln -sf libpoppler-qt5.1n.dylib ${destroot}${prefix}/lib/libpoppler-qt5.dylib
                    } else {
                        file rename ${destroot}${prefix}/lib/libpoppler-qt5.so.1 \
                            ${destroot}${prefix}/lib/libpoppler-qt5.so.1n
                        # update link library
                        ln -sf libpoppler-qt5.so.1n ${destroot}${prefix}/lib/libpoppler-qt5.so
                    }
                    # install pointer to old runtime which had only a single version interfix
                    # so that dependents can continue to use that previous version.
                    preserve_libraries ${prefix}/lib "libpoppler-qt5.1.dylib libpoppler-qt5.so.*"
                }
           }
        } else {
            # check if the user possibly was using +preserve_runtime_libraries before,
            # as evidenced by the presence of the renamed interface lib.
            ## NB: no need for platform checking with this approach! :)
            if {[file exists ${prefix}/lib/libpoppler-qt5.1n.dylib]} {
                # make sure any applications currently depending on the renamed library
                # continue to work without rebuilding. We don't have to without the
                # +preserve_runtime_libraries variant set but adding a simple symlink
                # to what should be an ABI-compatible library is cheap and most likely safe.
                # (Apps will use the new version just like they would with a rebuild.)
                ln -sf libpoppler-qt5.1.dylib ${destroot}${prefix}/lib/libpoppler-qt5.1n.dylib
            }
            if {[file exists ${prefix}/lib/libpoppler-qt5.so.1n]} {
                ln -sf libpoppler-qt5.so.1 ${destroot}${prefix}/lib/libpoppler-qt5.so.1n
            }
        }
    }
}

if {${subport} ne ${name}} {
    depends_extract-append \
                    port:git

    depends_lib-append \
                    port:${name}

    post-extract {
        system -W ${workpath} \
                    "${prefix}/bin/git clone --depth=1 https://anongit.freedesktop.org/git/poppler/test"
    }

# currently poppler only provides unit tests for the Qt wrappers

    test.run    yes
    test.dir    test
    test.target test

    post-destroot {
        foreach dot_h [glob -nocomplain -directory ${destroot}${prefix}/include/poppler *.h] {
            delete ${dot_h}
        }
        foreach libpoppler [glob -nocomplain ${destroot}${prefix}/lib/libpoppler.*] {
            delete ${libpoppler}
        }
        delete  ${destroot}${prefix}/include/poppler/fofi \
                ${destroot}${prefix}/include/poppler/goo \
                ${destroot}${prefix}/include/poppler/splash \
                ${destroot}${prefix}/lib/pkgconfig/poppler-splash.pc \
                ${destroot}${prefix}/lib/pkgconfig/poppler.pc
    }
} else {
#     # generation of Poppler-0.18.gir fails if previous version of poppler is active
#     # appropriate for main poppler port only
#     if {[tbool gobject_introspection]} {
#         conflicts_build ${name}
#     }
    post-destroot {
        preserve_libraries ${prefix}/lib "libpoppler.*.dylib libpoppler.so.*"
    }
}


livecheck.type      regex
livecheck.url       ${homepage}
livecheck.regex     "${my_name}-(\\d+(?:\\.\\d+)*)${extract.suffix}"
