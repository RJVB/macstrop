# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 118682 2014-04-08 02:56:30Z ryandesign@macports.org $
# $Id: Portfile 152719 2016-09-15 11:06:06Z ryandesign@macports.org $

PortSystem                  1.0
PortGroup                   LTO 1.0
PortGroup                   save_configure_cmd 1.0

name                        fontconfig

subport "${name}-ultimate" {
    supported_archs         noarch
}

categories                  graphics
platforms                   darwin

set INFRELEASE              2016-08-18
set INFPATCHRELEASE         ${INFRELEASE}
# we're using locally adapted patches for 2.12.6 that haven't been upstreamed yet
set INFPATCHRELEASE         2017-12-31
set INFPATCHES              {01-configure.patch \
                            02-configure.ac.patch \
                            03-Makefile.in.patch \
                            04-Makefile-20160818.conf.d.patch \
                            05-Makefile.am.in.patch}


if {${subport} eq "${name}-ultimate"} {
    PortGroup                   github 1.0
    github.setup                archfan infinality_bundle d6833003fddbb7c19fa787e8ecb4d55d8b2d91ee
    fetch.type                  git
    name                        fontconfig-ultimate
    version                     2.7.1.10
    revision                    1
    epoch                       2
    notes-append                "This installs the ${INFRELEASE} patches and config files for FontConfig to work with FreeType Infinality"
    license                     MIT
    homepage                    http://bohoomil.com
    platforms                   darwin

    description                 fontconfig-infinality-ultimate & fonts

    long_description            Fontconfig is a library for configuring and \
                                customising font access. Fontconfig-ultimate is a collection \
                                of configuration files that leverage the power of the Infinality \
                                patches to FreeType to provide the ultimate experience in \
                                customisable font rendering quality. \
                                This port provides the configuration files and fontconfig patches\; \
                                it requires fontconfig to be installed with the +infinality variant.
    installs_libs               no
    supported_archs             noarch

    distname                    fontconfig-ultimate-git
    worksrcdir                  ${distname}

    if {${fetch.type} ne "git"} {
        checksums               rmd160  6bf78fd7fb2c4d757ada89626310e513714f4fc7 \
                                sha256  662478aa39b01014a3e9f15a37f54be4463ae147d5260d2379aeb5c8d22b30a4
    }

    depends_lib                 port:freetype-infinality
    platform darwin {
        depends_run             port:bash
    }

    post-extract {
        # unpack the embedded archive
        system -W ${worksrcpath}/ "bsdtar -xvf 02_fontconfig-iu/${distname}.tar.bz2"
    }

    use_configure               no
    # this appears to be required despite an empty build block!
    build.cmd                   echo
    configure {}
    build {}
    patchfiles                  patch-presets-nocolours.diff

    post-destroot {
        xinstall -m 0755 -d ${destroot}${prefix}/share/fonts/fontconfig-ultimate/${INFRELEASE}
        copy ${worksrcpath}/${distname}/conf.d.infinality ${destroot}${prefix}/share/fonts/fontconfig-ultimate/${INFRELEASE}
        copy ${worksrcpath}/02_fontconfig-iu/CHANGELOG ${destroot}${prefix}/share/fonts/fontconfig-ultimate/${INFRELEASE}
        foreach f {fc-presets fonts-settings free ms} {
            copy ${worksrcpath}/${distname}/fontconfig_patches/${f} ${destroot}${prefix}/share/fonts/fontconfig-ultimate/${INFRELEASE}
        }
        reinplace "s|\"/etc|\"${prefix}/etc|g" ${destroot}${prefix}/share/fonts/fontconfig-ultimate/${INFRELEASE}/fc-presets
        platform darwin {
            reinplace "s|/bin/bash|${prefix}/bin/bash|g" ${destroot}${prefix}/share/fonts/fontconfig-ultimate/${INFRELEASE}/fc-presets
        }
        copy ${worksrcpath}/${distname}/fontconfig_patches/combi ${destroot}${prefix}/share/fonts/fontconfig-ultimate/${INFRELEASE}/combi-complete
        copy ${worksrcpath}/${distname}/doc/fontconfig-infinality-ultimate/fontconfig-global/combi-minimal ${destroot}${prefix}/share/fonts/fontconfig-ultimate/${INFRELEASE}/combi-minimal
        ln -s combi-minimal ${destroot}${prefix}/share/fonts/fontconfig-ultimate/${INFRELEASE}/combi
#         copy -force ${worksrcpath}/fontconfig_patches/00-upstream_2.11.93.patch ${filespath}/
        foreach f ${INFPATCHES} {
            xinstall -m 755 -d ${filespath}/ultimate
            copy -force ${worksrcpath}/${distname}/fontconfig_patches/${f} ${filespath}/ultimate/${f}.${INFRELEASE}
        }
#         # patch a patchfile that was written for fontconfig 2.11.95
#         system -W ${filespath} "patch -Np0 -i patch-04-for-fc1121.diff"
    }

    notes-append "fontconfig must be now be (re)build and (re)installed with the +infinality variant."
    notes-append "Use the fc-presets utility to select one of the presets; edit the symlink at\
    ${prefix}/share/fonts/fontconfig-ultimate/${INFRELEASE}/combi to chose between the minimal and the complete\
    \"combi\" presets"

    livecheck.type              none
} else {
    PortGroup                   muniversal 1.0

    set fversion                2.12.6
    version                     ${fversion}
    revision                    1
    maintainers                 ryandesign
    license                     fontconfig
    homepage                    https://www.freedesktop.org/wiki/Software/fontconfig/
    platforms                   darwin
    use_parallel_build          yes

    description                 An XML-based font configuration API (originally) for X Windows

    long_description            Fontconfig is a library for configuring and \
                                customising font access.

    homepage                    https://www.freedesktop.org/wiki/Software/fontconfig/
    master_sites                https://www.freedesktop.org/software/fontconfig/release/
    use_bzip2                   yes

#     checksums                   rmd160  ea386456151f93fbdad5628d64bd975202217dcb \
#                                 sha256  668293fcc4b3c59765cdee5cee05941091c0879edcc24dfec5455ef83912e45c
    checksums                   rmd160  d6e7a5c0dbd658b39701fda897414640d032cdb1 \
                                sha256  cf0c30807d08f6a28ab46c61b8dbd55c97d2f292cf88f3a07d3384687f31f017

    depends_build               port:pkgconfig

    depends_lib                 port:libiconv \
                                port:expat \
                                port:freetype

    if {${os.platform} eq "darwin" && ${os.major} < 9} {
        set add_fonts           /usr/X11R6/lib/X11/fonts
    } else {
        set add_fonts           /usr/X11/lib/X11/fonts
    }
    lappend add_fonts           ${prefix}/share/fonts
    set docdir                  ${prefix}/share/doc/${name}

    # using p1 patches is going to make life easier with the Infinality patches:
    patch.pre_args              -p1
    patchfiles                  patch-disable-fcblanks-regen.diff \
                                patch-docbook-4.2.diff
    patchfiles-append           patch-src-fcweight.c.diff

    configure.args              --disable-silent-rules HASDOCBOOK=no

    # We put this into a pre-configure block so it can be evaluated _after_ platform selection.
    if {![variant_exists fromHost] || ![variant_isset fromHost]} {
        pre-configure {
            configure.args-append   --with-add-fonts=[join ${add_fonts} ,]
            # Fix building for older macOS versions via MACOSX_DEPLOYMENT_TARGET
            # https://github.com/macports/macports-ports/pull/802
            if {${os.platform} eq "darwin" && [vercmp $macosx_version 10.12] >= 0} {
                if {[vercmp $macosx_deployment_target 10.12] < 0 } {
                    ui_info "Disabling mkostemp for older versions of macOS..."
                    configure.args-append ac_cv_func_mkostemp=no
                }
            }
        }
    }

    set stub.fromHost_allow_pre_and_post yes

    post-destroot {
        if {[variant_exists fromHost] && [variant_isset fromHost]} {
            if {[file exists /usr/lib/x86_64-linux-gnu/libfontconfig.so.1]} {
                ln -s /usr/lib/x86_64-linux-gnu/libfontconfig.so.1 ${destroot}${prefix}/lib/
            } else {
                ln -s /usr/lib/libfontconfig.so.1 ${destroot}${prefix}/lib/
            }
        } else {
            xinstall -d ${destroot}${docdir}
            xinstall -m 0644 -W ${worksrcpath} \
                AUTHORS \
                COPYING \
                ChangeLog \
                NEWS \
                README \
                ${destroot}${docdir}

            if {[variant_isset infinality]} {
                catch {eval exec sh ${filespath}/install-conf-files.sh ${prefix} ${workpath} ${destroot} ${INFRELEASE}} result
                ui_debug "install-conf-files.sh : $result"
            }
        }
    }

    post-activate {
        # fc-cache can fail due to /Network/Library/Fonts being unavailable, so force success.
        system "${prefix}/bin/fc-cache -sv || true"
        system "${prefix}/bin/fc-cache -v || true"
    }

    pre-pkg {
        xinstall -m 0755 ${filespath}/postinstall ${package.scripts}/
        reinplace -locale C "s|@PREFIX@|${prefix}|g" ${package.scripts}/postinstall
        long_description-append  Install prefix: ${prefix}
    }

    platform macosx {
        lappend add_fonts       /Library/Fonts \
                                /Network/Library/Fonts \
                                /System/Library/Fonts
    }

    merger_arch_flag            no
    merger_arch_compiler        yes
    if {${os.arch} eq "i386"} {
        if { ${os.major} >= 10 } {
            set merger_configure_args(ppc) --with-arch=ppc
            set merger_configure_env(ppc)  CC_FOR_BUILD=${configure.cc}
        }
        set merger_configure_args(ppc64)   --with-arch=ppc64
        set merger_configure_env(ppc64)    CC_FOR_BUILD=${configure.cc}
    } else {
        set merger_configure_args(i386)    --with-arch=i386
        set merger_configure_args(x86_64)  --with-arch=x86_64
        set merger_configure_env(i386)     CC_FOR_BUILD=${configure.cc}
        set merger_configure_env(x86_64)   CC_FOR_BUILD=${configure.cc}
    }

    if {[file exists ${prefix}/share/fonts/fontconfig-ultimate]} {
        default_variants    +infinality
    }

    set TEMPLINFDIR ${prefix}/etc/fonts/conf.avail.infinality
    variant infinality description {patched for improved font rendering, bohoomil ultimate style} {
        worksrcdir          ${name}-${fversion}
        distname            ${name}-${fversion}
#         revision            [expr ${revision} + 3]
        # make sure we get the dependency order right, in case the user hasn't already installed freetype:
        depends_lib-delete          port:freetype
        depends_lib-append          port:fontconfig-ultimate port:freetype-infinality port:freetype
        depends_build-append        port:gperf
#         # point configure to the MacPorts python interpreter that has the lxml package:
#         # we use depends_fetch below because it seems to accept the non-universal python and py-lxml packages
#         # at least after one has installed them by hand, rather than imposing +universal if we're building
#         # fontconfig +universal...!
#         global PYTHON
#         global PYVERSION
#         global PY2TO3
#         if {[file exists ${prefix}/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/lxml]} {
#             depends_fetch-append             port:py36-lxml
#             depends_skip_archcheck-append    port:py36-lxml
#             set PYVERSION           3.6
#             set PYTHON              ${prefix}/bin/python${PYVERSION}
#             set PY2TO3              yes
#         } elseif {[file exists ${prefix}/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/lxml]} {
#             depends_fetch-append             port:py35-lxml
#             depends_skip_archcheck-append    port:py35-lxml
#             set PYVERSION           3.5
#             set PYTHON              ${prefix}/bin/python${PYVERSION}
#             set PY2TO3              yes
#         } elseif {[file exists ${prefix}/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/lxml]} {
#             depends_fetch-append             port:py34-lxml
#             depends_skip_archcheck-append    port:py34-lxml
#             set PYVERSION           3.4
#             set PYTHON              ${prefix}/bin/python${PYVERSION}
#             set PY2TO3              yes
#         } elseif {[file exists ${prefix}/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/lxml] \
#                 || ([file exists ${prefix}/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7] && \
#                     ![file exists ${prefix}/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/lxml]) } {
#             # lxml installed for py2.7 *or* py2.7 is installed and py3.6 is not
#             depends_fetch-append             port:py27-lxml
#             depends_skip_archcheck-append    port:py27-lxml
#             set PYVERSION           2.7
#             set PYTHON              ${prefix}/bin/python${PYVERSION}
#             set PY2TO3              no
#         } else {
#             depends_fetch-append             port:py36-lxml
#             depends_skip_archcheck-append    port:py36-lxml
#             set PYVERSION           3.6
#             set PYTHON              ${prefix}/bin/python${PYVERSION}
#             set PY2TO3              yes
#         }
#
#         pre-patch {
#             if {${PY2TO3}} {
#                 catch {eval exec sh -c "\"cd ${worksrcpath}/fc-blanks ; ${prefix}/bin/2to3-${PYVERSION} -w fc-blanks.py\""} result
#                 ui_debug "Converting fc-blanks.py to Python ${PYVERSION}: $result"
#             }
#         }
        # for 2.12.6 for which the patches haven't been upstreamed yet!
        pre-patch {
            ui_warn "INFPATCHRELEASE set to ${INFPATCHRELEASE}!"
        }
        pre-configure {
            ui_warn "INFPATCHRELEASE set to ${INFPATCHRELEASE}!"
        }
        foreach f ${INFPATCHES} {
            patchfiles-append   ultimate/${f}.${INFPATCHRELEASE}
        }
        if {![variant_exists fromHost] || ![variant_isset fromHost]} {
            pre-configure {
#             configure.args-append   --with-templatedir=${prefix}/etc/fonts/conf.avail --with-templateinfdir=${TEMPLINFDIR} PYTHON=${PYTHON}
                configure.args-append \
                            --with-templatedir=${prefix}/etc/fonts/conf.avail --with-templateinfdir=${TEMPLINFDIR}
                delete ${worksrcpath}/conf.d.infinality
                copy ${prefix}/share/fonts/fontconfig-ultimate/${INFRELEASE}/conf.d.infinality ${worksrcpath}
                ui_msg "--->  Running autoreconf ..."
                catch {eval exec sh -c "\"cd ${worksrcpath} ; autoreconf -vfi\""} result
                ui_debug "automake: $result"
                # make sure we can roll back to 2.12.4 - for testing.
                system -W ${worksrcpath} "patch -Np1 -i ${filespath}/patch-compatversion=11.diff"
            }
        }

        notes-append "Be sure to call fc-presets as root to select one of the provided font configuration presets!"
    }

    livecheck.type              regex
    livecheck.url               [lindex ${master_sites} 0]
    livecheck.regex             ${name}-(\\d+(?:\\.\\d+)*\\.(?:\\d|\[0-8\]\\d))\\.tar
}

# kate: backspace-indents true; indent-pasted-text true; indent-width 4; keep-extra-spaces true; remove-trailing-spaces modified; replace-tabs true; replace-tabs-save true; syntax Tcl/Tk; tab-indents true; tab-width 4;
