# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0
PortGroup           LTO 1.0
PortGroup           save_configure_cmd 1.0

# Port implementation courtesy @barracuda156

github.setup        owl-compositor owl 91abf02613cd2ddb97be58b5b6703240320233a0
fetch.type          git
name                owl-compositor
distname            owl-git
version             2021.11.10
categories          graphics
license             GPL-3
maintainers         nomaintainer
description         Portable Wayland compositor in Objective-C
long_description    ${description}

checksums           rmd160  552ae809147fce88808a1ca4863433379169f9d0 \
                    sha256  dc553e10ee7c78d13e2ddcb7e1ade77e66b8eefa913361997f18d965ef64129a
#                     size    123999
github.tarball_from archive

depends_lib-append  port:libxkbcommon \
                    port:wayland

build.dir           ${workpath}/build
configure.dir       ${build.dir}

# In-source builds are not supported.
post-extract {
    xinstall -m 755 -d ${workpath}/build
}

# https://github.com/owl-compositor/owl/pull/14
patchfiles-append   0001-OwlShmBuffer.m-fix-type.patch \
                    0002-OwlIOSurfaceBuffer.m-IOSurfaceDecrementUseCount-may-.patch \
                    0003-configure-when-building-on-macOS-we-know-we-are-on-m.patch

patchfiles-append   patch-xdg-or-tmpdir.diff

# uncommitted upstream patch:
patchfiles-append   patch-temp-fixes.diff

use_xcode           yes

configure.cmd       ${worksrcpath}/configure

# OwlKnownClientsManager.m: error: ‘for’ loop initial declaration used outside C99 mode
# OwlKnownClientsManager.m: error: 'for' loop initial declarations are only allowed in C99 or C11
# Keep general (non-powerpc) case above for simplicity.
if {${configure.build_arch} ni [list ppc ppc64]} {
    compiler.c_standard \
                    2011
    configure.cflags-append \
                    -std=c11
} else {
    # Rosetta needs explicit archflags.
    configure.cflags-append \
                    -std=c99 [get_canonical_archflags cc]
    configure.ldflags-append \
                    [get_canonical_archflags ld'
}

destroot {
    file copy ${build.dir}/Owl.app ${destroot}${applications_dir}
}
