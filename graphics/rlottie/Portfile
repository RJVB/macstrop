PortSystem      1.0
# we use the cmake build option because it's better suited to MacPorts (IMHO) and
# because it doesn't have to be patched to exclude the examples requiring EFL.
PortGroup       cmake 1.1
PortGroup       github 1.0
PortGroup       LTO 1.0

### MacStrop Only ###
# Enable HFS compression of the workdir if the compress_workdir PortGroup is installed
if {[file exists ${filespath}/../../../_resources/port1.0/group/compress_workdir-1.0.tcl]} {
    PortGroup   compress_workdir 1.0
}
###

name            rlottie

subport rlottie-devel {}

if {${subport} eq "${name}"} {
    github.setup Samsung rlottie 0.1 v
    checksums   rmd160  b9a9695d12098c82e11cd3dc887a2a8eafbf3862 \
                sha256  04fd63758f6d15c11d0fadc3d48d3920275ac1a9acf839863a551f79c8418f7a
#                 size    3370658
} else {
    github.setup laktyushin rlottie a09896b
    version     1.7.0.5
    distname    rlottie-git
    fetch.type  git
}
homepage        https://github.com/Samsung/rlottie


categories      graphics
platforms       macosx linux
license         LGPL-2.1
maintainers     gmail.com:rjvbertin openmaintainer
description     platform independent standalone c++ library for rendering vector based animations and art in realtime.
long_description rlottie is a platform independent standalone c++ library for rendering vector based animations and \
                art in realtime. Lottie loads and renders animations and vectors exported in the bodymovin JSON format. \
                Bodymovin JSON can be created and exported from several applications. For the first time, designers can \
                create and ship beautiful animations without an engineer painstakingly recreating it by hand. \
                Since the animation is backed by JSON they are extremely small in size but can be large in complexity!

patch.pre_args  -Np1

compiler.cxx_standard 2014

configure.args-append \
                -DLIB_INSTALL_DIR=${prefix}/lib \
                -DCMAKE_STRIP:PATH=/bin/echo

if {[info proc cmake.save_configure_cmd] != ""} {
    cmake.save_configure_cmd "log too"
}

