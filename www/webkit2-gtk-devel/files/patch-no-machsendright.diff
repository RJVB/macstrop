diff --git Source/WebKit/Platform/IPC/Attachment.h Source/WebKit/Platform/IPC/Attachment.h
index 9a9ec9e14e68ad437bfdace925f9fb7ba2c990ca..5b29a4c2e1c3b58a77b6b9d2569e2811b489205c 100644
--- Source/WebKit/Platform/IPC/Attachment.h
+++ Source/WebKit/Platform/IPC/Attachment.h
@@ -26,24 +26,22 @@
 
 #pragma once
 
-#if OS(DARWIN)
-#include <wtf/MachSendRight.h>
-#endif
-
 #if USE(UNIX_DOMAIN_SOCKETS)
 #include <wtf/unix/UnixFileDescriptor.h>
+#elif OS(DARWIN)
+#include <wtf/MachSendRight.h>
 #endif
 
 namespace IPC {
 
 // IPC::Attachment is a type representing objects that cannot be transferred as data,
 // rather they are transferred via operating system cross-process communication primitives.
-#if OS(DARWIN)
+#if USE(UNIX_DOMAIN_SOCKETS)
+using Attachment = UnixFileDescriptor;
+#elif OS(DARWIN)
 using Attachment = MachSendRight;
 #elif OS(WINDOWS)
 struct Attachment { }; // Windows does not need attachments at the moment.
-#elif USE(UNIX_DOMAIN_SOCKETS)
-using Attachment = UnixFileDescriptor;
 #else
 #error Unsupported platform
 #endif
diff --git Source/WebCore/platform/SharedMemory.h Source/WebCore/platform/SharedMemory.h
index 2678a8427eb8767e260b1f8399b451192630027d..017a5d16b3177f54362ac08ac73939e8234c8eda 100644
--- Source/WebCore/platform/SharedMemory.h
+++ Source/WebCore/platform/SharedMemory.h
@@ -38,7 +38,7 @@
 #include <wtf/win/Win32Handle.h>
 #endif
 
-#if OS(DARWIN)
+#if PLATFORM(COCOA)
 #include <wtf/MachSendRight.h>
 #endif
 
@@ -55,7 +55,7 @@ public:
     using Type =
 #if USE(UNIX_DOMAIN_SOCKETS)
         UnixFileDescriptor;
-#elif OS(DARWIN)
+#elif PLATFORM(COCOA)
         MachSendRight;
 #elif OS(WINDOWS)
         Win32Handle;
@@ -124,7 +124,7 @@ public:
     WEBCORE_EXPORT Ref<WebCore::SharedBuffer> createSharedBuffer(size_t) const;
 
 private:
-#if OS(DARWIN)
+#if PLATFORM(COCOA)
     MachSendRight createSendRight(Protection) const;
 #endif
 
@@ -137,7 +137,7 @@ private:
 #if USE(UNIX_DOMAIN_SOCKETS)
     UnixFileDescriptor m_fileDescriptor;
     bool m_isWrappingMap { false };
-#elif OS(DARWIN)
+#elif PLATFORM(COCOA)
     MachSendRight m_sendRight;
 #elif OS(WINDOWS)
     Win32Handle m_handle;
