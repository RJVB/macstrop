# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

# We have an umbrella radar tracking webkit-gtk issues on OS X.  Please relate
# any future issues with this tracker.
# http://bugs.webkit.org/show_bug.cgi?id=126492

PortSystem          1.0
PortGroup           active_variants 1.1
PortGroup           cmake 1.1
PortGroup           locale_select 1.0
PortGroup           LTO 1.0
platform darwin {
    PortGroup       legacysupport 1.1
    PortGroup       compiler_blacklist_versions 1.0
    PortGroup       compress_workdir 1.0

    # clang-12 is the 1st version I have installed that compiles FileSystem.cpp (using std::filesystem) correctly
    compiler.blacklist {clang < 602} {macports-clang-3.[0-9]} {macports-clang-[4-9].0} {macports-clang-1[0-1]}
}

compiler.cxx_standard 2020

platform darwin {
    # Fix compilation for Angle subproject: platform.h: error: 'TARGET_OS_OSX' is not defined
    legacysupport.newest_darwin_requires_legacy 15
}
cmake.generator     Ninja
cmake.save_configure_cmd "install log"
# also save the build command (but don't install) so we have an easy view of what's going on
configure.save_build_cmd
build.pre_args-prepend -k 0

# ensure pre-compiled headers and the possible use of ccache can co-exist
configure.env-append \
                    "CCACHE_SLOPPINESS=pch_defines,time_macros"
build.env-append    "CCACHE_SLOPPINESS=pch_defines,time_macros"

name                webkit2-gtk-devel
set upstream_name   webkitgtk
#version             2.40.1
version             2.44.3
platform darwin {
    ### for disabling EGL and OpenGLES2 in Source/cmake/OptionsGTK.cmake or via disable_cmake_findpackage
    ### for reverting to using libdispatch as it should, even with GCC (but not yet in the quartz/cocoa codepaths!)
    revision [expr ${revision} +2]
}

if {${subport} eq "${name}"} {
    conflicts           webkit2-gtk
    set wkAPIVersion    4.0
} else {
    conflicts           webkit2-gtk-4.1
    set wkAPIVersion    4.1
                    
}

description         Apple's WebKit2 HTML rendering library for GTK+3, API=webkit2gtk-${wkAPIVersion}

long_description    {*}${description}
maintainers         {devans @dbevans} {kencu @kencu}
categories          www gnome
platforms           darwin freebsd linux
license             LGPL-2+ BSD
homepage            http://webkitgtk.org/
master_sites        http://webkitgtk.org/releases/

use_xz              yes
distname            ${upstream_name}-${version}

dist_subdir         webkit-gtk

# checksums           rmd160  953121c65430f89785664d3b9a193ff74943a2f2 \
#                     sha256  64e526984f8cd2161ef03ae949af99c002ff333d615e6386b460164a3c1b7ef6
# #                     size    39599544
checksums           rmd160  49086e9ac6639835b2d4413ade49413514bac9bf \
                    sha256  dc82d042ecaca981a4852357c06e5235743319cf10a94cd36ad41b97883a0b54
#                     size    37250176

depends_build-append \
                    port:gperf \
                    port:perl5 \
                    port:pkgconfig \
                    port:python27 \
                    port:unifdef

depends_lib-append  port:atk \
                    port:bison \
                    path:lib/pkgconfig/cairo.pc:cairo \
                    port:flex \
                    port:freetype \
                    path:lib/pkgconfig/glib-2.0.pc:glib2 \
                    port:gstreamer1 \
                    port:gstreamer1-gst-plugins-base \
                    port:gstreamer1-gst-plugins-good \
                    path:lib/pkgconfig/gtk+-3.0.pc:gtk3 \
                    path:lib/pkgconfig/harfbuzz-icu.pc:harfbuzz-icu \
                    path:lib/pkgconfig/icu-uc.pc:icu \
                    port:libepoxy \
                    path:include/turbojpeg.h:libjpeg-turbo \
                    port:libnotify \
                    port:libpng \
                    port:libsecret \
                    port:libsoup-2.4 \
                    port:libxml2 \
                    port:libxslt \
                    port:sqlite3 \
                    port:webp \
                    port:woff2 \
                    port:zlib
platform darwin {
    depends_build-append \
                    port:gtk-doc \
                    port:py27-simplejson

#                     port:gstreamer1-gst-plugins-bad
    depends_lib-append \
                    path:lib/pkgconfig/gobject-introspection-1.0.pc:gobject-introspection \
                    port:at-spi2-atk \
                    port:fontconfig \
                    port:geoclue2 \
                    port:enchant2 \
                    port:hyphen
}


# 1. add missing JavaScriptCore include directory used only on Apple webkit builds
# 2. don't copy the ICU includes into the source tree
# 3. add missing WebCore include directory used only on Apple webkit builds
# 4. add a missing Apple-only header found in the WebKit project
# 5. change some int64_t to gint64 to stop typedef errors in gstreamer
patchfiles-append   patch-webkit2gtk-macports.diff

platform darwin {
    # and a few more (originally) for webkit2-gtk-2.27.2
    patchfiles-append   patch-webkit2gtk-2443-macports.diff

    # and a few more for 282
    patchfiles-append   patch-webkit2gtk-2282-unprotected-egl-changes.diff

    # this former part of patch-webkit2gtk-macports.diff is only required
    # on Mac and should not be used  on Linux?!
    patchfiles-append   patch-webkit2gtk-macports-guint.diff
}

# os log is only available on newer systems.
patchfiles-append   patch-webkit2gtk-2443-os-log-availability.diff

if {[vercmp ${version} 2.40.1] <= 0} {
    # enable Netscape plugin architecture on macOS
    # or can be explicitly disabled with the following addition if preferred
    # configure.args-append -DENABLE_NETSCAPE_PLUGIN_API=OFF
    patchfiles-append    patch-enable-plugin-architecture-unix.diff
}

platform darwin {
    # add a link library to WebCore. I am not sure this is still needed; builds and
    # runs without this patch.
    patchfiles-append    patch-bundle-link-webcore.diff

}

# # Fix build errors due to -WWc++11-narrowing
# # https://bugs.webkit.org/show_bug.cgi?id=211193
# #patchfiles-append    patch-bool_narrowed.diff
# 
# platform darwin {
#     # Explicitly specify installed dylib paths to g-ir-compile
#     # Fixes dlopen errors in apps using webkit2gtk introspection
# #     patchfiles-append    patch-webkit2gtk-specify-installed-dylibs.diff
# }
# 
# # Backport https://github.com/WebKit/WebKit/commit/b83958928838b8a997c12a8de06f89377df0a903
# #patchfiles-append    patch-icu-68-true-false.diff

# Reduce compilation warnings
configure.cppflags-append \
    -Wno-deprecated-declarations

# it is preferred to use the WebKit built in bmalloc if it builds on a given os.
# it has improved security features, but not all systems can build it at present.
## for WebGL on Mac, see e.g. Source/ThirdParty/ANGLE/src/libANGLE/renderer/gl/apple
## which should probably not be included in an X11 build. Maybe just ensure that
## ANGLE_PLATFORM_MACOS doesn't get set, and avoid any APPLE-specific code in the
## CMake files under the ANGLE directory?
configure.args-append \
    -DUSE_APPLE_ICU=OFF \
    -DPORT=GTK \
    -DENABLE_WEBDRIVER=OFF \
    -DENABLE_GAMEPAD=OFF \
    -DENABLE_INTROSPECTION=ON \
    -DENABLE_JOURNALD_LOG=OFF \
    -DENABLE_MINIBROWSER=OFF \
    -DENABLE_VIDEO=ON \
    -DUSE_GSTREAMER_TRANSCODER=OFF \
    -DUSE_SYSTEM_MALLOC=OFF \
    -DPERL_EXECUTABLE=${prefix}/bin/perl5 \
    -DENABLE_ACCELERATED_2D_CANVAS=ON \
    -DENABLE_ASYNC_SCROLLING=ON \
    -DENABLE_WEBGL=ON \
    -DENABLE_DOCUMENTATION=OFF \
    -DUSE_AVIF=OFF \
    -DUSE_SOUP2=ON

## additionally required for v2.44.3:
# don't default to GTk4 (building with GTk4 generates webkit-gtk-6.0 !)
# don't use jpegXL by default (TODO: decide if this requires a variant)
# don't use libBacTrace by default (is not in MacPorts)
configure.args-append \
    -DUSE_GTK4=OFF \
    -DUSE_JPEGXL=OFF \
    -DUSE_LIBBACKTRACE=OFF

if {${os.platform} eq "darwin"} {
    long_description-append \n\
            This port requires EGL\; probably only the +x11 variant will work!

    configure.args-append \
            -DUSE_LIBDRM=OFF

#     variant webgl requires quartz description {enable WebGL (untested!)} {}
#     if {[variant_exists webgl] && [variant_isset webgl]} {
#         configure.args-replace \
#             -DENABLE_WEBGL=OFF \
#             -DENABLE_WEBGL=ON
#     } else {
#         # not sure if and how ANGLE for +quartz depends on EGL, but in
#         # +x11 mode we cannot have the build system detect it.
#         # EGL is CPU-based anyway on Mac/X11 (Mesa, llvmpipe rasteriser)
#         # TODO: figure out where EGL is initialised in the codebase, so
#         # we can initialise GLX first, as is required on Mac/X11.
#         configure.args-append \
#             -DCMAKE_DISABLE_FIND_PACKAGE_EGL=ON \
#             -DCMAKE_DISABLE_FIND_PACKAGE_OpenGLES2=ON \
#             -DUSE_ANGLE_EGL=OFF \
#             -DUSE_EGL=OFF
#     }
} elseif {${os.platform} eq "linux"} {
    # WEBGL definitely works here, but the introspect stuff fails to build
    # and the project is way too complicated to spend more time figuring
    # out why.
    configure.args-replace \
        -DENABLE_INTROSPECTION=ON \
        -DENABLE_INTROSPECTION=OFF
    configure.args-append \
        -DUSE_WPE_RENDERER=OFF \
        -DENABLE_BUBBLEWRAP_SANDBOX=OFF \
        -DUSE_LD_LLD=OFF -DUSE_LD_GOLD=OFF
}

pre-configure {
    if {![variant_isset quartz] && ![variant_isset x11]} {
        error "Either +x11 or +quartz is required"
    }
}

if {${os.platform} ne "darwin" || ![variant_isset quartz]} {
    default_variants-append +x11
}

# this is nice to have, and should be the default
default_variants-append +minibrowser

subport ${name}-4.1 {
    depends_lib-replace \
        port:libsoup-2.4 \
        port:libsoup
    configure.args-replace \
        -DUSE_SOUP2=ON \
        -DUSE_SOUP2=OFF
}

variant quartz conflicts x11 {
    require_active_variants path:lib/pkgconfig/gtk+-3.0.pc:gtk3 quartz

    configure.args-append \
        -DENABLE_QUARTZ_TARGET=ON \
        -DENABLE_X11_TARGET=OFF \
        -DENABLE_OPENGL=OFF \
        -DUSE_OPENGL_OR_ES=OFF

# OPENGL does not work with +quartz, eg: https://trac.macports.org/ticket/52495
# OPENGL must be explicitly turned off, otherwise GLX is found, but X11 is not, and:
# CMake Error at Source/cmake/OptionsGTK.cmake:280 (message):
#  Either GLX or EGL is needed for ENABLE_OPENGL.

}

variant x11 conflicts quartz {
    require_active_variants path:lib/pkgconfig/gtk+-3.0.pc:gtk3 x11
    platform darwin {
        require_active_variants libepoxy x11
    }

    configure.args-append \
        -DENABLE_QUARTZ_TARGET=OFF \
        -DENABLE_X11_TARGET=ON \
        -DENABLE_OPENGL=ON
    platform darwin {
        configure.args-append \
            -DUSE_GBM=OFF 
    }

    depends_lib-append \
        port:mesa
    platform darwin {
        depends_lib-append \
            port:xorg-libXt
    }
}


variant av1 description {build in AV1 image file support} {
    depends_lib-append \
        port:libavif
    configure.args-replace \
        -DUSE_AVIF=OFF \
        -DUSE_AVIF=ON
}

variant minibrowser description {Build and install MiniBrowser (for testing)} {
    configure.args-delete   -DENABLE_MINIBROWSER=OFF
    configure.args-append   -DENABLE_MINIBROWSER=ON
    platform darwin {
        depends_build-append port:cctools
        depends_run-append  port:adwaita-icon-theme
    }
}

platform linux {
    variant wayland description {Enable Wayland support} {}
    if {[variant_isset wayland]} {
        ui_warn "The Wayland variant has not yet been implemented"
        pre-fetch {
            return -code error "Invalid variant requested"
        }
        depends_lib-append \
            port:libwpe
        configure.args-append \
            -DENABLE_WAYLAND_TARGET=ON
    } else {
        configure.args-append \
            -DENABLE_WAYLAND_TARGET=OFF
    }
}

# see https://trac.macports.org/ticket/56792
# no success at building universal after considerable attempts
# errors out in the javascript interpreter
# muniversal PG does not fix it. disabling the JIT does not fix it
# help wanted, if suitably motivated
universal_variant   no

# Fix builds if ccache happens to be installed when configure.ccache=no
if {![option configure.ccache] && ${configureccache} eq ""} {
    build.env-append        CCACHE_DIR=${workpath}/.ccache
}

# the above code presently builds as-in on 10.13 and up
if {${os.platform} eq "darwin" && ${os.major} <= 16} {

    # build of bmalloc fails up to 10.12 https://trac.macports.org/ticket/59447
    configure.args-replace -DUSE_SYSTEM_MALLOC=OFF -DUSE_SYSTEM_MALLOC=ON
    patchfiles-append       patch-ramsize.diff

    # Source/WTF/wtf/unix/CPUTimeUnix.cpp : add back a previous Darwin compat version
    patchfiles-append       patch-source-wtf-wtf-unix-cputimeunix-cpp-darwin-version-restore.diff

    # some Darwin versions don't have MAP_JIT; only use it if available
    # NEEDS REFACTORING
    # patchfiles-append       patch-source-wtf-wtf-osallocatorposix-cpp-map-jit.diff

    # gl cocoa build continues to fail due to use of API not available on darwin 12 or earlier
    # so gstreamergl is not available at present for darwin 12 or earlier
    # todo clarify further where this is exactly needed
    if {${os.major} <= 12} {
        configure.args-append -DUSE_GSTREAMER_GL=OFF
    }

    # for the webcore/page/crypt code to flow correctly,
    # ENABLE_WEB_CRYPTO has to be ON for 10.10+ and OFF for 10.9 and less
    if {${os.major} <= 13} {
        configure.args-append  -DENABLE_WEB_CRYPTO=OFF
    }
    # disable Apple internal security libraries, available only on new systems
    patchfiles-append       patch-Webcore-page-crypto.diff

    # restrict special process memory kernel calls to 10.9+ that support them
    patchfiles-append       patch-WTF-wtf-spi-darwin-ProcessMemoryFootprint-h.diff

    # the darwin build uses security features that are Apple internal only, but
    # the unix version does not FIXME: sort the ifdefs out
    # https://bugs.webkit.org/show_bug.cgi?id=157554
    patchfiles-append       patch-WTF-wtf-Randomdevice.diff

    # disable veclib on 10.7 and 10.8. There is a definition for
    # class complex<> in the vForce.h header that collides with libc++
    # if anyone has a more elegant fix for this, please volunteer it
    if {${os.major} == 11 || ${os.major} == 12} {
        patchfiles-append       patch-webcore-platform-audio-directconvolver-disable-veclib.diff
    }

    # there is a missing header that manifests on 10.7 and less
    # NEEDS REFACTORING
    # patchfiles-append patch-webkit2gtk-source-javascriptcore-jit-executableallocator-missingfcntl-h-older-systems.diff

    # include the proper Mach VM header:
    patchfiles-append       patch-mach_vm.diff
    patchfiles-append       patch-gigacage.diff \
                            patch-currenttime.diff \
                            patch-no-machsendright.diff \
                            patch-no-cocoa-headers.diff \
                            patch-mactypes.diff
    # This is a tricky one and seems related to how CMake's "make" generator
    # can (sometimes?) forget to generate the Javascript targets.
    # Add an apparently missing path to a derived headerdir and make explicit copies
    # therein of headers that shouldn't be necessary...
    patchfiles-append       patch-fix-jsc_jsch-include.diff

    # add dep for newer ruby and spec this for build
    # https://trac.macports.org/ticket/52016
    set rubydepend          port:ruby25
    set rubyexec            ${prefix}/bin/ruby2.5
    foreach r {2.7 2.6 2.5 2.4 2.3} {
        if {[file exists ${prefix}/bin/ruby${r}]} {
            set rubydepend  port:ruby[string map {. {}} ${r}]
            set rubyexec    ${prefix}/bin/ruby${r}
            break
        }
    }
    depends_build-append    ${rubydepend}
    configure.args-append   -DRUBY_EXECUTABLE=${rubyexec}

    # fix missing PRId64 definitions on systems
    # that don't define __STDC_FORMAT_MACROS by default
    # https://bugs.webkit.org/show_bug.cgi?id=156596
    # https://trac.macports.org/ticket/52016
    # also added defn for TARGET_OS_IOS to avoid innumerable warnings
    patchfiles-append patch-snowleopard-cmakelists-stdcformatmacros.diff
    
    # special case: fix build on 10.6 with macports-libstdc++
    # contents of snowmath.h should someday become part of gcc6 cmath
    # TODO: remove this?
    if { ${configure.cxx_stdlib} eq "macports-libstdc++"  && ${os.major} < 11 } {
        configure.cxxflags-append -D_GLIBCXX_USE_C99_MATH_TR1=1
        configure.cxxflags-append -include ${filespath}/snowmath.h
    }

    # companion code to patch-mactypes.diff :
    post-configure {
# TODO: check if the path exists directly after the configure step or else what other potentially appropriate paths do exist.
        xinstall -m 755 -d ${build.dir}/JavaScriptCore/Headers/JavaScriptCore/
        xinstall -m 644 ${filespath}/MacTypes.h ${build.dir}/JavaScriptCore/Headers/JavaScriptCore/
    }
    post-destroot {
        xinstall -m 644 ${filespath}/MacTypes.h ${destroot}${prefix}/include/webkitgtk-${wkAPIVersion}/JavaScriptCore/
    }
}

# RJVB
patchfiles-append   patch-DateInstance-nullptr-deref.diff \
                    patch-IPC-failure-message.diff \
                    patch-cmake-summary.diff \
                    patch-cmake-no-colours.diff \
                    patch-less-gcrypt-oops-msg.diff
# pull in libdispatch on Mac only when building with clang (blocks support required)
patchfiles-append   patch-webkit2gtk-libdispatch_with_gcc.diff
# # No..
# patchfiles-append   patch-webkit2gtk-ANGLE_no_EGL-on-darwin.diff

# for some reason the JavaScriptCore libspec isn't defined when building the MiniBrowser
# catch and rectify:
patchfiles-append   patch-minibrowser-jsc.diff

if {${os.platform} eq "darwin"} {
    post-extract {
    }
    post-patch {
        reinplace "s|@API@|${wkAPIVersion}|g" ${worksrcpath}/Tools/MiniBrowser/gtk/CMakeLists.txt
        reinplace "s|@SHEXT@|dylib|g" ${worksrcpath}/Tools/MiniBrowser/gtk/CMakeLists.txt
        if {![file exists ${worksrcpath}/Source/WTF/wtf/darwin/OSLogPrintStream.cpp]} {
            xinstall -m 644 ${filespath}/OSLogPrintStream.cpp ${worksrcpath}/Source/WTF/wtf/darwin/
            reinplace "s|darwin/OSLogPrintStream.mm|darwin/OSLogPrintStream.cpp|g" ${worksrcpath}/Source/WTF/wtf/CMakeLists.txt
        }
    }
    post-destroot {
        if {[variant_isset minibrowser]} {
            system "install_name_tool -change @rpath/libjavascriptcoregtk-4.0.18.dylib \
                ${prefix}/lib/libjavascriptcoregtk-4.0.18.dylib ${destroot}${prefix}/libexec/webkit2gtk-${wkAPIVersion}/MiniBrowser"
        }
    }

    # if ever we're building with (a recent) GCC, we'll need -flax-vector-conversions to avoid errors
    # about converting 16-bit int. types to __m128i by VecLib headers.
    # The flag is accepted by clang, which doesn't appear to need it.
    configure.cxxflags-append \
                    -flax-vector-conversions

    notes-append "
    If you are porting new software to use webkit2gtk on Apple systems,\
    you will likely need to define BUILDING_GTK__ to get the correct\
    behaviour from WebKitAvailability.h.
    "
} else {
    patchfiles-append \
                    prefer-pthread.patch \
                    patch-reduce-mem-overheads-linux.diff \
                    file-linux-madv_free.diff \
                    patch-no-introspect-warnerr-linux.diff
    post-patch {
        reinplace "s|@API@|${wkAPIVersion}|g" ${worksrcpath}/Tools/MiniBrowser/gtk/CMakeLists.txt
        reinplace "s|@SHEXT@|so|g" ${worksrcpath}/Tools/MiniBrowser/gtk/CMakeLists.txt
    }
}

# RJVB
patchfiles-append   patch-FC-version.diff

livecheck.type      regex
livecheck.url       http://webkitgtk.org/releases/
livecheck.regex     "${upstream_name}-(\\d+\\.\\d*\[02468\](?:\\.\\d+)*)"
