# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0

PortGroup           save_configure_cmd 1.0
if {${os.platform} eq "darwin" && ${os.major} < 20} {
    PortGroup       code_sign 1.0
}

github.setup        aclap-dev vdhcoapp f8cc614622eb70e78c575dcbdeb3e0b4b947497f
distname            ${name}-git
name                videodownloadhelper-coapp
version             2.0.20.4
fetch.type          git

description         companion application for the Video DownloadHelper browser add-on 

long_description    Video DownloadHelper CoApp is a multi-platform application providing \
                    the Video DownloadHelper browser add-on with a set of extra features \
                    not available directly from the add-on

categories          www net
platforms           darwin linux
license             GPL-2.0

installs_libs 		no
use_configure       no

maintainers         nomaintainer

configure.save_build_cmd "install"

depends_build-append \
                    port:esbuild \
                    port:nodejs18 \
                    port:npm9 \
                    port:filepicker

depends_lib-append  port:ffmpeg6

patch.pre_args      -Np1

if {${os.platform} ne "darwin"} {
    # we're not making an app-bundle here but installing directly into $prefix 
    depends_run-append \
                    port:filepicker
    patchfiles-append \
                    patch-build-@PREFIX@.diff
} elseif {${os.major} < 17} {
    # current minimum supported Darwin version by @yao-pkg/pkg is 17 (10.13)
    # so there we need to use a self-built patched node18 to create a standalone executable.
    depends_patch-append \
                    port:nodejs18-pkg
    depends_build-append \
                    port:nodejs18-pkg
    patchfiles-append \
                    patch-build-@PREFIX@+@PKG_NODE_PATH@.diff
}

patchfiles-append   patch-@VERSION@.diff

post-patch {
    reinplace "s|@PREFIX@|${prefix}|g" ${worksrcpath}/build.sh
    reinplace "s|@BUILD_ARCH@|${build_arch}|g" ${worksrcpath}/build.sh
    reinplace "s|@VERSION@|${version}|g" ${worksrcpath}/config.toml
    set njsp [glob ${prefix}/libexec/nodejs-pkg/built-v18*-macos-${build_arch}]
    ui_info "--->  Using patched node18 ${njsp}"
    reinplace -q "s|@PKG_NODE_PATH@|${njsp}|g" ${worksrcpath}/build.sh
}

build.pre_args
build.post_args
build.cmd           ./build.sh

build.args          --skip-notary
if {${os.platform} eq "darwin" && ${os.major} < 20} {
    build.args-append \
                    --skip-signing
}

destroot {
    if {${os.platform} eq "darwin"} {
        file copy ${worksrcpath}/dist/mac/${build_arch}/dotApp/net.downloadhelper.coapp.app \
            ${destroot}${applications_dir}/
        if {${os.platform} eq "darwin" && ${os.major} < 20} {
            codesign ${destroot}${applications_dir}/net.downloadhelper.coapp.app
        }
    } else {
        xinstall -m 755 ${worksrcpath}/dist/${os.platform}/${build_arch}/vdhcoapp \
            ${destroot}${prefix}/bin/
        xinstall -m 755 ${worksrcpath}/dist/${os.platform}/${build_arch}/xdg-open \
            ${destroot}${prefix}/bin/
    }
}

if {${os.platform} eq "darwin"} {
    notes-append    "Remember to launch ${applications_dir}/net.downloadhelper.coapp.app once to register the helper application!"
} else {
    notes-append    "Remember to run `${prefix}/bin/vdhcoapp install` once to register the helper application!"
}
