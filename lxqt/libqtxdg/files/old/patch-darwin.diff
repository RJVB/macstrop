--- cmake/orig.compiler_settings.cmake	2018-05-21 19:03:32.000000000 +0200
+++ cmake/compiler_settings.cmake	2019-01-17 21:14:46.000000000 +0100
@@ -125,22 +125,23 @@
 # Linker flags
 # Do not allow undefined symbols
 #-----------------------------------------------------------------------------
-if (CMAKE_COMPILER_IS_GNUCXX OR QTXDG_COMPILER_IS_CLANGCXX)
-    # -Bsymbolic-functions: replace dynamic symbols used internally in
-    #                       shared libs with direct addresses.
-    set(SYMBOLIC_FLAGS
-        "-Wl,-Bsymbolic-functions -Wl,-Bsymbolic"
-    )
-    set(CMAKE_SHARED_LINKER_FLAGS
-        "-Wl,--no-undefined ${SYMBOLIC_FLAGS} ${CMAKE_SHARED_LINKER_FLAGS}"
-    )
-    set(CMAKE_MODULE_LINKER_FLAGS
-        "-Wl,--no-undefined ${SYMBOLIC_FLAGS} ${CMAKE_MODULE_LINKER_FLAGS}"
-    )
-    set(CMAKE_EXE_LINKER_FLAGS
-        "${SYMBOLIC_FLAGS} ${CMAKE_EXE_LINKER_FLAGS}"
-    )
-
+if (NOT APPLE)
+    if (CMAKE_COMPILER_IS_GNUCXX OR QTXDG_COMPILER_IS_CLANGCXX)
+        # -Bsymbolic-functions: replace dynamic symbols used internally in
+        #                       shared libs with direct addresses.
+        set(SYMBOLIC_FLAGS
+            "-Wl,-Bsymbolic-functions -Wl,-Bsymbolic"
+        )
+        set(CMAKE_SHARED_LINKER_FLAGS
+            "-Wl,--no-undefined ${SYMBOLIC_FLAGS} ${CMAKE_SHARED_LINKER_FLAGS}"
+        )
+        set(CMAKE_MODULE_LINKER_FLAGS
+            "-Wl,--no-undefined ${SYMBOLIC_FLAGS} ${CMAKE_MODULE_LINKER_FLAGS}"
+        )
+        set(CMAKE_EXE_LINKER_FLAGS
+            "${SYMBOLIC_FLAGS} ${CMAKE_EXE_LINKER_FLAGS}"
+        )
+endif()
 endif()
 
 #-----------------------------------------------------------------------------
