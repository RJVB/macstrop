diff --git a/CMakeLists.txt b/CMakeLists.txt
index 2f61a45..6dbf07b 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -60,7 +60,7 @@ if (APPLE)
     set(CMAKE_MACOSX_RPATH 1)
     set(BUILD_WITH_INSTALL_RPATH 1)
     set(MACOS_GUI_TEST "GUI")
-    add_definitions(-mmacosx-version-min=10.13 -Wno-macro-redefined -Wno-deprecated-register)
+    add_definitions(-Wno-macro-redefined -Wno-deprecated-register)
     if (CMAKE_OSX_ARCHITECTURES)
         message(STATUS "CMake OSX architectures: ${CMAKE_OSX_ARCHITECTURES}")
     endif()
@@ -477,9 +477,8 @@ if (Qt5QuickWidgets_FOUND)
     list (APPEND ANDROID_EXTRA_LIBS $<TARGET_FILE:Qt5::QuickWidgets>)
 endif()
 
-if (NOT WIN32 AND NOT APPLE AND NOT ANDROID)
+if (NOT WIN32)
 
-    find_package(Qt5 ${MIN_QT_VERSION} REQUIRED X11Extras)
 
     find_package(Qt5DBus ${MIN_QT_VERSION})
     set(HAVE_DBUS ${Qt5DBus_FOUND})
@@ -497,9 +496,13 @@ if (NOT WIN32 AND NOT APPLE AND NOT ANDROID)
         TYPE OPTIONAL
         PURPOSE "Optionally used to provide crash reporting on Linux")
 
-    find_package(X11 REQUIRED COMPONENTS Xinput)
-    set(HAVE_X11 TRUE)
-    add_definitions(-DHAVE_X11)
+    option(APPLE_SUPPORT_X11 "Support X11 on Mac" OFF)
+    if (NOT APPLE OR APPLE_SUPPORT_X11)
+        find_package(Qt5 ${MIN_QT_VERSION} REQUIRED X11Extras)
+        find_package(X11 REQUIRED COMPONENTS Xinput)
+        set(HAVE_X11 TRUE)
+        add_definitions(-DHAVE_X11)
+    endif()
 
 else()
     set(HAVE_DBUS FALSE)
diff --git a/krita/integration/CMakeLists.txt b/krita/integration/CMakeLists.txt
index db00008..73e381d 100644
--- a/krita/integration/CMakeLists.txt
+++ b/krita/integration/CMakeLists.txt
@@ -1,4 +1,4 @@
-if (APPLE)
+if (APPLE_STANDALONE_BUNDLE)
 project(kritaintegration)
 
 if (NOT MACOS_UNIVERSAL)
diff --git a/plugins/impex/gif/CMakeLists.txt b/plugins/impex/gif/CMakeLists.txt
index bb7f582..180b514 100644
--- a/plugins/impex/gif/CMakeLists.txt
+++ b/plugins/impex/gif/CMakeLists.txt
@@ -1,3 +1,5 @@
+include_directories(${GIF_INCLUDE_DIR})
+
 add_subdirectory(tests)
 
 set(kritagifexport_SOURCES
