diff --git a/krita/main.cc b/krita/main.cc
index 3016772..b0ee6be 100644
--- a/krita/main.cc
+++ b/krita/main.cc
@@ -230,10 +230,22 @@ extern "C" MAIN_EXPORT int MAIN_FN(int argc, char **argv)
 {
     // The global initialization of the random generator
     qsrand(time(0));
+#if !defined(Q_OS_OSX) || defined(APPLE_STANDALONE_BUNDLE)
     bool runningInKDE = !qgetenv("KDE_FULL_SESSION").isEmpty();
+#else
+    bool runningInKDE = true;
+#endif
 
-#if defined HAVE_X11
+#if defined HAVE_X11 
+#if !defined(Q_OS_MAC)
     qputenv("QT_QPA_PLATFORM", "xcb");
+#else
+    if (qEnvironmentVariableIsSet("QT_QPA_PLATFORM")
+        && QString::fromLocal8Bit(qgetenv("QT_QPA_PLATFORM")) == QStringLiteral("xcb")) {
+        QCoreApplication::setAttribute(Qt::AA_DontUseNativeMenuBar, true);
+        QCoreApplication::setAttribute(Qt::AA_MacDontSwapCtrlAndMeta, true);
+    }
+#endif
 #endif
 
     // Workaround a bug in QNetworkManager
@@ -246,7 +258,6 @@ extern "C" MAIN_EXPORT int MAIN_FN(int argc, char **argv)
     QCoreApplication::setAttribute(Qt::AA_ShareOpenGLContexts, true);
 
     QCoreApplication::setAttribute(Qt::AA_DontCreateNativeWidgetSiblings, true);
-    QCoreApplication::setAttribute(Qt::AA_UseHighDpiPixmaps, true);
 
     QCoreApplication::setAttribute(Qt::AA_DisableShaderDiskCache, true);
 
@@ -292,9 +303,11 @@ extern "C" MAIN_EXPORT int MAIN_FN(int argc, char **argv)
     {
         if (kritarc.value("EnableHiDPI", true).toBool()) {
             QCoreApplication::setAttribute(Qt::AA_EnableHighDpiScaling);
+            QCoreApplication::setAttribute(Qt::AA_UseHighDpiPixmaps, true);
         }
         if (!qgetenv("KRITA_HIDPI").isEmpty()) {
             QCoreApplication::setAttribute(Qt::AA_EnableHighDpiScaling);
+            QCoreApplication::setAttribute(Qt::AA_UseHighDpiPixmaps, true);
         }
 #ifdef HAVE_HIGH_DPI_SCALE_FACTOR_ROUNDING_POLICY
         if (kritarc.value("EnableHiDPIFractionalScaling", false).toBool()) {
@@ -385,8 +398,10 @@ extern "C" MAIN_EXPORT int MAIN_FN(int argc, char **argv)
             qputenv("GST_PLUGIN_SCANNER", appimageMountDir + QFile::encodeName("/usr/lib/gstreamer-1.0/gst-plugin-scanner"));
         }
     }
-#else
+#elif !defined(Q_OS_OSX) || defined(APPLE_STANDALONE_BUNDLE)
     qputenv("XDG_DATA_DIRS", QFile::encodeName(QDir(root + "share").absolutePath()));
+#else
+    qputenv("XDG_DATA_DIRS", QFile::encodeName(QStandardPaths::standardLocations(QStandardPaths::GenericDataLocation).join(QLatin1Char(':'))));
 #endif
 
     dbgKrita << "Setting XDG_DATA_DIRS" << qgetenv("XDG_DATA_DIRS");
diff --git a/libs/resources/KoResourcePaths.cpp b/libs/resources/KoResourcePaths.cpp
index b555d9d..b6e3010 100644
--- a/libs/resources/KoResourcePaths.cpp
+++ b/libs/resources/KoResourcePaths.cpp
@@ -14,6 +14,7 @@
 #include <QFileInfo>
 #include <QDebug>
 #include <QCoreApplication>
+#include <QLibraryInfo>
 #include <QMutex>
 #include "kis_debug.h"
 #include "ksharedconfig.h"
@@ -77,7 +78,7 @@ static const Qt::CaseSensitivity cs = Qt::CaseSensitive;
 #endif
 
 QString getInstallationPrefix() {
-#ifdef Q_OS_MACOS
+#ifdef APPLE_STANDALONE_BUNDLE
     QString appPath = qApp->applicationDirPath();
 
     dbgResources << "1" << appPath;
@@ -106,7 +107,8 @@ QString getInstallationPrefix() {
     // any files other than libraries
     return QStandardPaths::writableLocation(QStandardPaths::AppDataLocation) + "/";
 #else
-    return qApp->applicationDirPath() + "/../";
+//     return qApp->applicationDirPath() + "/../";
+    return QLibraryInfo::location(QLibraryInfo::PrefixPath);
 #endif
 }
 
@@ -388,7 +390,7 @@ QStringList KoResourcePaths::findDirsInternal(const QString &type)
                 QStandardPaths::locateAll(d->mapTypeToQStandardPaths(type), alias + '/', QStandardPaths::LocateDirectory);
         appendResources(&dirs, aliasDirs, true);
 
-#ifdef Q_OS_MACOS
+#ifdef APPLE_STANDALONE_BUNDLE
         dbgResources << "MAC:" << getApplicationRoot();
         QStringList bundlePaths;
         bundlePaths << getApplicationRoot() + "/share/krita/" + alias;
diff --git a/libs/ui/opengl/kis_opengl.cpp b/libs/ui/opengl/kis_opengl.cpp
index 5bd3c04..7a48a76 100644
--- a/libs/ui/opengl/kis_opengl.cpp
+++ b/libs/ui/opengl/kis_opengl.cpp
@@ -190,7 +190,7 @@ void KisOpenGL::initialize()
     // Check if we have a bugged driver that needs fence workaround
     bool isOnX11 = false;
 #ifdef HAVE_X11
-    isOnX11 = true;
+    isOnX11 = QApplication::platformName().contains(QLatin1String("xcb"));
 #endif
 
     KisConfig cfg(true);
diff --git a/libs/ui/thememanager.cpp b/libs/ui/thememanager.cpp
index 067b476..0e9b30d 100644
--- a/libs/ui/thememanager.cpp
+++ b/libs/ui/thememanager.cpp
@@ -179,7 +179,7 @@ void ThemeManager::slotChangePalette()
     qApp->setProperty("KDE_COLOR_SCHEME_PATH", filename);
     qApp->setPalette(palette);
 
-#ifdef Q_OS_MACOS
+#ifdef APPLE_STANDALONE_BUNDLE
     if (theme == "Krita bright" || theme.isEmpty()) {
         qApp->setStyle("Macintosh");
         qApp->style()->polish(qApp);
