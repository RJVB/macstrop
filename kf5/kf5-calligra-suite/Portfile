# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# Copyright (c) 2015-9 R.J.V. Bertin

PortSystem          1.0

set kf5.project     calligra
set kf5.virtualPath applications
set kf5.category    office
PortGroup           kf5 1.1
PortGroup           active_variants 1.1
PortGroup           LTO 1.0

maintainers         gmail.com:rjvbertin openmaintainer
name                kf5-calligra-suite

kf5.allow_apidocs_generation no
patch.pre_args      -Np1

set selected_components 0
options productset
default productset  {LIB_KOVECTORIMAGE \
                    LIB_CALLIGRA \
                    LIB_KOMAIN \
                    LIB_KOODFREADER \
                    LIB_MSO \
                    LIB_KOMSOOXML \
                    FEATURE_SCRIPTING \
                    PLUGIN_TEXTSHAPE \
                    APP_CONVERTER \
                    FILEMANAGER \
                    APP_DEVTOOLS}

if {${subport} ne "kf5-kdiagram"} {
    variant karbon description {build Karbon, Calligra's vector graphics application} {}
    variant words description {build Words, Calligra's word processing application} {}
    variant sheets description {build Words, Calligra's spreadsheet application} {}
#     variant plan description {build Plan, Calligra's project management application} {}
    variant stage description {build Stage, Calligra's presentation application} {}
    variant braindump description {build Stage, Calligra's application for creative thinking} {}

    livecheck.url   http://download.kde.org/stable
    livecheck.regex calligra\\-(\\d+\\.\\d+\\.\\d)
}

if {${subport} eq "${name}"} {
    PortGroup       boost 1.0

    version         3.1.0 ; revision 1
    distname        ${kf5.project}-${version}

    description     KDE Calligra Suite
    long_description \
                    Calligra Suite is a set of applications written to help you to accomplish your work. \
                    It includes efficient and capable office components: Words for text processing, \
                    Sheets for computations, Stage for presentations (currently unsupported), Plan for planning \
                    and Karbon for vector graphics. Each of the supported components can be selected by the named variant. \
                    Former components Krita and Kexi are now separate projects and ports.
    homepage        http://www.calligra.org
    conflicts       calligra

    master_sites    http://download.kde.org/stable/${kf5.project}/${version}
    checksums       rmd160  e0afafcba0ca5c13413dfc4ca9f46ba6599f40c6 \
                    sha256  6818cd6e64136321be217eb57cc7d6ac7c7035191fdb1ee336ebe60bc114e870
#                     size    58037392

    # shared dependencies
    platform darwin {
        # taken from the host elsewhere but Darwin, where possible.
        depends_lib-append \
                    port:fontconfig \
    }

    # this port only uses boost headers during build
    # and does not link with any boost libraries
    # no need to rebuild due to boost library ABI changes
    boost.depends_type  build
    boost.version       1.71

    depends_lib-append \
                    port:freetype \
                    port:lcms2 \
                    port:zlib \
                    port:gsl \
                    port:libvisio-0.1
                    port:eigen3 \
                    port:Vc \
                    port:shared-mime-info \
                    port:poppler073 \
                    port:libgit2 \
                    port:libiconv \
                    port:phonon-qt5 \
                    port:qca-qt5 \
                    port:librevenge \
                    port:libodfgen \
                    port:libwpd-0.10 \
                    port:libwpg-0.3 \
                    port:libwps \
                    port:openexr \
                    port:kf5-kcalcore \
                    path:${kf5.libs_dir}/libOkular5Core.${kf5::libs_ext}:kf5-okular \
                    port:kf5-kproperty \
                    port:kf5-kreport

    kf5.depends_qt5_components \
                    qtdeclarative qtwebkit
    kf5.depends_frameworks \
                    kactivities karchive kcmutils kcodecs kcompletion \
                    kconfig kconfigwidgets kcoreaddons kcrash kdbusaddons \
                    kguiaddons khtml ki18n kiconthemes kitemviews \
                    kdelibs4support kio knotifications knotifyconfig \
                    kross kparts kpty kservice ktexteditor ktextwidgets \
                    kwallet kwidgetsaddons kwindowsystem \
                    kxmlgui sonnet threadweaver

    test.run        yes

    variant maps description {include support for maps using port:kf5-marble} {}
    if {[variant_isset maps]} {
        depends_lib-append \
                    path:lib/libmarblewidget-qt5.${kf5::libs_ext}:kf5-marble
    } else {
        configure.args-append \
                    -DWITH_Marble=OFF
    }

    # TODO: figure out if there's a more official way to enable the calligrastage build!
    patchfiles-append \
                    patch-general-cmakelist.diff \
                    patch-enable-stage+braindump.diff \
                    patch-app-icons.diff \
                    patch-build-for-macports.diff \
                    patch-open-docs-from-finder.diff \
                    patch-fix-sheets.diff
    patchfiles-append \
                    patch-fontconfig-libs.diff
    # update the code to work with poppler 0.73.0 and
    # force the compiler to use the include directive to the found Poppler install
    # rather than allowing a match with $prefix/include/poppler:
    patchfiles-append \
                    patch-poppler-update.diff

    configure.env-append \
                    PKG_CONFIG_PATH=${prefix}/libexec/poppler073/lib/pkgconfig
    configure.args-append \
                    -DAPPLE_STANDALONE_BUNDLE=OFF \
                    -DWITH_KGantt=OFF -DWITH_KChart=OFF \
                    -DRELEASE_BUILD=ON \
                    -DCMAKE_DISABLE_FIND_PACKAGE_KF5Holidays=ON

    pre-configure {
        if {${selected_components} <= 0 && ${subport} eq "${name}"} {
            ui_error "You need to select at least 1 product variant!"
            return -code error "No variants selected"
        }
        # append the final PRODUCTSET definition
        configure.args-append \
                    "-DPRODUCTSET=\"${productset}\""
    }

    build.post_args-append \
                    -k -w

    if {[variant_isset docs]} {
        patchfiles-append \
                    patch-force-docs-build.diff
        post-configure {
            ui_info "You can ignore the CMake message about not building the documentation"
        }
        productset-append \
                    DOC
    }

    if {[variant_isset karbon]} {
        productset-append \
                    KARBON
        platform darwin {
            depends_run-append \
                    port:pstoedit
        }
        set selected_components [expr ${selected_components} + 1]
        post-destroot {
            kf5.add_app_wrapper karbon5 karbon
        }
    }

    if {[variant_isset words]} {
        productset-append \
                    WORDS
        set selected_components [expr ${selected_components} + 1]
        post-destroot {
            kf5.add_app_wrapper calligrawords5 calligrawords
        }
    }

    if {[variant_isset sheets]} {
        productset-append \
                    SHEETS
        set selected_components [expr ${selected_components} + 1]
        post-destroot {
            kf5.add_app_wrapper calligrasheets5 calligrasheets
        }
    }

#     if {[variant_isset plan]} {
#         depends_lib-append \
#                     port:kf5-kdiagram
#         configure.args-replace \
#                     -DWITH_KGantt=OFF -DWITH_KGantt=ON
#         configure.args-replace \
#                     -DWITH_KChart=OFF -DWITH_KChart=ON
#         productset-append \
#                     PLAN
#         set selected_components [expr ${selected_components} + 1]
#         patchfiles-append \
#                     patch-planwork-servicename.diff
#         post-destroot {
#             kf5.add_app_wrapper calligraplan5 calligraplan
#             kf5.add_app_wrapper calligraplanwork5 calligraplanwork
#         }
#     }

    if {[variant_isset stage]} {
        depends_lib-append \
                    port:kf5-kdiagram \
                    port:libetonyek
        configure.args-replace \
                    -DWITH_KGantt=OFF -DWITH_KGantt=ON
        configure.args-replace \
                    -DWITH_KChart=OFF -DWITH_KChart=ON
        productset-append \
                    STAGE
        set selected_components [expr ${selected_components} + 1]
        post-destroot {
            kf5.add_app_wrapper calligrastage5 calligrastage
        }
    }

    if {[variant_isset braindump]} {
        depends_lib-append \
                    port:kf5-kdiagram
        configure.args-replace \
                    -DWITH_KGantt=OFF -DWITH_KGantt=ON
        configure.args-replace \
                    -DWITH_KChart=OFF -DWITH_KChart=ON
        productset-append \
                    BRAINDUMP
        set selected_components [expr ${selected_components} + 1]
        post-destroot {
            kf5.add_app_wrapper braindump5 braindump
        }
    }
}

# stub ports for easier installing of individual components
foreach comp {karbon calligrawords calligrasheets calligraplan} {
    subport kf5-${comp} {
        installs_libs   no
        supported_archs noarch
        depends_lib-append \
                        port:kf5-calligra-suite
        distfiles
        fetch {}
        checksum {}
        extract {}
        patchfiles
        use_configure   no
        build {}
        destroot {
            xinstall -d -m 755 ${destroot}${prefix}/share/doc/kf5-installed-meta-ports
            system "touch ${destroot}${prefix}/share/doc/kf5-installed-meta-ports/${subport}"
        }
    }
    if {${subport} eq "kf5-${comp}"} {
        switch ${comp} {
            "karbon" {
                description \
                        Calligra's vector graphics application
                long_description \
                        Karbon is Calligra's vector graphics application.
                default_variants +karbon
                require_active_variants kf5-calligra-suite karbon
                productset-append \
                        KARBON
            }
            "calligrawords" {
                description \
                        Calligra's word processing application
                long_description \
                        Words is Calligra's word processing application.
                default_variants +words
                require_active_variants kf5-calligra-suite words
                productset-append \
                        WORDS
            }
            "calligrasheets" {
                description \
                        Calligra's spreadsheet application
                long_description \
                        Sheets is Calligra's spreadsheet application.
                default_variants +sheets
                require_active_variants kf5-calligra-suite sheets
                productset-append \
                        SHEETS
            }
            "calligraplan" {
                PortGroup obsolete 1.0
                depends_lib
                description \
                        Calligra's project management application
                long_description \
                        Plan is Calligra's project management application.
            }
        }
    }
}

subport kf5-kdiagram {
    description     Powerful libraries (KChart, KGantt) for creating business diagrams.
    long_description \
                    ${description}
    version         2.6.1
    kf5.set_project kdiagram
    homepage        https://api.kde.org/extragear-api/graphics-apidocs/kdiagram/html
    master_sites    https://download.kde.org/stable/${kf5.project}/${version}
    distname        ${kf5.project}-${version}
    checksums       rmd160  c2f3dd7a9993668df0f3f78806f720b9b05ce0ef \
                    sha256  bde71ca5ef70b3077696d56b24e0e1f69ae255c0bf7bf453e9596afdd25dcdb0
#                     size    674016
    kf5.depends_qt5_components \
                    qtsvg qttools
    livecheck.url   http://download.kde.org/stable/${kf5.project}
}

