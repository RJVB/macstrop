commit ab9cb332b660a506cbb8da43d8db55f2c249793d
Author: Albert Astals Cid <aacid@kde.org>
Date:   Thu Oct 25 23:06:34 2018 +0200

    GBool -> bool
    
    It was just a typedef in poppler and it'll die in next versions

commit fb6bbaf64c60418150d0e65e83938503b6aa588a
Author: Antonio Rojas <arojas@archlinux.org>
Date:   Fri Nov 2 21:23:13 2018 +0100

    Fix build with poppler 0.71
    
    Port away from removed API
    
    Differential Revision: https://phabricator.kde.org/D16607

commit 05a65f9123bcb45829cca7d2bafb8a7b7971b29a
Author: Albert Astals Cid <aacid@kde.org>
Date:   Tue Jan 15 22:24:08 2019 +0100

    Guchar -> unsigned char
    
    It was just a typdef and it's now gone
    
    BUGS: 403220
    

plus a bunch of other fixes applied via side-by-side source file comparisons.

diff --git a/filters/karbon/pdf/PdfImport.cpp b/filters/karbon/pdf/PdfImport.cpp
index c3e96b0..dbcb607 100644
--- a/filters/karbon/pdf/PdfImport.cpp
+++ b/filters/karbon/pdf/PdfImport.cpp
@@ -35,8 +35,8 @@
 #pragma GCC diagnostic ignored "-Wunused-parameter"
 #endif
 
-#include <poppler/PDFDoc.h>
-#include <poppler/GlobalParams.h>
+#include <PDFDoc.h>
+#include <GlobalParams.h>
 
 K_PLUGIN_FACTORY_WITH_JSON(PdfImportFactory, "calligra_filter_pdf2svg.json",
                            registerPlugin<PdfImport>();)
@@ -88,9 +88,9 @@ KoFilter::ConversionStatus PdfImport::convert(const QByteArray& from, const QByt
     SvgOutputDev * dev = new SvgOutputDev(m_chain->outputFile());
     if (dev->isOk()) {
         int rotate = 0;
-        GBool useMediaBox = gTrue;
-        GBool crop = gFalse;
-        GBool printing = gFalse;
+        bool useMediaBox = true;
+        bool crop = false;
+        bool printing = false;
         pdfDoc->displayPages(dev, firstPage, lastPage, hDPI, vDPI, rotate, useMediaBox, crop, printing);
         dev->dumpContent();
     }
@@ -102,9 +102,6 @@ KoFilter::ConversionStatus PdfImport::convert(const QByteArray& from, const QByt
     delete globalParams;
     globalParams = 0;
 
-    // check for memory leaks
-    Object::memCheck(stderr);
-
     return KoFilter::OK;
 }
 
diff --git a/filters/karbon/pdf/SvgOutputDev.cpp b/filters/karbon/pdf/SvgOutputDev.cpp
index 931917a..402eed3 100644
--- a/filters/karbon/pdf/SvgOutputDev.cpp
+++ b/filters/karbon/pdf/SvgOutputDev.cpp
@@ -21,10 +21,10 @@
 
 #include "PdfImportDebug.h"
 
-#include <poppler/Object.h>
-#include <poppler/GfxState.h>
-#include <poppler/Stream.h>
-#include <poppler/GfxFont.h>
+#include <Object.h>
+#include <GfxState.h>
+#include <Stream.h>
+#include <GfxFont.h>
 
 #include <QFile>
 #include <QTextStream>
@@ -39,7 +39,7 @@ class SvgOutputDev::Private
 {
 public:
     Private(const QString &fname)
-            : svgFile(fname), defs(0), body(0), state(gTrue)
+            : svgFile(fname), defs(0), body(0), state(true)
             , brush(Qt::SolidPattern) {}
 
     ~Private() {
@@ -52,7 +52,7 @@ public:
     QString defsData;
     QTextStream * defs;
     QTextStream * body;
-    GBool state;
+    bool state;
     QSizeF pageSize;
     QPen pen;
     QBrush brush;
@@ -62,7 +62,7 @@ SvgOutputDev::SvgOutputDev(const QString &fileName)
         : d(new Private(fileName))
 {
     if (! d->svgFile.open(QIODevice::WriteOnly)) {
-        d->state = gFalse;
+        d->state = false;
         return;
     }
 
@@ -75,24 +75,24 @@ SvgOutputDev::~SvgOutputDev()
     delete d;
 }
 
-GBool SvgOutputDev::isOk()
+bool SvgOutputDev::isOk()
 {
     return d->state;
 }
 
-GBool SvgOutputDev::upsideDown()
+bool SvgOutputDev::upsideDown()
 {
-    return gTrue;
+    return true;
 }
 
-GBool SvgOutputDev::useDrawChar()
+bool SvgOutputDev::useDrawChar()
 {
-    return gFalse;
+    return false;
 }
 
-GBool SvgOutputDev::interpretType3Chars()
+bool SvgOutputDev::interpretType3Chars()
 {
-    return gFalse;
+    return false;
 }
 
 void SvgOutputDev::startPage(int pageNum, GfxState *state, XRef */*xref*/)
@@ -212,7 +212,7 @@ QString SvgOutputDev::convertMatrix(const QMatrix &matrix)
            .arg(matrix.dx()) .arg(matrix.dy());
 }
 
-QString SvgOutputDev::convertMatrix(double * matrix)
+QString SvgOutputDev::convertMatrix(const double * matrix)
 {
     return QString("matrix(%1 %2 %3 %4 %5 %6)")
            .arg(matrix[0]).arg(matrix[1])
@@ -387,7 +387,11 @@ QString SvgOutputDev::printStroke()
     return stroke;
 }
 
+#ifdef HAVE_POPPLER_PRE_0_64
 void SvgOutputDev::drawString(GfxState * state, GooString * s)
+#else
+void SvgOutputDev::drawString(GfxState * state, const GooString * s)
+#endif
 {
     int render = state->getRender();
     // check for invisible text -- this is used by Acrobat Capture
@@ -402,7 +406,15 @@ void SvgOutputDev::drawString(GfxState * state, GooString * s)
 
     QString str;
 
+#ifdef HAVE_POPPLER_PRE_0_64
     char * p = s->getCString();
+#else
+    #ifdef HAVE_POPPLER_PRE_0_72
+        const char * p = s->getCString();
+    #else
+        const char * p = s->c_str();
+    #endif
+#endif
     int len = s->getLength();
     CharCode code;
     Unicode *u = nullptr;
@@ -429,7 +441,7 @@ void SvgOutputDev::drawString(GfxState * state, GooString * s)
     double x = state->getCurX();
     double y = state->getCurY();
 
-    double * ctm = state->getCTM();
+    const double * ctm = state->getCTM();
     QMatrix transform(ctm[0], ctm[1], ctm[2], ctm[3], ctm[4], ctm[5]);
 
     QMatrix mirror;
@@ -451,10 +463,18 @@ void SvgOutputDev::drawString(GfxState * state, GooString * s)
     *d->body << " y=\"" << y << "px\"";
 
     if (font && font->getFamily()) {
+#ifdef HAVE_POPPLER_PRE_0_72
         *d->body << " font-family=\"" << QString::fromLatin1(font->getFamily()->getCString()) << "\"";
+#else
+        *d->body << " font-family=\"" << QString::fromLatin1(font->getFamily()->c_str()) << "\"";
+#endif
         //debugPdf << "font family:" << QString::fromLatin1( font->getFamily()->getCString() );
     } else if (font && font->getName()) {
+#ifdef HAVE_POPPLER_PRE_0_72
         *d->body << " font-family=\"" << QString::fromLatin1(font->getName()->getCString()) << "\"";
+#else
+        *d->body << " font-family=\"" << QString::fromLatin1(font->getName()->c_str()) << "\"";
+#endif
         //debugPdf << "font name:" << QString::fromLatin1( font->getName()->getCString() );
     }
     *d->body << " font-size=\"" << qMax(state->getFontSize(), state->getTransformedFontSize()) << "px\"";
@@ -476,7 +496,7 @@ void SvgOutputDev::drawString(GfxState * state, GooString * s)
 
 void SvgOutputDev::drawImage(GfxState *state, Object */*ref*/, Stream *str,
                              int width, int height, GfxImageColorMap *colorMap,
-                             int *maskColors, GBool /*inlineImg*/)
+                             bool /*interpolate*/, int *maskColors, bool /*inlineImg*/)
 {
     ImageStream * imgStr = new ImageStream(str, width, colorMap->getNumPixelComps(), colorMap->getBits());
     imgStr->reset();
@@ -488,7 +508,7 @@ void SvgOutputDev::drawImage(GfxState *state, Object */*ref*/, Stream *str,
     if (maskColors) {
         for (int y = 0; y < height; y++) {
             dest = (unsigned int *)(buffer + y * 4 * width);
-            Guchar * pix = imgStr->getLine();
+            unsigned char * pix = imgStr->getLine();
             colorMap->getRGBLine(pix, dest, width);
 
             for (int x = 0; x < width; x++) {
@@ -507,7 +527,7 @@ void SvgOutputDev::drawImage(GfxState *state, Object */*ref*/, Stream *str,
     } else {
         for (int y = 0; y < height; y++) {
             dest = (unsigned int *)(buffer + y * 4 * width);
-            Guchar * pix = imgStr->getLine();
+            unsigned char * pix = imgStr->getLine();
             colorMap->getRGBLine(pix, dest, width);
         }
 
@@ -522,7 +542,7 @@ void SvgOutputDev::drawImage(GfxState *state, Object */*ref*/, Stream *str,
         return;
     }
 
-    double * ctm = state->getCTM();
+    const double * ctm = state->getCTM();
     QMatrix m;
     m.setMatrix(ctm[0] / width, ctm[1] / width, -ctm[2] / height, -ctm[3] / height, ctm[2] + ctm[4], ctm[3] + ctm[5]);
 
@@ -543,10 +563,3 @@ void SvgOutputDev::drawImage(GfxState *state, Object */*ref*/, Stream *str,
     delete imgStr;
 }
 
-void SvgOutputDev::drawImage(GfxState *state, Object *ref, Stream *str,
-                             int width, int height, GfxImageColorMap *colorMap,
-                             GBool /*interpolate*/, int *maskColors, GBool inlineImg)
-{
-    drawImage(state, ref, str, width, height, colorMap, maskColors, inlineImg);
-}
-
diff --git a/filters/karbon/pdf/SvgOutputDev.h b/filters/karbon/pdf/SvgOutputDev.h
index 85fe55d..a510d2e 100644
--- a/filters/karbon/pdf/SvgOutputDev.h
+++ b/filters/karbon/pdf/SvgOutputDev.h
@@ -20,13 +20,8 @@
 #ifndef SVGOUTPUTDEV_H
 #define SVGOUTPUTDEV_H
 
-// Don't show this warning: it's an issue in poppler
-#ifdef __GNUC__
-#pragma GCC diagnostic ignored "-Wunused-parameter"
-#endif
-
-#include <poppler/Object.h>
-#include <poppler/OutputDev.h>
+#include <Object.h>
+#include <OutputDev.h>
 
 #include <QString>
 
@@ -44,47 +39,48 @@ public:
     explicit SvgOutputDev(const QString &fileName);
     virtual ~SvgOutputDev();
 
-    GBool isOk();
+    bool isOk();
 
-    virtual GBool upsideDown();
-    virtual GBool useDrawChar();
-    virtual GBool interpretType3Chars();
-    virtual void startPage(int pageNum, GfxState *state, XRef *xref);
-    virtual void endPage();
+    bool upsideDown() override;
+    bool useDrawChar() override;
+    bool interpretType3Chars() override;
+    void startPage(int pageNum, GfxState *state, XRef *xref) override;
+    void endPage() override;
 
     // path painting
-    virtual void stroke(GfxState * state);
-    virtual void fill(GfxState * state);
-    virtual void eoFill(GfxState *state);
+    void stroke(GfxState * state) override;
+    void fill(GfxState * state) override;
+    void eoFill(GfxState *state) override;
 
     // text
-    virtual void drawString(GfxState * state, GooString * s);
+#ifdef HAVE_POPPLER_PRE_0_64
+    void drawString(GfxState * state, GooString * s) override;
+#else
+    void drawString(GfxState * state, const GooString * s) override;
+#endif
 
     // images
-    virtual void drawImage(GfxState *state, Object *ref, Stream *str,
-                           int width, int height, GfxImageColorMap *colorMap,
-                           int *maskColors, GBool inlineImg);
-    virtual void drawImage(GfxState *state, Object *ref, Stream *str,
+    void drawImage(GfxState *state, Object *ref, Stream *str,
                            int width, int height, GfxImageColorMap *colorMap,
-                           GBool interpolate, int *maskColors, GBool inlineImg);
+                           bool interpolate, int *maskColors, bool inlineImg) override;
 
     // styles
-    virtual void updateAll(GfxState *state);
-    virtual void updateFillColor(GfxState *state);
-    virtual void updateStrokeColor(GfxState *state);
-    virtual void updateFillOpacity(GfxState *state);
-    virtual void updateStrokeOpacity(GfxState *state);
-    virtual void updateLineJoin(GfxState *state);
-    virtual void updateLineCap(GfxState *state);
-    virtual void updateMiterLimit(GfxState *state);
-    virtual void updateLineWidth(GfxState *state);
+    void updateAll(GfxState *state) override;
+    void updateFillColor(GfxState *state) override;
+    void updateStrokeColor(GfxState *state) override;
+    void updateFillOpacity(GfxState *state) override;
+    void updateStrokeOpacity(GfxState *state) override;
+    void updateLineJoin(GfxState *state) override;
+    void updateLineCap(GfxState *state) override;
+    void updateMiterLimit(GfxState *state) override;
+    void updateLineWidth(GfxState *state) override;
 
     /// Dumps content to svg file
     void dumpContent();
 private:
     QString convertPath(GfxPath *path);
     QString convertMatrix(const QMatrix &matrix);
-    QString convertMatrix(double * matrix);
+    QString convertMatrix(const double * matrix);
     QString printFill();
     QString printStroke();
 
