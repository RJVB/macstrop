diff --git a/braindump/src/SectionsBoxDock.cpp b/braindump/src/SectionsBoxDock.cpp
index cee7846bd..1ff2d2b43 100644
--- a/braindump/src/SectionsBoxDock.cpp
+++ b/braindump/src/SectionsBoxDock.cpp
@@ -129,7 +129,7 @@ void SectionsBoxDock::setup(RootSection* document, View* view)
 
 void SectionsBoxDock::slotSectionActivated(const QModelIndex& index)
 {
-    Section* section = qVariantValue<Section*>(m_proxy->data(index, DocumentModel::SectionPtr));
+    Section* section = qvariant_cast<Section*>(m_proxy->data(index, DocumentModel::SectionPtr));
     m_view->setActiveSection(section);
 }
 
diff --git a/braindump/src/layouts/ColumnLayout.cpp b/braindump/src/layouts/ColumnLayout.cpp
index c3682244d..925492c4c 100644
--- a/braindump/src/layouts/ColumnLayout.cpp
+++ b/braindump/src/layouts/ColumnLayout.cpp
@@ -94,7 +94,7 @@ void ColumnLayout::relayout()
         qDebug() << _shape << _shape->absolutePosition(KoFlake::TopLeftCorner).y() << " " << _shape->position().y();
     }
     qDebug() << "</moh>";
-    std:sort(m_shapes.begin(), m_shapes.end(), shapeIsLessThan);
+    std::sort(m_shapes.begin(), m_shapes.end(), shapeIsLessThan);
     // Update position
     qreal y = 0;
     qDebug() << "<Updating>";
diff --git a/words/part/CMakeLists.txt b/words/part/CMakeLists.txt
index a69968053..a83e75c0d 100644
--- a/words/part/CMakeLists.txt
+++ b/words/part/CMakeLists.txt
@@ -1,5 +1,7 @@
 project(wordspart)
 
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")
+
 #TODO port to textlayout-rework
 if(BUILD_TESTING)
     add_subdirectory( tests )
diff --git a/words/part/KWPageManager.cpp b/words/part/KWPageManager.cpp
index eb1030958..e5ee78f0b 100644
--- a/words/part/KWPageManager.cpp
+++ b/words/part/KWPageManager.cpp
@@ -191,6 +191,9 @@ int KWPageManager::pageNumber(const qreal y) const
 
 int KWPageManager::pageCount() const
 {
+    if (d->pages.empty()) {
+        return 0;
+    }
     int count = 0;
     QHash<int,KWPageManagerPrivate::Page>::const_iterator iter = d->pages.constBegin();
     while (iter != d->pages.constEnd()) {
diff --git a/words/part/KWRootAreaProvider.cpp b/words/part/KWRootAreaProvider.cpp
index 481e048bb..d5774f4db 100644
--- a/words/part/KWRootAreaProvider.cpp
+++ b/words/part/KWRootAreaProvider.cpp
@@ -137,8 +137,12 @@ void KWRootAreaProvider::handleDependentProviders(int pageNumber)
 KoTextLayoutRootArea* KWRootAreaProvider::provideNext(KoTextDocumentLayout *documentLayout, const RootAreaConstraint &constraints)
 {
     KWDocument *kwdoc = frameSet()->wordsDocument();
-    KWPageManager *pageManager = kwdoc->pageManager();
+    KWPageManager *pageManager = kwdoc ? kwdoc->pageManager() : nullptr;
     Q_ASSERT(pageManager);
+    if (!pageManager) {
+        return 0;
+    }
+//     qWarning() << Q_FUNC_INFO << "Checking" << kwdoc->url();
 
     int pageNumber = 1;
     KWRootAreaPage *rootAreaPage = m_pages.isEmpty() ? 0 : m_pages.last();
@@ -276,10 +280,12 @@ KoTextLayoutRootArea* KWRootAreaProvider::provideNext(KoTextDocumentLayout *docu
 
 KoTextLayoutRootArea *KWRootAreaProvider::provide(KoTextDocumentLayout* documentLayout, const RootAreaConstraint& constraints, int requestedPosition, bool *isNewArea)
 {
-    KWPageManager *pageManager = frameSet()->wordsDocument()->pageManager();
+    KWDocument *kwdoc = frameSet()->wordsDocument();
+    KWPageManager *pageManager = kwdoc ? kwdoc->pageManager() : nullptr;
     Q_ASSERT(pageManager);
-    if (pageManager->pageCount() == 0) // not ready yet (may happen e.g. on loading a document)
+    if (!pageManager || pageManager->pageCount() == 0) // not ready yet (may happen e.g. on loading a document)
         return 0;
+//     qWarning() << Q_FUNC_INFO << "Checking" << frameSet()->wordsDocument()->url();
 
     QString reallyNeededPageStyle = constraints.masterPageName;
     int visiblePageNumber = constraints.visiblePageNumber;
@@ -381,7 +387,11 @@ void KWRootAreaProvider::releaseAllAfter(KoTextLayoutRootArea *afterThis)
     debugWords << "afterPageNumber=" << afterIndex+1;
 
     bool atLeastOnePageRemoved = false;
-    KWPageManager *pageManager = frameSet()->wordsDocument()->pageManager();
+    KWDocument *kwdoc = frameSet()->wordsDocument();
+    KWPageManager *pageManager = kwdoc ? kwdoc->pageManager() : nullptr;
+    if (!pageManager) {
+        return;
+    }
     if (afterIndex >= 0) {
         for(int i = m_pages.count() - 1; i > afterIndex; --i) {
             KWRootAreaPage *page = m_pages.takeLast();
@@ -425,8 +435,11 @@ void KWRootAreaProvider::releaseAllAfter(KoTextLayoutRootArea *afterThis)
 void KWRootAreaProvider::doPostLayout(KoTextLayoutRootArea *rootArea, bool isNewRootArea)
 {
     KWDocument *kwdoc = const_cast<KWDocument*>(frameSet()->wordsDocument());
-    KWPageManager *pageManager = kwdoc->pageManager();
+    KWPageManager *pageManager = kwdoc ? kwdoc->pageManager() : nullptr;
     Q_ASSERT(pageManager);
+    if (!pageManager) {
+        return;
+    }
 
     if (frameSet()->textFrameSetType() != Words::MainTextFrameSet) {
         if (m_pages.count() > pageManager->pageCount()) {
diff --git a/libs/main/KoOpenPane.cpp b/libs/main/KoOpenPane.cpp
index dc951d24..255feba4 100644
--- a/libs/main/KoOpenPane.cpp
+++ b/libs/main/KoOpenPane.cpp
@@ -87,7 +87,7 @@ public:
 
         if(!(option.state & (int)(QStyle::State_Active & QStyle::State_Enabled)))
         {
-            int ypos = option.rect.y() + ((option.rect.height() - 2) / 2);
+            int ypos = option.rect.y() + option.rect.height() - 2;
             QRect lineRect(option.rect.left(), ypos, option.rect.width(), 2);
             QLinearGradient gradient(option.rect.topLeft(), option.rect.bottomRight());
             gradient.setColorAt(option.direction == Qt::LeftToRight ? 0 : 1, option.palette.color(QPalette::Text));
