--- keditfiletype/keditfiletype.cpp.orig	2018-10-03 15:57:04.874064326 +0200
+++ keditfiletype/keditfiletype.cpp	2018-10-03 15:58:43.044064326 +0200
@@ -129,7 +129,7 @@
 {
     QApplication app(argc, argv);
     app.setAttribute(Qt::AA_UseHighDpiPixmaps, true);
-    QApplication::setWindowIcon(QIcon::fromTheme("preferences-desktop-filetype-association"));
+    QApplication::setWindowIcon(QIcon::fromTheme("preferences-desktop-filetype-association", app.windowIcon()));
 
     KAboutData aboutData( "keditfiletype", i18n("File Type Editor"), PROJECT_VERSION,
        i18n("KDE file type editor - simplified version for editing a single file type"),
--- kcmshell/main.cpp.orig	2018-09-04 12:05:40.000000000 +0200
+++ kcmshell/main.cpp	2018-10-03 15:57:04.884064326 +0200
@@ -307,10 +307,18 @@
     }
 
     if (parser.isSet("icon")) {
-        dlg->setWindowIcon(QIcon::fromTheme(parser.value("icon")));
+        const QIcon icon = QIcon::fromTheme(parser.value("icon"));
+        if (!icon.isNull()) {
+            dlg->setWindowIcon(icon);
+            app.setWindowIcon(icon);
+        }
     } else if (!parser.isSet("icon") && !modules.isEmpty()) {
         const QString iconName = KCModuleInfo(modules.first()).icon();
-        dlg->setWindowIcon( QIcon::fromTheme(iconName) );
+        const QIcon icon = QIcon::fromTheme(iconName);
+        if (!icon.isNull()) {
+            dlg->setWindowIcon(icon);
+            app.setWindowIcon(icon);
+        }
     }
 
     if (modules.count() == 1 && app.desktopFileName() == QLatin1String("org.kde.kcmshell5")) {
--- kdesu/kdesu.cpp.orig	2018-09-04 12:05:40.000000000 +0200
+++ kdesu/kdesu.cpp	2018-10-03 15:57:04.884064326 +0200
@@ -107,7 +107,7 @@
             "jansen@kde.org", "http://www.stack.nl/~geertj/");
     aboutData.addAuthor(i18n("Pietro Iglio"), i18n("Original author"),
             "iglio@fub.it");
-    app.setWindowIcon(QIcon::fromTheme("dialog-password"));
+    app.setWindowIcon(QIcon::fromTheme("dialog-password", app.windowIcon()));
 
     KAboutData::setApplicationData(aboutData);
 
