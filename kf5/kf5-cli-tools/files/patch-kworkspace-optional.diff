--- orig.CMakeLists.txt	2018-10-03 16:08:39.784064326 +0200
+++ CMakeLists.txt	2018-10-03 16:13:46.064064326 +0200
@@ -52,7 +52,7 @@
     QUIET
 )
 
-find_package(LibKWorkspace ${PROJECT_VERSION} REQUIRED)
+find_package(LibKWorkspace ${PROJECT_VERSION} CONFIG QUIET)
 
 # Disables automatic conversions from QString (or char *) to QUrl.
 add_definitions(-DQT_NO_URL_CAST_FROM_STRING)
--- kcmshell/orig.CMakeLists.txt	2018-10-03 16:01:57.974064326 +0200
+++ kcmshell/CMakeLists.txt	2018-10-03 16:15:12.594064326 +0200
@@ -11,8 +11,12 @@
    KF5::I18n
    KF5::WindowSystem
    KF5::Activities
-   PW::KWorkspace
 )
 
+if(LibKWorkspace_FOUND)
+	add_definitions(-DHAVE_KWORKSPACE)
+	target_link_libraries(kdeinit_kcmshell5 PW::KWorkspace)
+endif()
+
 install(TARGETS kdeinit_kcmshell5  ${KDE_INSTALL_TARGETS_DEFAULT_ARGS})
 install(TARGETS kcmshell5          ${KDE_INSTALL_TARGETS_DEFAULT_ARGS})
--- kcmshell/orig.main.cpp	2018-10-03 16:17:18.484064326 +0200
+++ kcmshell/main.cpp	2018-10-03 16:15:53.414064326 +0200
@@ -40,7 +40,9 @@
 #include <KStartupInfo>
 #include <KActivities/ResourceInstance>
 
+#ifdef HAVE_KWORKSPACE
 #include <kworkspace.h>
+#endif
 
 #include <QIcon>
 #include <QCommandLineParser>
@@ -177,7 +179,9 @@
 extern "C" Q_DECL_EXPORT int kdemain(int _argc, char *_argv[])
 {
     const bool qpaVariable = qEnvironmentVariableIsSet("QT_QPA_PLATFORM");
+#ifdef HAVE_KWORKSPACE
     KWorkSpace::detectPlatform(_argc, _argv);
+#endif
     KCMShell app(_argc, _argv);
     if (!qpaVariable) {
         // don't leak the env variable to processes we start
