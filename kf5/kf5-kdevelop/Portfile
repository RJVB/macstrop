# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# Copyright (c) 2015, 2016 R.J.V. Bertin

PortSystem          1.0
PortGroup           muniversal 1.0
PortGroup           compiler_blacklist_versions 1.0
PortGroup           conflicts_build 1.0

set kf5.project     kdevelop
set kf5.virtualPath applications
set kf5.category    development
PortGroup           kf5 1.1

description         KDE/KF5 development IDE.
long_description    KDevelop5 is a free, open source IDE (Integrated \
                    Development Environment) for MS Windows, Mac OS X, \
                    Linux, Solaris and FreeBSD. It is a feature-full, \
                    plugin extensible IDE for C/C++ and other programming \
                    languages. It is based on KDevPlatform, and the KF5 \
                    and Qt libraries and is under development since 1998.
homepage            http://www.kdevelop.org/

platforms           darwin
license             GPL-2+

set PARSER "clang-parser"

variant clang_parser description "build as a single package, including port:kf5-kdevelop-${PARSER}" {
    conflicts-append ${name}-${PARSER} ${name}-${PARSER}-devel
}

subport ${name}-devel {
    description     ${description} This port follows git/master
    long_description \
                    ${long_description} This port follows git/master
}

subport ${name}-${PARSER} {
    description     Clang-based C/C++ parser plugin for KDevelop
    long_description \
                    ${description}.
    conflicts-append \
                    ${name}-${PARSER}-devel
    default_variants-append \
                    +docs
    depends_lib-append \
                    port:${name}
}

subport ${name}-${PARSER}-devel {
    description     Clang-based C/C++ parser plugin for KDevelop
    long_description \
                    ${description}.
    conflicts-append \
                    ${name}-${PARSER}
    default_variants-append \
                    +docs
    depends_lib-append \
                    port:${name}-devel
}

subport ${name}-translations {
    long_description \
                    This port contains the KDevelop translations.
    depends_run-append \
                    path:bin/kdevelop5:${name}
    default_variants-append \
                    +docs
}

if {${subport} eq "${name}"} {
    conflicts-append \
                    ${name}-devel
    depends_run-append \
                    port:kf5-cli-tools
    if {![variant_isset clang_parser]} {
        # we cannot use depends_run because of circular dependencies so we can
        # only emit a warning if we don't detect kf5-kdevelop-clang-parser as active
        # in the post-activate. This warning will always print at least once...
        post-activate {
            if {[catch {set installed [lindex [registry_active ${name}-${PARSER}] 0]}]} {
                ui_warn "Please remember to install (or activate) port:${name}-${PARSER}"
            }
        }
    }
}

if {${subport} eq "${name}-devel"} {
    conflicts-append \
                    ${name}
    depends_run-append \
                    port:kf5-cli-tools
    if {![variant_isset clang_parser]} {
        post-activate {
            if {[catch {set installed [lindex [registry_active ${name}-${PARSER}-devel] 0]}]} {
                ui_warn "Please remember to install (or activate) port:${name}-${PARSER}-devel"
            }
        }
    }
}

if {(${subport} eq "${name}-${PARSER}") || (${subport} eq "${name}-${PARSER}-devel") || [variant_isset clang_parser]} {
    variant fast description "Disables expensive parser features (currently only the \"unknown declaration solution\" finder" {}
    if {[variant_isset fast]} {
        # NB: depends on the prevent-beachballing patch!
        configure.cppflags-append \
                    -DNO_UNKNOWNDECLARATION_PROBLEM_SUPPORT
    }
    variant system conflicts llvm38 llvm39 llvm40 llvm50 description "Use the system LLVM/Clang for the C/C++ parser (must be >= v3.8)" {}
    set lldversions {3.8 3.9 4.0 5.0 6.0}
    set llvariant ""
    foreach ldv ${lldversions} {
        set llv [join [lrange [split ${ldv} .] 0 1] ""]
        set conflist ""
        foreach v ${lldversions} {
            if {${v} ne ${ldv}} {
                set v [join [lrange [split ${v} .] 0 1] ""]
                set conflist "${conflist} llvm${v}"
            }
        }
        variant llvm${llv} conflicts ${conflist} description "Use LLVM/Clang ${ldv} for the C/C++ parser" {}
        if {[variant_isset llvm${llv}]} {
            set llvariant llvm${llv}
        }
    }
    if {${llvariant} eq "" && ![variant_isset system]} {
        default_variants \
                    +llvm40
    }
    foreach ldv ${lldversions} {
        set llv [join [lrange [split ${ldv} .] 0 1] ""]
        if {[variant_isset llvm${llv}]} {
            depends_lib-append \
                port:llvm-${ldv} port:clang-${ldv}
            configure.args-append \
                -DLLVM_ROOT=${prefix}/libexec/llvm-${ldv}
        }
    }
}
if {${subport} eq "${name}" || ${subport} eq "${name}-devel"} {
    platform darwin {
        variant gdb description {experimental: build the GDB debugger plugin} {}
        if {[variant_isset gdb]} {
            depends_run-append \
                    port:gdb
        }
    }
}

# this file is called kdevplatform_version.h in kdevplatform KF5
kf5.require_kf5compat -port kdevelop include/kdevplatform/kdevplatformversion.h

if {(${subport} eq "${name}-devel") || (${subport} eq "${name}-${PARSER}-devel")} {
    fetch.type      git
    git.url         git://anongit.kde.org/kdevelop
    git.branch      6fb3187115d06067e64974d1e3eed9f7fb9f673d
    version         5.3.1.58
    if {${subport} eq "${name}-${PARSER}-devel"} {
        worksrcdir  ${name}-clangparser-5
        distname    ${name}-clangparser-5
    } else {
        worksrcdir  ${name}-5
        distname    ${name}-5
    }
    # where patches for the 5.3 git branch live
    set PPREFIX53   53x
    set PPREFIX53d  devel53
    # patches for (standalone) kdevplatform 5.2 that still apply
    # after kdevplatform was moved inside the kdevelop sources:
    set PKDEVP52    kdevplatform52
} else {
    version         5.3.1
    use_xz          yes
    set branch      [join [lrange [split ${version} .] 0 1] .]
    use_xz          yes
    master_sites    http://download.kde.org/stable/kdevelop/${version}/src
    distname        ${kf5.project}-${version}
    checksums       rmd160  34a159309bf6c42ae5b84c4cb168ca764ca8f7e3 \
                    sha256  d919274f7522ff974bc650f282ae3e640fc3fa9e406c0dd12986aa8b8fca2881
#                     size    6671416
    # where patches for the current 5.x release series live
    set PPREFIX53   53x
    set PPREFIX53d  ${PPREFIX53}
    # patches for (standalone) kdevplatform 5.2 that still apply
    # after kdevplatform was moved inside the kdevelop sources:
    set PKDEVP52    kdevplatform52
}
conflicts-append    port:kf5-kdevplatform port:kf5-kdevplatform-devel

# port:kdevelop (KDE4) won't build if kf5-kdevplatform is active, but that handicap
# is not mutual. Keep this block as a reminder though.
# conflicts_build-append \
#                     port:kdevplatform \
#                     port:kdevplatform-devel \
#                     port:kdevplatform-git

depends_build-append \
                    port:lmdbxx

depends_lib-append  port:boost \
                    port:grantlee5 \
                    port:sparsehash \
                    port:kf5-libkomparediff2 \
                    port:lmdb

kf5.depends_frameworks \
                    karchive kguiaddons kjobwidgets knotifications \
                    kwidgetsaddons purpose sonnet

patchfiles-append   ${PPREFIX53}/patch-decorated-version.diff \
                    ${PPREFIX53}/patch-separate-ide-and-parser.diff

# constrain the default number of background parser threads, and
# get optional timing output when KDEV_BACKGROUNDPARSER_TIMINGS is set
patchfiles-append   ${PPREFIX53}/patch-bg-parser-tweaks.diff

# kdevplatform patches existing at the time of the kdevplatform integration
# into kdevelop for the 5.2 release. New ones should not go in here, and
# modified patches should be moved out.
#                     ${PKDEVP52}/patch-docview-hidden-by-default.patch
patchfiles-append   ${PKDEVP52}/patch-outputfilteringstrats.diff \
                    ${PKDEVP52}/patch-projectman-shortcuts-simple.diff \
                    ${PKDEVP52}/patch-grep-improved-exclude-filter.diff \
                    ${PKDEVP52}/patch-check-oosource-build-dir.diff \
                    ${PKDEVP52}/patch-kdevplatform-add-style-menu.diff \
                    ${PPREFIX53}/patch-use-what-dialogs.diff \
                    ${PPREFIX53}/patch-temp-fixes-devel.diff \
                    ${PPREFIX53}/patch-projman-horizscroll.diff \
                    ${PKDEVP52}/patch-x11-no-dockmenu.diff \
                    ${PKDEVP52}/patch-patchreview-active-state.diff \
                    ${PKDEVP52}/patch-problemreport-focus.diff \
                    ${PKDEVP52}/patch-avoid-duchain-hang-on-exit.diff

if {${subport} ne "${name}-translations"} {
    post-patch {
        # WIP so a -p1 patch which also contains part of another patch that is under upstream review.
        # apply with system and ignore the expected error
        ui_info "--->  Applying WIP patch ${PPREFIX53}/patch-commit-msg-width.diff"
        catch {system -W ${worksrcpath} "patch -Np1 -i ${filespath}/${PPREFIX53}/patch-commit-msg-width.diff"}
        ui_info "--->  Applying WIP patch ${PPREFIX53}/patch-diff-context4.diff"
        # https://phabricator.kde.org/D4981
        catch {system -W ${worksrcpath} "patch -Np1 -i ${filespath}/${PPREFIX53}/patch-diff-context4.diff"}
        ui_info "--->  Applying WIP patch ${PPREFIX53}/patch-topcontexts.diff"
        # https://phabricator.kde.org/D12746
        catch {system -W ${worksrcpath} "patch -Np1 -i ${filespath}/${PPREFIX53}/patch-topcontexts.diff"}
        # https://phabricator.kde.org/D14469
        # disabled for now, lineheight issues!
#         catch {system -W ${worksrcpath} "patch -Np1 -i ${filespath}/${PPREFIX53d}//patch-problemrep-wordwrap.diff"}

#         reinplace "s|@PREFIX@|${prefix}|g" ${worksrcpath}/plugins/manpage/manpageplugin.cpp
#         reinplace "s|@PREFIX@|${prefix}|g" ${worksrcpath}/plugins/cmake/cmakeutils.cpp
#         reinplace "s|/usr/local|${prefix}|g" ${worksrcpath}/plugins/cmake/cmakeutils.cpp
        # redundant soon too
        reinplace "s|/usr/bin/python|/usr/bin/env python|g" \
            ${worksrcpath}/plugins/qmljs/3rdparty/qtcreator-libs/qmljs/parser/changeLicense.py
        foreach p [glob -nocomplain ${worksrcpath}/plugins/qmljs/nodejsmodules/*.py] {
            reinplace "s|/usr/bin/python3|/usr/bin/env python3|g" ${p}
        }
    }
    post-activate {
        ui_debug "Updating MIME database..."
        system "env XDG_DATA_DIRS=${prefix}/share ${prefix}/bin/update-mime-database -V ${prefix}/share/mime"
    }
}

if {${subport} eq "${name}" || ${subport} eq "${name}-devel"} {
    # drop the subversion variant. Who wouldn't want it ...
    variant subversion description {Add subversion support for kdevelop} {}
    if {[variant_isset subversion]} {
        depends_lib-append  port:subversion
        configure.args-append \
                    -DCMAKE_DISABLE_FIND_PACKAGE_SubversionLibrary=OFF
    } else {
        configure.args-append \
                    -DCMAKE_DISABLE_FIND_PACKAGE_SubversionLibrary=ON
    }
# the subversion plugin is currently not functional
#     default_variants    +subversion

    configure.args-append \
                    -DKDEVELOP_NATIVE_DIALOGS=OFF
    variant nativedialogs description {use native instead of KDE file dialogs} {}
    if {[variant_isset nativedialogs]} {
        configure.args-replace \
                    -DKDEVELOP_NATIVE_DIALOGS=OFF
                    -DKDEVELOP_NATIVE_DIALOGS=ON
    }

    patchfiles-append \
                    ${PPREFIX53}/patch-docview.diff
    # standalone IdealDockWidget windows
    patchfiles-append \
                    ${PPREFIX53}/patch-regular-undocked-windows.diff \
                    ${PPREFIX53}/patch-docview-standalone.diff
    # https://phabricator.kde.org/D9344
    patchfiles-append \
                    ${PPREFIX53}/patch-better-projectname-support.diff
}
# this/ese one(s) should always be applied:
# https://phabricator.kde.org/D8211
patchfiles-append   ${PPREFIX53}/patch-qtb-help-browser2.diff

patchfiles-append   ${PPREFIX53}/patch-tearoff-menus.diff

# put all temps in our own tmpdir
patchfiles-append   ${PPREFIX53}/patch-kdevelop-tempdir.diff

# variants to determine the documentation rendering backend (default QTextBrowser)
# The clang-parser plugin builds (but doesn't install) part of the implementation
# and should thus have the same variant to avoid confusing cmake warnings (and has
# no business depending on a large Qt component for building something it won't install).
variant webengine conflicts webkit description {display HTML documentation using QtWebEngine instead of QtWebKit or QTextBrowser} {}
variant webkit conflicts webengine description {use QtWebkit for the documentation viewer instead of QtWebEngine or QTextBrowser} {}

kf5.depends_qt5_components \
                    qtdeclarative qttools

# docviewer backend selection. Always use both DISABLE flags to avoid isses
# during incremental rebuilds for using another backend.
if {[variant_exists webengine] && [variant_isset webengine]} {
    configure.args-append \
                        -DCMAKE_DISABLE_FIND_PACKAGE_Qt5WebEngineWidgets=OFF \
                        -DCMAKE_DISABLE_FIND_PACKAGE_Qt5WebKitWidgets=ON
    kf5.depends_qt5_components \
                    qtwebengine
} else {
    configure.args-append \
                        -DCMAKE_DISABLE_FIND_PACKAGE_Qt5WebEngineWidgets=ON \
                        -DCMAKE_DISABLE_FIND_PACKAGE_Qt5WebKitWidgets=OFF
    if {![variant_exists webkit] || [variant_isset webkit]} {
        # WebKit obligatory or requested
        kf5.depends_qt5_components \
                    qtwebkit
    } else {
        configure.args-replace \
                        -DCMAKE_DISABLE_FIND_PACKAGE_Qt5WebKitWidgets=OFF \
                        -DCMAKE_DISABLE_FIND_PACKAGE_Qt5WebKitWidgets=ON
    }
}

kf5.depends_frameworks \
                    kcmutils kconfig kdeclarative kdoctools \
                    ki18n kiconthemes kio kitemmodels \
                    kitemviews knewstuff knotifyconfig \
                    kparts kservice ktexteditor \
                    kwindowsystem kxmlgui threadweaver
depends_lib-append  port:kf5-libksysguard
# the build system will check for kdevelop-pg-qt, but the actual dependency appears
# to be a run-time one on kdev-pg-qt.
depends_build-append \
                    path:bin/kdev-pg-qt:kf5-kdevelop-pg-qt

platform darwin {
    compiler.blacklist *gcc* {clang < 602} macports-clang-3.3 macports-clang-3.4 macports-clang-3.5
    foreach clv {3.6 3.7 3.8 3.9 4.0 5.0 6.0} {
        if {[file exists ${prefix}/bin/clang-mp-${clv}]} {
            compiler.whitelist-prepend macports-clang-${clv}
        }
        compiler.fallback-prepend macports-clang-${clv}
    }
}

#Binaries do not link to openssl
license_noconflict  openssl

#Using c++0x for Lion and higher in case of clang 64-bit
if {${configure.compiler} eq "clang" && ${os.platform} eq "darwin" && ${os.major} >= 11} {
    lappend merger_configure_args(x86_64)   -DHAVE_UNORDERED_MAP=1
    if {${build_arch} eq "x86_64" && ![variant_isset universal]} {
        configure.args-append               -DHAVE_UNORDERED_MAP=1
    }
}

pre-configure {
    #Suppress these arguments from cmake portgroup 
    #which break compilation for develop
    configure.args-delete   -DCMAKE_OSX_DEPLOYMENT_TARGET="" \
                            -DCMAKE_OSX_SYSROOT=/
}

# most patchfiles are applied for both subports even if the clang-parser
# port only needs the support4Objc patch. Keep this patch as the 1st in the list!
if {${subport} eq "${name}-devel" || ${subport} eq "${name}-${PARSER}-devel"} {
    # add a reparse action in the project manager context menu:
    # https://phabricator.kde.org/D11934
    # (committed to the master branch)
    patchfiles-append \
                    ${PPREFIX53}/patch-reparse-context-action.diff
    # enable building the meson manager if the subdir has been added to
    # the source tree. Experimental at the moment, so that add has to
    # be done manually.
    patchfiles-append \
                    ${PPREFIX53d}/patch-add-meson-manager.diff
    # cherry-pick from master: show combined problem/context popups
    # if not higher than 1/3 the screen height; else show context popup
    # or problem popup (in that priority order). The result is that
    # you get the problem (negative) popup unless there's positive
    # feedback (context) to show.
    patchfiles-append \
                    ${PPREFIX53d}patch-D18229.diff
}

#     patch-cmakeprojects-avoid-crashing.diff no longer needed?
patchfiles-append   ${PPREFIX53}/patch-temp-fixes.diff \
                    ${PPREFIX53}/patch-prevent-patchreview-crash.diff
# cf. #a8d7c1bd2351d25faa47e9ba9c17b3d52d173579
# https://phabricator.kde.org/D7930
patchfiles-append   ${PPREFIX53d}/patch-cmake-normalise-builddir.diff
# https://phabricator.kde.org/D7745
# https://bugs.kde.org/show_bug.cgi?id=384880
# https://bugs.kde.org/show_bug.cgi?id=387238
# other3-dirwatching introduces async. dirwatcher feeding with
# only directories, protection against concurrent dir reloads and
# representation of reload jobs in the run controller.
patchfiles-append   ${PPREFIX53}/patch-defer-parsing.diff \
                    ${PPREFIX53}/patch-other3-dirwatching.diff

patchfiles-append   ${PPREFIX53}/patch-no-krunner.diff \
                    ${PPREFIX53}/patch-rename-kdevexclam.diff \
                    ${PPREFIX53}/patch-open-docs-from-Finder-and-env-profile.diff \
                    ${PPREFIX53}/patch-menu-under-x11.diff
# https://phabricator.kde.org/D17255
patchfiles-append   ${PPREFIX53d}/patch-cmake-macports-first.diff
patchfiles-append \
                    ${PPREFIX53}/patch-extended-support4Objc-parser.patch
# https://phabricator.kde.org/D16218
patchfiles-append \
                    ${PPREFIX53}/patch-signal-handler.diff
# cherry-pick from future (5.4):
patchfiles-append \
                    ${PPREFIX53}/patch-function-completion.diff
# # https://phabricator.kde.org/D3145
# patchfiles-append   patch-D3145.diff

# replace another Q_ASSERT with a runtime check. Requires kdevplatform:patch-export-iproblem.diff
# https://bugs.kde.org/show_bug.cgi?id=370641
patchfiles-append   ${PPREFIX53}/patch-clangproblem.diff

# "fix" some known source(s) of beachballing (main thread blocking)
# temporarily disabled
patchfiles-append   ${PPREFIX53}/patch-prevent-beachballing.diff

patchfiles-append   ${PPREFIX53d}/patch-announce-legacy-import.diff

# # make it possible for the user to lock the ~/.cache/kdevduchain/*/topcontexts directories
# # to prevent filling the cache directory with loads of smallish files, and only get
# # a single warning about it per session.
# patchfiles-append   ${PPREFIX52}/patch-handle-locked-topcontexts.diff

variant qthelpviewer description {use Qt's Assistant as an external help viewer} {}
if {[variant_isset qthelpviewer]} {
    depends_run-append \
                    path:${qt_bins_dir}/assistant:qt5-assistant
    patchfiles-append \
                    ${PPREFIX53}/patch-use-external-qtassistant.diff
}

platform darwin {
    # on OS X only lldb can be used, so don't build the gdb-based debugging facility
    if {![variant_isset gdb]} {
        patchfiles-append \
                    ${PPREFIX53}/patch-disable-gdbugger.diff
    }
}
# platform linux {
#     patchfiles-append \
#                     patch-binarypath=kdevelop5.diff
# }

# our kdev_format_source has suffix 5
patchfiles-append   ${PPREFIX53}/patch-kdevformatsource.diff

patchfiles-append   ${PPREFIX53}/patch-cleanup-tempfiles.diff

# cope with what seems to be a bug in clang 5.0.2 on Linux
patchfiles-append   ${PPREFIX53}/patch-use-pthreads-linux.diff

# prevent a crash in the qmake plugin
patchfiles-append   ${PPREFIX53}/patch-safer-qmake-plugin.diff

# force the completion popup to open only when it's completely populated
patchfiles-append   ${PPREFIX53}/patch-completion-popup.diff

if {${subport} eq ${name} || ${subport} eq "${name}-${PARSER}"} {
    patchfiles-append \
                    ${PPREFIX53}/patch-no-translations.diff \
                    ${PPREFIX53}/patch-patchreview-set-updateComment.diff \
                    ${PPREFIX53}/patch-kte-integration.diff
} elseif {${subport} eq "${name}-translations"} {
    # extract only the translations and CMake stuff
    extract.post_args-append \
                   ${distname}/CMakeLists.txt ${distname}/cmake ${distname}/po
    # NB: we *reset* patchfiles here!
    patchfiles      ${PPREFIX53}/patch-only-translations.diff
}

if {(${subport} eq "${name}") || (${subport} eq "${name}-devel")} {
    # # build dependency on Oxygen is only required when not building with the shipped icon (from Breeze)
    # depends_build-append \
    #                     ${kf5::oxygen-icons_dep}
    depends_run-append \
                    path:bin/kdev-pg-qt:kf5-kdevelop-pg-qt \
                    port:cmake \
                    port:cppcheck \
                    port:coreutils

    depends_lib-append \
                    ${kf5::oxygen-icons_dep}

    configure.args-append \
                    -DKDEVELOP_BUILD_IDE=ON \
                    -DKDEVELOP_SINGLE_APP=OFF
    if {[variant_isset clang_parser]} {
        configure.args-append \
                    -DKDEVELOP_BUILD_CLANG_PARSER=ON
    } else {
        configure.args-append \
                    -DKDEVELOP_BUILD_CLANG_PARSER=OFF
    }

    variant apidocs description {Generate the API documentation} {}
    if {![variant_isset apidocs]} {
        kf5.allow_apidocs_generation no
    } else {
        default_variants +docs
        kf5.allow_apidocs_generation yes
    }

    configure.args-append \
                    -DCMAKE_DISABLE_FIND_PACKAGE_OktetaKastenControllers=ON
    variant okteta description "Adds support for okteta" {}
    default_variants \
                    +okteta
    if {[variant_isset okteta]} {
        depends_lib-append  port:kf5-okteta
        configure.args-replace \
                    -DCMAKE_DISABLE_FIND_PACKAGE_OktetaKastenControllers=ON \
                    -DCMAKE_DISABLE_FIND_PACKAGE_OktetaKastenControllers=OFF
    }

    platform darwin {
        variant single_app description {Use QtSingleApplication as the principal class (upstream option)} {}
        if {[variant_isset single_app]} {
            configure.args-replace \
                    -DKDEVELOP_SINGLE_APP=OFF \
                    -DKDEVELOP_SINGLE_APP=ON
        }

        kf5.kde4compat {
            post-destroot {
                file rename ${destroot}${prefix}/share/doc/HTML/en/kdevelop ${destroot}${prefix}/share/doc/HTML/en/kdevelop5
                file rename ${destroot}${prefix}/share/mime/packages/kdevelop.xml ${destroot}${prefix}/share/mime/packages/kdevelop5.xml
                foreach i {bazaar subversion cmake kdevelop github-forked github-private github-repo kdevgh \
                        classnew dirsync methodnew variablenew} {
                    set icons [glob -nocomplain ${destroot}${prefix}/share/icons/*/*/*/${i}.png]
                    if {${icons} ne ""} {
                        ui_debug "Deleting ${i} icons: ${icons}"
                        file delete -force {*}${icons}
                    }
                }
                file delete -force {*}[glob ${destroot}${prefix}/share/icons/*/*/*/git.svg]
                file delete -force {*}[glob ${destroot}${prefix}/share/icons/*/*/*/subversion.svg]
                file rename ${destroot}${prefix}/bin/kdev_format_source \
                        ${destroot}${prefix}/bin/kdev_format_source5
                file rename ${destroot}${prefix}/bin/kdevplatform_shell_environment.sh \
                        ${destroot}${prefix}/bin/kdevplatform_shell_environment5.sh
#                 file delete -force ${destroot}${prefix}/share/kdevcodegen \
#                         ${destroot}${prefix}/share/kdevcodeutils
            }
        }

        post-destroot {
            # kdevelop is very chatty; protect the system.log when started through LaunchServices:
            move ${destroot}${kf5.applications_dir}/kdevelop.app/Contents/MacOS/kdevelop \
                 ${destroot}${kf5.applications_dir}/kdevelop.app/Contents/MacOS/kdevelop.bin
            xinstall -m 755 -W ${filespath} detach-terminal.sh ${destroot}${kf5.applications_dir}/kdevelop.app/Contents/MacOS/kdevelop

            # HeapTrack is a Linux thing, no point installing it on Mac.
            foreach p [glob -nocomplain ${destroot}${qt_plugins_dir}/kdevplatform/*/kdevheaptrack.so] {
                file delete -force ${p}
            }

            # install a shortcut in ${prefix}/bin (sic, kdevelop, because on linux we'll build an exec with that name)
            kf5.wrapper_env_additions "KDEV_DISABLE_SPLASH=1"
            kf5.add_app_wrapper kdevelop5 kdevelop kdevelop.bin
            kf5.wrapper_env_additions "QT_QPA_PLATFORM=xcb ## This requires port:qt5-kde-x11 or qt5-kde-devel-x11"
            kf5.add_app_wrapper kdevelop5-x11 kdevelop kdevelop.bin
            kf5.wrapper_env_additions
        }
        notes-append "Try adding ${prefix}/bin to the launchctl PATH if KDevelop complains about finding \
            plugins when started through the Finder. For instance: `launchctl setenv PATH \
            \"${prefix}/bin:/usr/bin:/bin:${prefix}/sbin:/usr/sbin:/sbin\"`\
            Also, try setting KDEV_NO_QT_DOCUMENTATION=1 if KDevelop crashes because of too many open files."
    }

    post-destroot {
        ifplatform other {
            kf5.add_app_wrapper kdevelop5 kdevelop
        }
        file rename ${destroot}${prefix}/bin/kdevelop\! ${destroot}${prefix}/bin/kdevelop5\!
        xinstall -m 755 ${filespath}/cmake2port ${destroot}${prefix}/bin/
        ln -s cmake2port ${destroot}${prefix}/bin/cmake2port_noserver
        xinstall -m 755 ${filespath}/make2port ${destroot}${prefix}/bin/
        xinstall -m 755 ${filespath}/make-mp ${destroot}${prefix}/bin/
        xinstall -m 755 ${filespath}/meson2port ${destroot}${prefix}/bin/
        xinstall -m 755 ${filespath}/kdevelop-qthelp-viewer ${destroot}${prefix}/bin/kdevelop-qthelp-viewer
        xinstall -m 755 ${filespath}/port-busy ${destroot}${prefix}/bin/
        xinstall -m 755 ${filespath}/kdevelop-cache-cleanup ${destroot}${prefix}/bin/kdevelop-cache-cleanup
        reinplace "s|@PREFIX@|${prefix}|g" ${destroot}${prefix}/bin/make-mp \
            ${destroot}${prefix}/bin/cmake2port
        reinplace "s|@QTBINDIR@|${qt_bins_dir}|g" ${destroot}${prefix}/bin/kdevelop-qthelp-viewer
    }
} elseif {${subport} eq "${name}-translations"} {
    # nothing to be seen here for now
} else {
    # the clang-based parser component
    if {![info exists BDIR]} {
        set BDIR    ${build.dir}
    }
    kf5.allow_apidocs_generation no

    configure.args-append \
                    -DKDEVELOP_BUILD_IDE=OFF \
                    -DKDEVELOP_BUILD_CLANG_PARSER=ON
    cmake.generator_blacklist "*Ninja*"
    set build.dir ${workpath}/build/plugins/clang
    if {[info exists compress.build_dir]} {
        compress.build_dir ${workpath}/build
    }
#     configure.args-append \
#                     -DBUILD_TESTING=OFF
    # One can experiment with linking the Xcode libclang via the following additional configure.arg:
    # -DCLANG_LIBCLANG_LIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/libclang.dylib
}

# large ports, just as well try to build as much as possible to catch as many potential errors as possible
build.post_args-append -k

livecheck.url   http://download.kde.org/stable/kdevelop
