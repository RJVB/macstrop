# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# Copyright (c) 2015-18 R.J.V. Bertin

PortSystem          1.0
set kf5.framework   placeholder
PortGroup           kf5 1.1
PortGroup           code-sign 1.0

# kf5.latest_version is used only in this Portfile and is different
# from kf5.version when the KF5 Frameworks are being upgraded.
set kf5.latest_version \
                    5.52.0
### subport revbumps

name                KF5-Frameworks
version             ${kf5.version}
set kf5::cat        KF5-Frameworks
categories-append   ${kf5::cat}
description         meta-port for the KDE Frameworks Version ${kf5.version}
long_description    ${description}
maintainers         gmail.com:rjvbertin openmaintainer

installs_libs       yes
if {${os.platform} eq "darwin"} {
    test.run        no
} else {
    test.run        yes
}

if {${subport} eq "kf5-ksyntaxhighlighting"} {
    # syntax definitions install type
    revision        1
} elseif {${subport} eq "kf5-purpose"} {
    # phabricator plugin crash fix
    revision        1
} elseif {${subport} eq "kf5-kiconthemes"} {
    platform darwin {
        # ksvg2icns changes
        revision    1
    }
} elseif {${subport} eq "kf5-kwayland"} {
    platform darwin {
        # drop EGL dependency on Mac
        revision    1
    }
} elseif {${subport} eq "kf5-kio"} {
    ifplatform darwin {
        # ACL support
        # filewidget column resizing
        # kioexec "agentify"
        revision    3
    } else {
        revision    1
    }
} elseif {${subport} eq "kf5-kdeclarative"} {
    # for the plotter variant
    revision        1
} elseif {${subport} eq "kf5-kinit"} {
    ifplatform darwin {
        # configurable foreground push delay
        revision    1
    }
} elseif {${subport} eq "kf5-attica"} {
    # for the fwd header install destination
    revision        1
}

# frameworks with "namespaced headers" that will break on a case-insensitive FS
# (based on `ll `port work KF5-Frameworks`/../../kf5-*//work/destroot/opt/local/include/KF5/* | egrep ':$|[^\.]/$'`
# attica baloo kactivities kactivities-stats kdeclarative{,calendarevents,kquickaddons,quickaddons}
# kdesu kdnssd kfilemetadata kio{core,gui,widgets} kjsembed kpackage kparts kpeople{,backend}
# kross krunner ktexteditor kunitconversion kxmlrpcclient purpose solid sonnet threadweaver


# hack, experimental and WIP: get KF5 5.54.0+ to build against Qt 5.9.0 ...
# NB: this might become a post-patch block, and the whole experiment is likely
# to be abandoned soon after 5.54.0 .
# It also makes certain frameworks ports incompatible with stock Qt 5.9 which
# does not have the backport-from-future patches in qt5-kde (qt5-kde-devel, currently!)
pre-patch {
    reinplace -q "s|set(REQUIRED_QT_VERSION 5.10.0)|set(REQUIRED_QT_VERSION 5.9.0)|g" ${worksrcpath}/CMakeLists.txt
}

# mapping framework names to their tier; entries in build order
set kf5::tier1_frameworks {kapidox attica karchive kcodecs kconfig kcoreaddons \
    kdbusaddons kdnssd kguiaddons ki18n kidletime kimageformats kitemmodels \
    kitemviews kplotting ksyntaxhighlighting kuserfeedback kwidgetsaddons \
    kwindowsystem solid sonnet threadweaver}
# platform linux {
    set kf5::tier1_frameworks [lappend kf5::tier1_frameworks kwayland]
# }
# kgenapidox is a fossil:
set kf5::tier1_frameworks [lappend kf5::tier1_frameworks kgenapidox]
set kf5::tier2_frameworks {kauth kcompletion kcrash kdoctools kfilemetadata kjobwidgets knotifications kpackage kpty kunitconversion}
set kf5::tier3_frameworks {kconfigwidgets kiconthemes kservice kglobalaccel ktextwidgets kxmlgui kbookmarks kwallet kio baloo kactivities kactivities-stats kdeclarative kcmutils kinit kded kparts kdewebkit kdesignerplugin kdesu kemoticons knewstuff knotifyconfig kpeople plasma-framework kirigami2 ktexteditor kxmlrpcclient krunner}
set kf5::tier3_frameworks [lappend kf5::tier3_frameworks kirigami purpose qqc2-desktop-style]
set kf5::tier4_frameworks {frameworkintegration}
set kf5::portingAid_frameworks {kdelibs4support kjs khtml kross kjsembed}

proc kf5::tier {{fw -1}} {
    global subport kf5.portingAid name

    if {${fw} == -1} {
        if {[info exists kf5.portingAid] && ${kf5.portingAid}} {
            return "portingAid"
        } else {
            set fw [string map {"kf5-" ""} ${subport}]
        }
    }
    set fwnd [string map {"-devel" ""} ${fw}]
    foreach t {tier1 tier2 tier3 tier4 portingAid} {
        namespace upvar ::kf5 ${t}_frameworks lname
        if {[lsearch -exact $lname ${fw}] >= 0 || [lsearch -exact $lname ${fwnd}] >= 0 \
                || ${fw} eq "${t}-frameworks"} {
            return "${t}"
        }
    }
    if {[lsearch -exact ${kf5::portingAid_frameworks} ${fw}] >= 0 \
                || [lsearch -exact ${kf5::portingAid_frameworks} ${fwnd}] >= 0 \
                || ${fw} eq "tier${t}-frameworks" || ${fw} eq "portingaid-frameworks"} {
        return "portingAid"
    } elseif {${fw} ne "placeholder" && ${fw} ne "${name}"} {
        ui_error "unknown framework ${fw} in kf5::tier, `port file ${subport}` line [dict get [info frame 0] line]"
        return -code error "unknown framework"
    }
}

# check what frameworks version we will use; kf5.version or kf5.latest_version
# if it's different and (NO LONGER if!) the user enabled the alternative (for port devs. only!).
# add the tier levels one by one to the switch to override the default (= using kf5.version}).
# This way, upgrades can be handled and committed per tier (in order!!).
# The enable check was removed because it gave rise to deactivation errors as the enabler file
# wasn't copied to the registry ${filespath}. If ever it is justified, introduce a +use_latest
# or +ignore_latest variant.
ui_debug "Comparing version ${kf5.version} to latest_version ${kf5.latest_version}"
if {(${kf5.latest_version} ne ${kf5.version})} {
    set tier [kf5::tier]
    set kf5.old_version ${kf5.version}

#     Upgrade cycle (CSH syntax):
#     > port-redo-install-phase --all $TIERn_PORTS or port clean $TIERn_PORTS
#     # verify all patches, handle any ports with errors individually
#     > port -nok -pv patch `port-active-variants -echo $TIERn_PORTS`
#     # configure all ports to be built. Can be a single command as the patch step
#     # when using the default compiler and compiler options
#     > foreach p ($TIERn_PORTS)
#       port -nok -v configure `port-active-variants -echo $p` configure.optflags=XXX configure.compiler=YYY [configureccache=yes]
#       end
#     # tier1 and tier2 ports can be now be handled as follows, handling any destroot errors
#     # individually (per port)
#     > sudo port -nok -p destroot `port-active-variants -echo $TIERn_PORTS` [configureccache=yes] && \
#       sudo port -nok upgrade `port-active-variants -echo $TIERn_PORTS` [configureccache=yes]
#     # for Tier3 and PortingAids frameworks: force cmake to rerun at the start of the build
#     # (because libraries and possibly headers will change when ports are upgraded)
#     > port-redo-install-phase -recmake $TIERn_PORTS
#     # repeat until done, handling any errors per port (the -p is just to let each iteration go
#     # as far as possible while you do something else).
#     > sudo port -nok -p upgrade `port-active-variants -echo $TIERn_PORTS` [configureccache=yes]

#         "tier2" {
#             ui_debug "${tier} frameworks use latest_version"
#             kf5.use_latest  kf5.version
#             version         ${kf5.version}
#             set checksums.table \
#                     checksums-${kf5.version}.table
#         }
#         "tier3" {
#             ui_debug "${tier} frameworks use latest_version"
#             kf5.use_latest  kf5.version
#             version         ${kf5.version}
#             set checksums.table \
#                     checksums-${kf5.version}.table
#         }
#         "tier4" {
#             ui_debug "${tier} frameworks use latest_version"
#             kf5.use_latest  kf5.version
#             version         ${kf5.version}
#             set checksums.table \
#                     checksums-${kf5.version}.table
#         }
#         "portingAid" {
#             ui_debug "${tier} frameworks use latest_version"
#             kf5.use_latest  kf5.version
#             version         ${kf5.version}
#             set checksums.table \
#                     checksums-${kf5.version}.table
#         }
    ui_debug "${subport} is registered as a ${tier} framework"
    switch ${tier} {
        "tier1" {
            ui_debug "${tier} frameworks use latest_version"
            kf5.use_latest  kf5.version
            version         ${kf5.version}
            set checksums.table \
                    checksums-${kf5.version}.table
        }
    }

    post-patch {
        switch ${tier} {
            "tier2" -
            "tier3" -
            "tier4" -
            "portingAid" {
                # maintainer convenience for the frameworks that have dependencies on other
                # frameworks. Pretend the installed version is new enough for building
                # so that it becomes possible to run the configure step for all same-tier subports
                # and then do the actual upgrade in a single bulk command.
                # This changes nothing for users who simply do `port upgrade kf5-tierN-frameworks`
                # (or upgrade outdated) as each subsequent configure step will see the latest version
                # already installed.
                # NB: it may be necessary to run `port-redo-install-phase -recmake <ports>` on
                # the ports configured against the previous, installed version before doing the build,
                # esp. for the Tier3 and PortingAids frameworks which need to be upgraded one by one
                # because they can depend on each other.
                if {[file exists ${worksrcpath}/CMakeLists.txt]} {
                    reinplace -q \
                        "s|KF5_DEP_VERSION \"${kf5.latest_version}\"|KF5_DEP_VERSION \"${kf5.old_version}\"|g" \
                        ${worksrcpath}/CMakeLists.txt
                }
            }
        }
    }
}
if {![info exists checksums.table]} {
    set checksums.table \
                    checksums.table
}

# read the checksums from a file
if {[file exists ${filespath}/${checksums.table}]} {
    ui_debug "Reading checksums from ${filespath}/${checksums.table}"
    source ${filespath}/${checksums.table}
}

proc kf5::set_checkums {} {
    global checksumtable
    global subport
    if {[info exists checksumtable]} {
        checksums   rmd160  [lindex $checksumtable(${subport}) 0] \
                    sha256  [lindex $checksumtable(${subport}) 1]
    }
}

set startup_root ""

## NB NB NB: port:kf5-gpgmepp has a copy of the qspXDG/nativeQSP logic!

# The Qt5 QStandardPaths (QSP) patch allows QSP to return XDG/linuxy locations (paths) that are more suitable
# for a shared use of Qt5 in the MacPorts universe than the default values QSP returns that follow Apple's
# sandboxing dogmas. It must however be activated so that individual ports have the choice which "flavour" they
# use. KF5 applications should (probably) by using the XDG/Linuxy flavour unless they are to be built into
# individual, autonomous app bundles that each contain all required dependencies.
# Activation of the QSP patch used to be done by linking an additional, dedicated Qt component: Qt5::QspXDG,
# which required the qspXDG variant.
# From 5.22.0 onwards, the patch is activated via a pair of dedicated preprocessor tokens which provoke the
# replacement of QStandardPaths by QExtStandardPaths. That "extended" class has mode arguments for all methods
# where this is relevant, with a default value that is determined by one of the two tokens; XDG mode in our case.
# It overloads the standard QSP methods with those extended methods. As a result, each application needs to be
# built with those tokens and it can no longer be seen by looking at the linked libraries what mode an
# application uses. But the result is also that an application like Qt's Designer which simply loads a KF5
# based plugin is no longer switched to a QSP mode it doesn't expect.
#
variant qspXDG conflicts nativeQSP description "be incompatible with Qt5's QStandardPaths lacking a XDG-compliant mode" {}

if {![variant_isset nativeQSP]} {
# KF5 autotests were conceived to run with XDG-compliant QSP locations, and wreak havock when they are not.
    test.run        yes
}

platform darwin {
    if {![file exists ${qt_includes_dir}/QtCore/qextstandardpaths.h]} {
        ui_debug "We appear to be building against a Qt5 port that doesn't have the QSP patch from port:qt5-kde. Don't fight it, just warn."
        notes-append "You will be running KF5 applications with the stock/native Qt5::QStandardPaths behaviour.\
                     That is not the recommended configuration for this port."
    }
}
if {(${os.platform} eq "darwin") && [variant_isset nativeQSP]} {
    # NOTE: Many kf5 ports violate MacPorts' ports file systems,
    #       but it is a must due to Qt5's QStandardPaths logic,
    #       so we'll quieten the warning this causes.
    destroot.violate_mtree  yes
}

proc set_mastersites_and_distname {} {
    global kf5.version fetch.type kf5.folder version kf5.framework
    if {${fetch.type} eq "git"} {
        uplevel git.url     git://anongit.kde.org/${kf5.framework}
        uplevel distname    ${kf5.framework}-5.git
    } else {
        if {[vercmp ${kf5.version} 5.35.0] <= 0} {
            set dbranch "Attic"
        } else {
            set dbranch "stable"
        }
        uplevel master_sites \
                            http://download.kde.org/${dbranch}/${kf5.folder}
        uplevel distname    ${kf5.framework}-${version}
    }
}

proc set_kf5_framework {val} {
    uplevel set kf5.framework ${val}
    uplevel set_mastersites_and_distname
}

patch.pre_args      -Np0

# currently we do not support python bindings generation. That feature requires:
# - setting GBD_SIP_COMMAND to the desired sip executable
# - setting libclang_LIBRARY to point to the libclang to be used (>= 5.0)
# - installing port:py??-clang with the corresponding clang variant, ONLY FOR THE DESIRED PYTHON VERSION
# - set SIP_Qt5Core_Mod_FILE to the full path to QtCoremod.sip
# - set KDE_INSTALL_USE_PYTHON2_SYS_PATHS and/or KDE_INSTALL_USE_PYTHON3_SYS_PATHS
# For instance:
#         -DGBP_SIP_COMMAND=${prefix}/bin/sip-3.7
#         -Dlibclang_LIBRARY=${prefix}/libexec/llvm-5.0/lib/libclang.dylib
#         -DSIP_Qt5Core_Mod_FILE=${frameworks_dir}/Python.framework/Versions/3.7/share/sip/PyQt5/QtCore/QtCoremod.sip
#         -DKDE_INSTALL_USE_PYTHON2_SYS_PATHS=ON
#         -DKDE_INSTALL_USE_PYTHON3_SYS_PATHS=ON
#         -DKDE_INSTALL_FULL_PYTHON2DIR=${frameworks_dir}/Python.framework/Versions/2.7/lib/python2.7/site-packages
#         -DKDE_INSTALL_FULL_PYTHON3DIR=${frameworks_dir}/Python.framework/Versions/3.7/lib/python3.7/site-packages
# And as of this writing (KF5 5.52.0) it fails on Mac with sip 4.19.12 and PyQt5 5.11.3 + Qt 5.9.7
configure.args-append \
                    -DCMAKE_DISABLE_FIND_PACKAGE_PythonModuleGeneration=ON \
                    -DBUILD_QCH=OFF

## documentation building could be handled as shown below but it wouldn't
## be trivial to determine from the generic +docs handler (KF5 PG) if this
## was done (successfully). It would also require moving the generated files
## from the Qt5 into the KF5 docs dir. For now we stick with our own recipe.
# if {[variant_isset docs]} {
#     configure.args-replace \
#                     -DBUILD_QCH=OFF \
#                     -DBUILD_QCH=ON
# }

post-destroot {
    if {[variant_exists examples] && [variant_isset examples] && [file exists ${build.dir}/examples]} {
        ui_debug "Installing examples"
        xinstall -m 755 -d ${destroot}${kf5.applications_dir}/examples
        foreach app [glob -nocomplain ${build.dir}/examples/*.app ${build.dir}/examples/*/*.app] {
            file copy ${app} ${destroot}${kf5.applications_dir}/examples/
        }
    }
}

# a procedure for checking if KDE4 is present and installed correctly. The main reason for clashes
# when building KF5 is when KDE4's headerfiles are installed directly into ${prefix}/include instead
# of in their own "sandbox". That's what this procedure verifies: it takes a header file name (or
# relative path) by which code will try to #include it, and checks if that file exists in
# ${prefix}/include. KF5 itself installs all its headers under ${prefix}/include/KF5, so the check
# will not trip over KF5 header files.
# This check is used in Tier1 and Tier2 ports (from where conflicts with port:kdelibs4 will trickle upwards)
# and in the few Tier3 ports which potentially conflict with other KDE4 ports.
#
# Installing KDE4 is simple and requires almost only rebuilding port:kdelibs4 with existing patches,
# but as long as this has not been done KF5 cannot co-install with active KDE4 ports.
proc check_kde4_header {header conflictport} {
    global prefix subport
    ui_debug "check_kde4_header (${prefix}/include/)${header} (port:)${conflictport}"
    if {[file exists ${prefix}/include/${header}]} {
        ui_msg "${subport}'s ${header} conflicts with its KDE4 counterpart; this is a configuration bug in ${conflictport}"
        conflicts-append \
                    ${conflictport}
    }
}

### === Tier 1 ===

subport kf5-attica {
    description     Open Collaboration Service client library
    long_description \
                    Attica is a Qt library that implements the Open Collaboration Services API version 1.6 .
    check_kde4_header attica/atticabasejob.h attica
    set_kf5_framework \
                    attica
    kf5::set_checkums
    conflicts-append \
                    attica-qt5
    # https://bugs.kde.org/show_bug.cgi?id=369554
    patchfiles-append \
                    attica/patch-camelcase-headers-location.diff
}

subport kf5-kapidox {
    description     KDE Doxygen Tools
    long_description \
                    This framework contains scripts and data for building API documentation (dox) in \
                    a standard format and style. \
                    The Doxygen tool is used to do the actual documentation extraction and \
                    formatting, but this framework provides a wrapper script to make generating the \
                    documentation more convenient (including reading settings from the target \
                    framework or other module) and a standard template for the generated \
                    documentation.
    conflicts-append \
                    kf5-kapidox-devel
    set_kf5_framework \
                    kapidox
    kf5::set_checkums
    installs_libs   no
    supported_archs noarch
    depends_build-append \
                    ${kf5::pythondep}
    depends_run-append \
                    ${kf5::pythondep} \
                    port:py${kf5::pybranch}-yaml \
                    port:py${kf5::pybranch}-jinja2
    platform darwin {
        # doxygen has a *lot* of dependencies all the way to Xorg, which are
        # complete overkill for a *runtime* dependency on Linux. Get it from
        # the host there.
        # doxyqml supports only Python 2.7
        depends_run-append \
                    port:doxygen \
                    port:py27-doxyqml \
                    port:py27-pygraphviz
    }
    patchfiles-append \
                    kapidox/patch-lucidagrande.diff
    # https://git.reviewboard.kde.org/r/129661/ (20161216)
    patchfiles-append \
                    kapidox/patch-enable-chm.diff
    configure.args-append \
                    -DPYTHON_EXECUTABLE=${prefix}/bin/python${kf5::pyversion}
    post-destroot {
        ifplatform darwin {
            xinstall -m 755 -d ${destroot}/${kf5::pylibdir}
            file rename ${destroot}${prefix}/lib/python${kf5::pyversion}/site-packages ${destroot}/${kf5::pylibdir}
        } else {
            foreach b [glob -nocomplain ${destroot}${prefix}/bin/*] {
                reinplace -q "s|/usr/bin/python|${prefix}/bin/python|g" ${b}
                reinplace -q "s|'/usr/share/doc/qt'|'${prefix}/libexec/qt5/doc'|g" ${b}
                reinplace -q "s|/usr/share|${prefix}/share|g" ${b}
            }
        }
    }
    test.cmd        echo
    test.target     no tests for this framework
    notes-append    "It is recommended to install the Roboto fonts for optimal displaying of documentation generated \
                    through kf5-kapidox and doxygen. See http://www.google.com/fonts/specimen/Roboto ."
}

subport kf5-kapidox-devel {
    replaced_by     kf5-kapidox
    PortGroup       obsolete 1.0
    description     KDE Doxygen Tools
    long_description \
                    The -devel version of port:kf5-kapidox.
    conflicts-append \
                    kf5-kapidox
    set_kf5_framework \
                    kapidox
    fetch.type      git
#     v5.28.0-3-gc6731cd
    git.branch      c6731cd241e07baccd5d54cad49989bc0b273af2
    version         5.28.0.3
    installs_libs   no
    supported_archs noarch
    depends_build-append \
                    ${kf5::pythondep}
    depends_run-append \
                    ${kf5::pythondep} \
                    port:py${kf5::pybranch}-yaml \
                    port:py${kf5::pybranch}-jinja2
    platform darwin {
        depends_run-append \
                    port:doxygen \
                    port:py27-doxyqml \
                    port:py27-pygraphviz
    }
    patchfiles-append \
                    kapidox/patch-kapidox-include-objc++.diff \
                    kapidox/patch-lucidagrande.diff \
                    kapidox/patch-enable-chm.diff
    configure.args-append \
                    -DPYTHON_EXECUTABLE=${prefix}/bin/python${kf5::pyversion}
    post-destroot {
        ifplatform darwin {
            xinstall -m 755 -d ${destroot}/${kf5::pylibdir}
            file rename ${destroot}${prefix}/lib/python${kf5::pyversion}/site-packages ${destroot}/${kf5::pylibdir}
        } else {
            foreach b [glob -nocomplain ${destroot}${prefix}/bin/*] {
                reinplace -q "s|/usr/bin/python|${prefix}/bin/python|g" ${b}
                reinplace -q "s|'/usr/share/doc/qt'|'${prefix}/libexec/qt5/doc'|g" ${b}
                reinplace -q "s|/usr/share|${prefix}/share|g" ${b}
            }
        }
    }
    test.cmd        echo
    test.target     no tests for this framework
    notes-append    "It is recommended to install the Noto fonts for optimal displaying of documentation generated \
                    through kf5-kapidox and doxygen. See https://fonts.google.com/download?family=Noto%20Sans"
}

subport kf5-kgenapidox {
    description     Legacy KDE Doxygen Tools
    long_description \
                    This port contains a legacy version of the KApiDox framework. \
                    It contains scripts and data for building API documentation (dox) in \
                    a standard format and style, and is much less restrive than current versions. \
                    Use this kf5-apidox's kapidox_generate script on KF5 Frameworks, and this \
                    port's kgenapidox script on any other KF5 project.
    set_kf5_framework \
                    kapidox
    version         5.22.0
    set kf5.version 5.22.0
    set kf5.branch  5.22
    kf5.set_paths
    checksums       rmd160  a0f5469000d73438e7c6b66cb49d108e0806d636 \
                    sha256  a1550820460f50e5a260e654d081e53c964b022b73ffe377cb6ced1cde184133
    installs_libs   no
    supported_archs noarch
    depends_build-append \
                    ${kf5::pythondep}
    depends_run-append \
                    ${kf5::pythondep} \
                    port:py${kf5::pybranch}-yaml \
                    port:py${kf5::pybranch}-jinja2
    platform darwin {
        depends_run-append \
                    port:doxygen \
                    port:py27-doxyqml \
                    port:py27-pygraphviz
    }
    patchfiles-append \
                    kapidox/patch-kapidox-include-objc++.diff \
                    kapidox/patch-kgenapidox.diff \
                    kapidox/patch-lucidagrande.diff \
                    kapidox/patch-enable-chm-legacy.diff
    configure.args-append \
                    -DPYTHON_EXECUTABLE=${prefix}/bin/python${kf5::pyversion}
    post-destroot {
        foreach bin [glob -nocomplain ${destroot}${prefix}/bin/depdiag*] {
            file delete -force ${bin}
        }
        file delete -force ${destroot}${prefix}/lib/python${kf5::pyversion}/site-packages/kapidox
        ifplatform darwin {
            xinstall -m 755 -d ${destroot}/${kf5::pylibdir}
            file rename ${destroot}${prefix}/lib/python${kf5::pyversion}/site-packages ${destroot}/${kf5::pylibdir}
        } else {
            foreach b [glob -nocomplain ${destroot}${prefix}/bin/*] {
                reinplace -q "s|/usr/bin/python|${prefix}/bin/python|g" ${b}
                reinplace -q "s|'/usr/share/doc/qt'|'${prefix}/libexec/qt5/doc'|g" ${b}
                reinplace -q "s|/usr/share|${prefix}/share|g" ${b}
            }
        }
    }
    test.cmd        echo
    test.target     no tests for this framework
}

subport kf5-karchive {
    description     Reading, creating, and manipulating file archives
    long_description \
                    KArchive provides classes for easy reading, creation and manipulation of \
                    "archive" formats like ZIP and TAR. \
                    It also provides transparent compression and decompression of data, like the \
                    GZip format, via a subclass of QIODevice.
    variant examples description {install any examples provided} {}
    check_kde4_header karchive.h kdelibs4
    set_kf5_framework \
                    karchive
    kf5::set_checkums
    depends_lib-append \
                    port:zlib \
                    port:xz \
                    port:bzip2
}

subport kf5-kcodecs {
    description     String encoding library
    long_description \
                    KCodecs provide a collection of methods to manipulate strings using various \
                    encodings. It can automatically determine the charset of a string, translate XML entities, \
                    validate email addresses, and find encodings by name in a more tolerant way than QTextCodec \
                    (useful e.g. for data coming from the Internet).
    check_kde4_header kcodecs.h kdelibs4
    depends_build-append \
                    port:gperf
    set_kf5_framework \
                    kcodecs
    kf5::set_checkums
}

subport kf5-kconfig {
    description     Persistent platform-independent application settings.
    long_description \
                    KConfig provides an advanced configuration system. It is made of two parts with the evocative names \
                    KConfigCore and KConfigGui.
    check_kde4_header kconfig.h kdelibs4
    set_kf5_framework \
                    kconfig
    kf5::set_checkums
    patchfiles-append \
                    kconfig/patch-kconfig-prefix-etc.diff \
                    kconfig/patch-kconfig-restore-wingeo.diff
    post-patch {
        reinplace "s|@PREFIX@|${prefix}|g" ${worksrcpath}/src/core/kconfig.cpp
    }
}

subport kf5-kcoreaddons {
    description     Qt addon library with a collection of non-GUI utilities
    long_description \
                    KCoreAddons provides classes built on top of QtCore to perform various tasks \
                    such as manipulating mime types, autosaving files, creating backup files, \
                    generating random sequences, performing text manipulations such as macro \
                    replacement, accessing user information and many more.
    check_kde4_header kaboutdata.h kdelibs4
    set_kf5_framework \
                    kcoreaddons
    kf5::set_checkums
    depends_lib-append \
                    port:shared-mime-info
    platform darwin {
        configure.args-append \
                    -DKDE4_DEFAULT_HOME=Library/Preferences/KDE
    }
}

subport kf5-kdbusaddons {
    description     Convenience classes for DBus
    long_description \
                    KDBusAddons provides convenience classes on top of QtDBus, as well as an API to \
                    create KDED modules.
    check_kde4_header kdbusconnectionpool.h kdelibs4
    set_kf5_framework \
                    kdbusaddons
    kf5::set_checkums
}

subport kf5-kdnssd {
    description     Network service discovery using Zeroconf
    long_description \
                    KDNSSD is a library for handling the DNS-based Service Discovery Protocol \
                    (DNS-SD), the layer of Zeroconf(TM) that allows network \
                    services, such as printers, to be discovered without any user intervention or \
                    centralised infrastructure.
    check_kde4_header dnssd/dnssd_export.h kdelibs4
    set_kf5_framework \
                    kdnssd
    kf5::set_checkums
    platform darwin {
        # Avahi is required but apparently only at runtime
        depends_run-append \
                    port:avahi
    }
    test.cmd        echo
    test.target     no tests for this framework
}

subport kf5-kguiaddons {
    description     Utilities for graphical user interfaces
    long_description \
                    The KDE GUI addons provide utilities for graphical user interfaces in the areas \
                    of colours, fonts, text, images, keyboard input.
    check_kde4_header kfontutils.h kdelibs4
    set_kf5_framework \
                    kguiaddons
    kf5::set_checkums
    patchfiles-append \
                    kguiaddons/patch-kguiaddons-khelpcentre5.diff
}

subport kf5-ki18n {
    description     KDE Gettext-based UI text internationalisation
    long_description \
        KI18n provides functionality for internationalising user interface text \
        in applications, based on the GNU Gettext translation system. \
        It wraps the standard Gettext functionality, so that the programmers \
        and translators can use the familiar Gettext tools and workflows. \
        KI18n provides additional functionality as well, for both programmers \
        and translators, which can help to achieve a higher overall quality \
        of source and translated text. This includes argument capturing, \
        customisable markup, and translation scripting.
    check_kde4_header klocalizedstring.h kdelibs4
    set_kf5_framework \
                    ki18n
    kf5::set_checkums
    kf5::has_translations
    kf5.depends_qt5_components \
                    qtdeclarative qtscript
}

subport kf5-kidletime {
    description     Reporting of idle time of user and system
    long_description \
                    KIdleTime is a singleton reporting information on idle time. It is useful not \
                    only for finding out about the current idle time of the host, but also for getting \
                    notified upon idle time events, such as custom timeouts, or user activity.
    variant examples description {install any examples provided} {}
    check_kde4_header kidletime.h kdelibs4
    set_kf5_framework \
                    kidletime
    kf5::set_checkums
    # RJVB's Mac/IOKit KIdleTime backend provides relatively high precision idle time detection
    # but the main reason for which it's not acceptable upstream is that there is no way around
    # using a polling implementation with IOKit (that I know of).
    patchfiles-append \
                    kidletime/patch-kidletime-use-iokit.diff \
                    kidletime/patch-kidletime-xsync-quiet.diff
    if {[variant_isset docs]} {
        patchfiles-append \
                    kidletime/patch-kidletime-documentation.diff
    }
    test.cmd        echo
    test.target     no tests for this framework
}

subport kf5-kimageformats {
    description     Plugins to allow QImage to support extra file formats.
    long_description \
                    This framework provides additional image format plugins for QtGui. \
                    As such it is not required for the compilation of any other software, \
                    but may be a runtime requirement for Qt-based software to support \
                    certain image formats.
    set_kf5_framework \
                    kimageformats
    # this has sneakily become a Tier2 framework (optionally)
    kf5.depends_frameworks \
                    karchive
    kf5::set_checkums
    platform darwin {
        depends_lib-append \
                    port:openexr
    }
}

subport kf5-kitemmodels {
    description     Set of item models extending the Qt model-view framework
    long_description \
                    Set of item models extending the Qt model-view framework
    check_kde4_header kbreadcrumbselectionmodel.h kdelibs4
    set_kf5_framework \
                    kitemmodels
    kf5::set_checkums
    kf5.add_test_library_path \
                    ${build.dir}/autotests/proxymodeltestsuite
    kf5.depends_qt5_components \
                    qtdeclarative
}

subport kf5-kitemviews {
    description     Set of item views extending the Qt model-view framework
    long_description \
                    KItemViews includes a set of views, which can be used with item models. It \
                    includes views for categorising lists and to add search filters to flat and \
                    hierarchical lists.
    check_kde4_header kcategorydrawer.h kdelibs4
    set_kf5_framework \
                    kitemviews
    kf5::set_checkums
}

subport kf5-kplotting {
    description     A lightweight plotting framework
    long_description \
                    KPlotWidget is a QWidget-derived class that provides a virtual base class \
                    for easy data-plotting. The idea behind KPlotWidget is that you only have \
                    to specify information in \"data units\"\; i.e., the natural units of the \
                    data being plotted.  KPlotWidget automatically converts everything \
                    to screen pixel units.
    variant examples description {install any examples provided} {}
    check_kde4_header kplotaxis.h kdelibs4
    set_kf5_framework \
                    kplotting
    kf5::set_checkums
}

subport kf5-ksyntaxhighlighting {
    description     A syntax highlighting engine for Kate syntax definitions
    long_description \
                    A stand-alone implementation of the Kate syntax highlighting engine. \
                    It's meant as a building block for text editors as well as for simple highlighted \
                    text rendering (e.g. as HTML), supporting both integration with a custom editor \
                    as well as a ready-to-use QSyntaxHighlighter sub-class. \
                    More than 250 syntax definition files are included, additional ones are \
                    picked up from the file system if present, so you can easily extend this \
                    through application-specific syntax definitions for example.
    set_kf5_framework \
                syntax-highlighting
    kf5::set_checkums
    depends_build-append \
                    path:bin/perl5:perl5
    kf5.depends_qt5_components \
                    qtxmlpatterns
    patchfiles-append \
                    ksyntaxhighlighting/patch-ksyntaxhilite-nongui.diff
    # don't embed the syntax definition files
    configure.args-append \
                    -DQRC_SYNTAX=OFF
    post-destroot {
        file rename ${destroot}${prefix}/share/org.kde.syntax-highlighting/syntax \
            ${destroot}${prefix}/share/org.kde.syntax-highlighting/syntax-disabled
        xinstall -m 775 -d ${destroot}${prefix}/share/org.kde.syntax-highlighting/syntax
        ifplatform darwin {
            file attributes ${destroot}${prefix}/share/org.kde.syntax-highlighting/syntax -group admin
        } else {
            file attributes ${destroot}${prefix}/share/org.kde.syntax-highlighting/syntax -group adm
        }
        xinstall -m 644 ${filespath}/ktexteditor/macports.xml ${destroot}${prefix}/share/org.kde.syntax-highlighting/syntax/
        # validate the selection we make by repeating some of the embedding preparations
        set fd [open "${build.dir}/syntax-data.qrc" "w"]
        puts ${fd} "<!DOCTYPE RCC>"
        puts ${fd} "<RCC version=\"1.0\">"
        puts ${fd} "<qresource prefix=\"/org.kde.syntax-highlighting/syntax\">"
        puts ${fd} "<file alias=\"index.katesyntax\">${build.dir}/index.katesyntax</file>"
        foreach def {alert rest \
                    ansys awk bash changelog cmake commonlisp context cpp css css-php \
                    c desktop diff dosbat doxyfile doxygen dtd email fortran fstab gcc gdb-bt gdbinit gdb gettext git-ignore \
                    git-rebase gnuplot grammar haskell html-php html idl ini isocpp javascript javascript-php java json kconfig \
                    latex ld less lex lua m4 makefile mandoc markdown mathematica matlab mediawiki meson modelines modula-2 \
                    nasm nsis objectivecpp objectivec octave pascal perl php postscript ppd python qdocconf qmake qml roff \
                    ruby rust scala scheme scss sed sgml sieve sql sql-mysql tcl tcsh texinfo template-toolkit vala vrml wml \
                    xml xorg xslt xul yacc zsh} {
            file rename ${destroot}${prefix}/share/org.kde.syntax-highlighting/syntax-disabled/${def}.xml \
                ${destroot}${prefix}/share/org.kde.syntax-highlighting/syntax
            set def ${destroot}${prefix}/share/org.kde.syntax-highlighting/syntax/${def}.xml
            puts ${fd} "<file alias=\"[file tail ${def}]\">${def}</file>"
        }
        puts ${fd} "</qresource>"
        puts ${fd} "</RCC>"
        close ${fd}
        # the highlight indexer should not raise errors; if it does then one of the enabled files is missing a dependency.
        # proceed by elimination to figure out which. For missing context 'foo' errors that do not provide a language (file)name,
        # check which enabled files contain 'context="foo"' but do not contain 'context name="foo"'. Those are the likely suspects.
        ui_msg "--->    Verifying syntax highlighting definition dependencies"
        system -W ${build.dir} "bin/katehighlightingindexer index.katesyntax ${worksrcpath}/data/schema/language.xsd syntax-data.qrc"
    }
    notes-append "
Only a limited selection of the available syntax definition files has been enabled.
More are available in ${prefix}/share/org.kde.syntax-highlighting/syntax-disabled .
They can be activated by copying the desired files (and their dependencies!) into
~/.local/share/org.kde.syntax-highlighting/syntax
or
~/Library/Application Support/org.kde.syntax-highlighting/syntax
The latest version is available from https://www.kate-editor.org/syntax/data/
"
}

subport kf5-kuserfeedback-devel {
    description     A KDE framework for collecting feedback from application users via telemetry and targeted surveys.
    long_description \
                    This is a framework for collecting feedback from application users via telemetry \
                    and targeted surveys. It provides an extensible set of data sources for telemetry \
                    and full control for the user on what data to contribute. It allows to distribute \
                    surveys and offer users to participate in them. Survey targeting can be based on \
                    telemetry data and users can configure how often they want to participate in surveys. \
                    This framework consists of the following components: libraries for use in applications\; \
                    QML bindings for the above\; a server application\; a management and analytics application.
    conflicts-append \
                    kf5-kuserfeedback-style
    set_kf5_framework \
                    kuserfeedback
    fetch.type      git
    git.branch      8a1460acf66001bc5e80e3b51936cb9701189c51
    version         5.38.0.17
    kf5.depends_qt5_components \
                    qtdeclarative qtsvg qtcharts
    patch.pre_args  -Np1
    patchfiles-append \
                    kuserfeedback/patch-kuserfb-macadapt.diff
    platform darwin {
        depends_run-append \
                    port:flex \
                    port:bison \
                    port:php
    }
    post-destroot {
        kf5.add_app_wrapper UserFeedbackConsole5 UserFeedbackConsole
    }
}

subport kf5-kwidgetsaddons {
    description     A large set of desktop widgets
    long_description \
                    This repository contains add-on widgets and classes for applications \
                    that use the Qt Widgets module. If you are porting applications from \
                    KDE Platform 4 "kdeui" library, you will find many of its classes here. \
                    Provided are action classes that can be added to toolbars or menus, \
                    a wide range of widgets for selecting characters, fonts, colours, \
                    actions, dates and times, or MIME types, as well as platform-aware \
                    dialogs for configuration pages, message boxes, and password requests. \
                    Further widgets and classes can be found in other KDE frameworks.
    check_kde4_header kactionmenu.h kdelibs4
    set_kf5_framework \
                    kwidgetsaddons
    kf5::set_checkums
    patchfiles-append \
                    kwidgetsaddons/patch-kwidgaddons-nonative-colourdialog.diff \
                    kwidgetsaddons/patch-kmessage-colours3.diff
}

subport kf5-kwindowsystem {
    description     Access to the windowing system
    long_description \
                    Convenience access to certain properties and features of the windowing system. \
                    KWindowSystem provides information about the windowing system and allows interaction with \
                    the windowing system. It provides a high level API which is windowing system independent and \
                    has platform specific implementations. This API is inspired by X11 and thus not all functionality \
                    is available on all windowing systems. On Mac OS X, X11 support is not included though that \
                    would be possible theoretically.
    check_kde4_header kwindowsystem.h kdelibs4
    conflicts-append \
                    kf5-kwindowsystem-devel
    set_kf5_framework \
                    kwindowsystem
    kf5::set_checkums
    post-extract {
        # maintainer convenience: support repetitive builds by ensuring all files to be patched are there
        if {![file exists ${worksrcpath}/src/platforms/osx/kwindowinfo.cpp]} {
            xinstall ${filespath}/kwindowsystem/kwindowinfo.cpp \
                 ${filespath}/kwindowsystem/kwindowinfo_mac_p.h \
                     ${worksrcpath}/src/platforms/osx/
        }
    }
    patchfiles-append \
                    kwindowsystem/patch-kwinsys-osx-plugin-complete.diff
    platform darwin {
        test.cmd    echo
        test.target no tests for this framework

        kf5.depends_qt5_components \
                    qtmacextras
#         # this one needs a separate API-rewriting effort
#         patchfiles-append \
#                     kwindowsystem/patch-kwinsys-osx-adapt.diff
        if {[tbool qt5.using_kde]} {
            variant x11 description {build the X11 plugin for use with Qt's XCB QPA} {
                configure.args-replace \
                    -DCMAKE_DISABLE_FIND_PACKAGE_X11=ON -DCMAKE_DISABLE_FIND_PACKAGE_X11=OFF
                configure.args-append \
                    -DAPPLE_FORCE_X11=ON
                configure.cppflags-append \
                    -I${qt_includes_dir}
                depends_lib-append \
                    path:${qt_frameworks_dir}/QtX11Extras.framework/QtX11Extras:qt5-kde-x11 \
                    port:xorg-libXfixes
                patchfiles-append \
                    kwindowsystem/patch-kwinsys-xcb-plugin.diff
                post-destroot {
                    # by default we indicate that we don't HAVE_X11, unless someone defines
                    # KWINDOWSYSTEM_HAVE_X11 before loading config-kwindowsystem.h
                    reinplace -q "s| 1| 0|g" ${destroot}${prefix}/include/KF5/KWindowSystem/config-kwindowsystem.h
                    reinplace -q "s| true| 1|g" ${destroot}${prefix}/include/KF5/KWindowSystem/config-kwindowsystem.h
                }
            }
        }
    }
}

subport kf5-kwindowsystem-devel {
    description     Access to the windowing system
    long_description \
                    Convenience access to certain properties and features of the windowing system. \
                    KWindowSystem provides information about the windowing system and allows interaction with \
                    the windowing system. It provides a high level API which is windowing system independent and \
                    has platform specific implementations. This API is inspired by X11 and thus not all functionality \
                    is available on all windowing systems. On Mac OS X, X11 support is not included though that \
                    would be possible theoretically.
    check_kde4_header kwindowsystem.h kdelibs4
    conflicts-append \
                    kf5-kwindowsystem
    set_kf5_framework \
                    kwindowsystem
    fetch.type      git
    # v4.100.0-rc1-294-ge016f53
    git.branch      e016f531174046b1818ddc7da4454dfe7e1007df
    version         5.52.0.4.100.0.294
    post-extract {
        # maintainer convenience: support repetitive builds by ensuring all files to be patched are there
        if {![file exists ${worksrcpath}/src/platforms/osx/kwindowinfo.cpp]} {
            xinstall ${filespath}/kwindowsystem/kwindowinfo.cpp \
                 ${filespath}/kwindowsystem/kwindowinfo_mac_p.h \
                     ${worksrcpath}/src/platforms/osx/
        }
    }
    # https://git.reviewboard.kde.org/r/126291/
    # https://phabricator.kde.org/D5069
    patchfiles-append \
                    kwindowsystem/patch-kwinsys-osx-plugin-complete.diff
    platform darwin {
        test.cmd    echo
        test.target no tests for this framework

        if {[tbool qt5.using_kde]} {
            variant x11 description {build the X11 plugin for use with Qt's XCB QPA} {
                configure.args-replace \
                    -DCMAKE_DISABLE_FIND_PACKAGE_X11=ON -DCMAKE_DISABLE_FIND_PACKAGE_X11=OFF
                configure.args-append \
                    -DAPPLE_FORCE_X11=ON
                configure.cppflags-append \
                    -I${qt_includes_dir}
                depends_lib-append \
                    path:${qt_frameworks_dir}/QtX11Extras.framework/QtX11Extras:qt5-kde-x11 \
                    port:xorg-libXfixes
                # don't bother presenting this one upstream...
                patchfiles-append \
                    kwindowsystem/patch-kwinsys-xcb-plugin.diff
                post-destroot {
                    # by default we indicate that we don't HAVE_X11, unless someone defines
                    # KWINDOWSYSTEM_HAVE_X11 before loading config-kwindowsystem.h
                    reinplace -q "s| 1| 0|g" ${destroot}${prefix}/include/KF5/KWindowSystem/config-kwindowsystem.h
                    reinplace -q "s| true| 1|g" ${destroot}${prefix}/include/KF5/KWindowSystem/config-kwindowsystem.h
                }
            }
        }
    }
    variant qt57 description {provide a workaround for shortcut issues in Qt 5.7} {
        patchfiles-append \
                    kwindowsystem/patch-shift-modifier.diff
    }
}

subport kf5-solid {
    description     Desktop hardware abstraction
    long_description \
                    Solid is a device integration framework.  It provides a way of querying and \
                    interacting with hardware independently of the underlying operating system.
    check_kde4_header solid/battery.h kdelibs4
    set_kf5_framework \
                    solid
    kf5::set_checkums
    ifplatform darwin {
        depends_build-append \
                    port:flex \
                    port:bison
        patch.pre_args -Np1
    } else {
        patchfiles-append \
                    solid/patch-solid-xdgdatadirs.diff
        post-patch {
            reinplace "s|@PREFIX@|${prefix}|g" ${worksrcpath}/cmake/FindMediaPlayerInfo.cmake
        }
    }
    configure.args-append \
                    -DWITH_NEW_SOLID_JOB=ON
}

subport kf5-sonnet {
    description     Multi-language spell checker
    long_description \
                    Sonnet is a plugin-based spell checking library for Qt-based \
                    applications. It supports several different plugins, including \
                    HSpell, Enchant, ASpell and HUNSPELL. \
                    It also supports automated language detection, based on a \
                    combination of different algorithms.
    variant examples description {install any examples provided} {}
    check_kde4_header sonnet/speller.h kdelibs4
    set_kf5_framework \
                    sonnet
    kf5::set_checkums
    patch.pre_args  -Np1
    patchfiles-append \
                    sonnet/patch-dont-impose-defaultclient.diff
    # this patch submitted upstream but not getting much traction
    # https://git.reviewboard.kde.org/r/127635/
    patchfiles-append \
                    sonnet/patch-sonnet-use-qsettings-iniformat.diff
    platform darwin {
        configure.args-append \
                    -DCMAKE_DISABLE_FIND_PACKAGE_ASPELL=ON \
                    -DCMAKE_DISABLE_FIND_PACKAGE_HUNSPELL=ON
        # backend variants. Don't attempt to deactivate non-selected backends for now.
        variant aspell description {build the aspell backend. Can interfere with the native NSSpellChecker backend} {
            depends_lib-append \
                    port:aspell
            configure.args-replace \
                    -DCMAKE_DISABLE_FIND_PACKAGE_ASPELL=ON \
                    -DCMAKE_DISABLE_FIND_PACKAGE_ASPELL=OFF
        }
        variant hunspell description {build the hunspell backend} {
            depends_lib-append \
                    port:hunspell
            configure.args-replace \
                    -DCMAKE_DISABLE_FIND_PACKAGE_HUNSPELL=ON \
                    -DCMAKE_DISABLE_FIND_PACKAGE_HUNSPELL=OFF
        }
        default_variants-append \
                    +hunspell
    }
}

subport kf5-threadweaver {
    description     Helper for multithreaded programming
    long_description \
                    ThreadWeaver is a helper for multithreaded programming.  It uses a job-based \
                    interface to queue tasks and execute them in an efficient way. \
                    You simply divide the workload into jobs, state the dependencies between the jobs \
                    and ThreadWeaver will work out the most efficient way of dividing the work between \
                    threads within a set of resource limits.
    variant examples description {install any examples provided} {}
    check_kde4_header threadweaver/threadweaver_export.h kdelibs4
    set_kf5_framework \
                    threadweaver
    kf5::set_checkums
    post-patch {
        reinplace "s|/usr/|${prefix}/|g" ${worksrcpath}/examples/ThumbNailer/Benchmark.cpp
    }
}

subport kf5-kwayland {
        description KWayland server & client
        long_description \
                    KWayland is a Qt-style API to interact with the \
                    wayland-client and wayland-server API.
        set_kf5_framework \
                    kwayland
        kf5::set_checkums
        platform darwin {
            long_description-append \
                    This port is provided as a stub to satisfy certain dependencies.
            notes-append "Wayland is currently not functional on Mac!"
            patchfiles-append \
                    kwayland/patch-kwayland-source.diff \
                    kwayland/patch-kwayland-cmake.diff
            configure.args-append \
                    -DBUILD_TESTING=OFF
            depends_lib-append \
                    port:wayland
        }
}

### === Tier 2 ===

subport kf5-kauth {
    description     Execute actions as privileged user
    long_description \
                    KAuth provides a convenient, system-integrated way to offload actions that need \
                    to be performed as a privileged user (root, for example) to small (hopefully \
                    secure) helper utilities.
    check_kde4_header kauth.h kdelibs4
    set_kf5_framework \
                    kauth
    kf5::set_checkums
    kf5.depends_frameworks \
                    kcoreaddons
    ifplatform darwin {
        notes-append "
            !!!
            Please consider the following to increase the chances that KAuth works optimally:
            sudo launchctl load -w ${prefix}/Library/LaunchDaemons/org.freedesktop.dbus-system.plist
        "
    } else {
        # on linux, PolkitQt5-1 or PolkitQt-1 is required
        depends_lib-append \
                    path:lib/pkgconfig/polkit-qt5-1.pc:polkit-qt5
        variant kde4auth description {Try this variant when installing for use with a KDE Plasma4 desktop} {
            post-patch {
                reinplace "s|\"org.kde.kf5auth\"|\"org.kde.auth\"|g" ${worksrcpath}/src/backends/dbus/DBusHelperProxy.cpp
            }
        }
    }
}

subport kf5-kcompletion {
    description     Powerful completion framework, including completion-enabled lineedit and combobox.
    long_description \
                    When typing filenames, email addresses and other text where the user often wants \
                    to select from existing data (including what they previously typed) rather than \
                    enter anything wholly original, users often find it helpful if they only need to \
                    type the first few characters, and then have the application offer them a set of \
                    choices or attempt to finish off what they were typing. Email clients, shells \
                    and \"open file\" dialogs often provide this functionality. \
                    This framework helps implement this in Qt-based applications. You can use one of \
                    the completion-ready widgets provided by this framework, or integrate it into \
                    your application's other widgets directly.
    check_kde4_header kcompletion.h kdelibs4
    set_kf5_framework \
                    kcompletion
    kf5::set_checkums
    kf5.depends_frameworks \
                    kconfig kwidgetsaddons
    patchfiles-append \
                    kcompletion/patch-completion-layering.diff
}

subport kf5-kcrash {
    description     Graceful handling of application crashes
    long_description \
                    KCrash provides support for intercepting and handling application crashes.
    check_kde4_header kcrash.h kdelibs4
    set_kf5_framework \
                    kcrash
    kf5::set_checkums
    kf5.depends_frameworks \
                    kcoreaddons kwindowsystem
    # https://phabricator.kde.org/D14606
    patchfiles-append \
                    kcrash/patch-drkonqi-warning.diff
}

subport kf5-kdoctools {
    PortGroup       perl5 1.0
    description     Create documentation from DocBook
    long_description \
                    Provides tools to generate documentation in various format from DocBook files.
    set_kf5_framework \
                    kdoctools
    kf5::set_checkums
    kf5.depends_build_frameworks \
                    ki18n
    # p5-uri is in fact only a configure dependency
    depends_build-append \
                    port:p${perl5.default_branch}-uri
    depends_lib-append \
                    port:libxslt \
                    port:docbook-xml \
                    port:docbook-xsl-nons
    kf5.depends_frameworks \
                    karchive
    # not really sure about this one:
    depends_run-append \
                    port:gettext
    configure.args-append \
                        -DDocBookXSL_DIR=${prefix}/share/xsl/docbook-xsl-nons \
                        -DLIBXML2_INCLUDE_DIR=${prefix}/include/libxml2 \
                        -DLIBXML2_LIBRARIES=${prefix}/lib/libxml2.${kf5::libs_ext} \
                        -DLIBXML2_XMLLINT_EXECUTABLE=${prefix}/bin/xmllint \
                        -DLIBXSLT_INCLUDE_DIR=${prefix}/include \
                        -DLIBXSLT_LIBRARIES=${prefix}/lib/libxslt.${kf5::libs_ext}
}

subport kf5-kfilemetadata {
    description     A file metadata and text extraction library
    long_description \
                    KFileMetaData provides a simple library for extracting the text and metadata \
                    from a number of different files. This library is typically used by file \
                    indexers to retreive the metadata.
    set_kf5_framework \
                    kfilemetadata
    kf5::set_checkums
    depends_lib-append \
                    port:exiv2 \
                    port:poppler-qt5
    kf5.depends_frameworks \
                    karchive ki18n
    platform darwin {
        depends_lib-append \
                    port:taglib \
                    path:lib/libavcodec.dylib:ffmpeg \
                    port:ebook-tools
    }
    kf5.kde4compat {
        # even in kde4compat mode we can be in conflict with port:kfilemetadata
        # if the KDE4 ports were installed without headerfile migration.
        check_kde4_header kfilemetadata/properties.h kfilemetadata
        # note: it might be useful to provide a complementary variant to port:kfilemetadata
        post-destroot {
            file delete -force ${destroot}${prefix}/share/locale
        }
    }
    post-destroot {
        # kfilemetadata "stock" has the weird idea to set the compatibility/so version to 3 ...
        ifplatform darwin {
            ln -s libKF5FileMetaData.3.dylib ${destroot}${prefix}/lib/libKF5FileMetaData.5.dylib
        } else {
            ln -s libKF5FileMetaData.so.3 ${destroot}${prefix}/lib/${build_arch}-linux-gnu/libKF5FileMetaData.so.5
        }
    }
    if {${os.platform} ne "darwin"} {
        if {[variant_isset LTO]} {
            configure.args-append \
                    -DBUILD_TESTING=OFF
        }
    }
}

subport kf5-kjobwidgets {
    description     Widgets for showing progress of asynchronous jobs
    long_description \
                    KJobWIdgets provides widgets for showing progress of asynchronous jobs.
    set_kf5_framework \
                    kjobwidgets
    kf5::set_checkums
    kf5.depends_frameworks \
                    kcoreaddons kwidgetsaddons
    test.cmd        echo
    test.target     no tests for this framework
}

subport kf5-knotifications {
    description     Desktop notifications
    long_description \
                    KNotification is used to notify the user of an event. It covers feedback and \
                    persistent events.
    check_kde4_header knotification.h kdelibs4
    set_kf5_framework \
                    knotifications
    kf5::set_checkums
    kf5.depends_frameworks \
                    kconfig kcodecs \
                    kcoreaddons kwindowsystem
    depends_lib-append \
                    port:phonon-qt5 \
                    port:dbusmenu-qt5
    platform darwin {
        kf5.depends_qt5_components \
                    qtmacextras
    }
    # awaiting brilliant ideas: https://git.reviewboard.kde.org/r/128043/
    # https://phabricator.kde.org/D5070
    patchfiles-append \
                knotifications/patch-new-knotifications-better-sound-warning+support-sysbeep.diff \
                knotifications/patch-knotifications-systray-behaviour.diff
    platform darwin {
        configure.args-append \
                DCMAKE_DISABLE_FIND_PACKAGE_Canberra=ON
    }
    test.cmd        echo
    test.target     no tests for this framework
}

subport kf5-kpackage {
    description     Installation and loading of additional content \(ex: scripts, images...\) as packages
    long_description \
                    The Package framework lets the user install and load packages of non binary content \
                    such as scripted extensions or graphic assets, as if they were traditional plugins.
    set_kf5_framework \
                    kpackage
    kf5::set_checkums
    kf5.depends_frameworks \
                    karchive kcoreaddons ki18n
    patchfiles-append \
                    patch-kpackage-doctools-accept-older-version.diff
}

subport kf5-kpty {
    description     Interfacing with pseudo terminal devices
    long_description \
                    This library provides primitives to interface with pseudo terminal devices \
                    as well as a KProcess derived class for running child processes and \
                    communicating with them using a pty.
    check_kde4_header kpty.h kdelibs4
    set_kf5_framework \
                    kpty
    kf5::set_checkums
    depends_build-append \
                    ${kf5::pythondep}
    kf5.depends_frameworks \
                    kcoreaddons ki18n
}

subport kf5-kunitconversion {
    description     Converting physical units
    long_description \
                    KUnitConversion provides functions to convert values in different physical \
                    units. It supports converting different prefixes (e.g. kilo, mega, giga) as \
                    well as converting between different unit systems (e.g. liters, gallons).
    check_kde4_header kunitconversion/unit.h kdelibs4
    set_kf5_framework \
                    kunitconversion
    kf5::set_checkums
    kf5.depends_frameworks \
                    ki18n
}

### === Tier 3 ===

subport kf5-baloo {
    description     File searching and indexing
    long_description \
                    Baloo provides file searching and indexing. It does so by maintaining an index \
                    of the contents of your files. It isn't functional on Mac OS X and present only \
                    to be able to satisfy dependencies.
    check_kde4_header baloo/file.h baloo
    set_kf5_framework \
                    baloo
    kf5::set_checkums
    kf5.depends_qt5_components \
                    qtdeclarative
    kf5.depends_frameworks \
                    kconfig kcoreaddons kcrash kdbusaddons \
                    kfilemetadata ki18n kidletime kio \
                    solid
    depends_lib-append \
                    port:lmdb
    platform darwin {
        post-destroot {
            # delete a file that isn't supposed to be used, and conflicts with KDE4's baloo:
            if {[file exists ${destroot}${prefix}/share/dbus-1/interfaces/org.kde.baloo.file.indexer.xml]} {
                file delete ${destroot}${prefix}/share/dbus-1/interfaces/org.kde.baloo.file.indexer.xml
            }
            foreach ld [glob -nocomplain ${destroot}${prefix}/share/locale/*/LC_MESSAGES] {
                foreach mo {baloo_file.mo baloo_file_extractor.mo baloosearch.mo balooshow.mo \
                        kio_baloosearch.mo kio_tags.mo kio_timeline.mo} {
                    if {[file exists ${ld}/${mo}]} {
                        file delete ${ld}/${mo}
                    }
                }
            }
            # rename a conflicting icon file (since baloo/Mac is supposed to be non-functional anyway)
            file rename ${destroot}${prefix}/share/icons/hicolor/128x128/apps/baloo.png \
                        ${destroot}${prefix}/share/icons/hicolor/128x128/apps/baloo5.png
        }
        test.cmd        echo
        test.target     no tests on OS X for this framework
    }
}

subport kf5-kactivities {
    description     Core components for the KDE Activity concept
    long_description \
                    ${description}. Support outside of \"Plasma\" sessions \
                    is limited to just that\; this port and framework only \
                    exist to satisfy linker dependencies.
    set_kf5_framework \
                    kactivities
    kf5::set_checkums
    depends_lib-append \
                    port:boost
    kf5.depends_qt5_components \
                    qtdeclarative
    kf5.depends_frameworks \
                    kconfig kcoreaddons kwindowsystem
    kf5.kde4compat {
        # note: it might be useful to provide a complementary variant to port:kactivities
        # really note: this is only required because of OS X's silly case-insensitive FS ...
        check_kde4_header kactivities/version.h kactivities
        post-destroot {
            # we'll presume that KDE ports use the CMake files, not pkgconfig
            file rename ${destroot}${kf5.pkgconfig_dir}/libKActivities.pc ${destroot}${kf5.pkgconfig_dir}/libKF5Activities.pc
        }
    } else {
        post-destroot {
            # make libKF5Activities.pc available in non-compat mode too so dependent ports don't
            # have to test which kf5-kactivities variant is installed.
            if {[file exists ${destroot}${kf5.pkgconfig_dir}/libKActivities.pc]} {
                ln -s libKActivities.pc ${destroot}${kf5.pkgconfig_dir}/libKF5Activities.pc
            }
        }
    }
    test.cmd        echo
    test.target     no tests on OS X for this framework
}

subport kf5-kactivities-stats {
    description     Library to access the usage statistics data collected by the KDE activity manager.
    long_description \
                    ${description}. Support outside of \"Plasma\" sessions \
                    is limited to just that\; this port and framework only \
                    exist to satisfy linker dependencies.
    set_kf5_framework \
                    kactivities-stats
    kf5::set_checkums
    depends_lib-append \
                    port:boost
    kf5.depends_qt5_components \
                    qtdeclarative
    kf5.depends_frameworks \
                    kconfig kactivities
    test.cmd        echo
    test.target     no tests on OS X for this framework
}

subport kf5-kbookmarks {
    description     Bookmarks management library
    long_description \
                    KBookmarks lets you access and manipulate bookmarks stored using the \
                    XBEL format (http://pyxml.sourceforge.net/topics/xbel)
    set_kf5_framework \
                    kbookmarks
    kf5::set_checkums
    kf5.depends_frameworks \
                    kcodecs kconfig kconfigwidgets kcoreaddons \
                    kiconthemes kwidgetsaddons kxmlgui
}

subport kf5-kcmutils {
    description     Utilities for KDE System Settings modules
    long_description \
                    KCMUtils provides various classes to work with KCModules. KCModules can be \
                    created with the KConfigWidgets framework.
    set_kf5_framework \
                    kcmutils
    kf5::set_checkums
    kf5.depends_qt5_components \
                    qtdeclarative
    kf5.depends_frameworks \
                    kconfigwidgets kcoreaddons kdeclarative ki18n \
                    kiconthemes kitemviews kservice kxmlgui kpackage
    patchfiles-append \
                    kcmutils/patch-kcmutils-khelpcentre5.diff
    test.cmd        echo
    test.target     no tests for this framework
}

subport kf5-kconfigwidgets {
    description     Widgets for configuration dialogs
    long_description \
                    KConfigWidgets provides easy-to-use classes to create configuration dialogs, as \
                    well as a set of widgets which uses KConfig to store their settings.
    set_kf5_framework \
                    kconfigwidgets
    kf5::set_checkums
    depends_build-append \
                    ${kf5::pythondep}
    kf5.depends_frameworks \
                    kauth kconfig kcodecs kcoreaddons \
                    kdoctools kguiaddons ki18n kwidgetsaddons
#    # http://commits.kde.org/kconfigwidgets/2337f564969aabe5549f2caca006a71dce274e6a
}

subport kf5-kdeclarative {
    description     Integration of QML and KDE work spaces
    long_description \
                    KDeclarative provides integration of QML and KDE work spaces. \
                    It's comprises two parts: a library used by the C++ part of your application \
                    to intergrate QML with KDE Frameworks specific features, and a series of \
                    QML imports that offer bindings to some of the KDE Frameworks.
    set_kf5_framework \
                    kdeclarative
    kf5::set_checkums
    kf5.depends_qt5_components \
                    qtdeclarative
    kf5.depends_frameworks \
                    kpackage kconfig kglobalaccel kguiaddons kio \
                    kiconthemes ki18n kwidgetsaddons kwindowsystem
    variant plotter description {provide the Plotter widget; adds a dependency on mesa} {}
    if {${os.platform} ne "darwin"} {
        # we probably already have Mesa and its dependencies installed
        default_variants +plotter
    }
    if {[variant_isset plotter]} {
        platform darwin {
            depends_lib-append \
                    port:libepoxy
        }
        configure.args-append \
                    -DCMAKE_DISABLE_FIND_PACKAGE_epoxy=OFF
    } else {
        configure.args-append \
                    -DCMAKE_DISABLE_FIND_PACKAGE_epoxy=ON
    }
    patchfiles-append \
                    kdeclarative/patch-kdeclarative-nongui.diff
}

subport kf5-kded {
    description     Central daemon of KDE work spaces
    long_description \
                    KDED is the KDE Daemon which runs in the background and performs \
                    a number of small tasks. \
                    Some of these tasks are built in, others are started on demand.
    set_kf5_framework \
                    kded
    kf5::set_checkums
    kf5.depends_frameworks \
                    kconfig kcoreaddons kcrash \
                    kdbusaddons kdoctools kinit kservice
    platform darwin {
        post-destroot {
            xinstall -d -m 755 ${destroot}${prefix}/Library/LaunchAgents
            xinstall -m 644 ${filespath}/kded/org.macports.kded5.plist \
                ${destroot}${prefix}/Library/LaunchAgents
            reinplace "s|%PREFIX%|${prefix}|g" \
                ${destroot}${prefix}/Library/LaunchAgents/org.macports.kded5.plist
            if { ${startupitem.install} != "no" } {
                xinstall -d -m 755 ${destroot}${startup_root}/Library/LaunchAgents
                ln -s ${prefix}/Library/LaunchAgents/org.macports.kded5.plist ${destroot}${startup_root}/Library/LaunchAgents
            }
        }
        notes-append    "You can opt to let the KDE daemon, kded5, be started automatically at login. \
        To do this, use the following command (once): \
        launchctl load -w ${startup_root}/Library/LaunchAgents/org.macports.kded5.plist
        Also remember to unload/reload this plist after upgrading ${subport}
         "
    }
    test.cmd        echo
    test.target     no tests for this framework
}

subport kf5-kdesignerplugin {
    description     Integrating KDE frameworks widgets with Qt Designer
    long_description \
                    This framework provides plugins for Qt Designer that allow it to display \
                    the widgets provided by various KDE frameworks, as well as a utility \
                    (kgendesignerplugin) that can be used to generate other such plugins \
                    from ini-style description files.
    set_kf5_framework \
                    kdesignerplugin
    kf5::set_checkums
    kf5.depends_qt5_components \
                    qtwebkit
    kf5.depends_frameworks \
                    kconfig kconfigwidgets kcompletion kcoreaddons \
                    kdoctools ki18n kiconthemes kio \
                    kitemviews kplotting ktextwidgets \
                    kwidgetsaddons kxmlgui sonnet
    configure.args-append \
                    -DCMAKE_DISABLE_FIND_PACKAGE_KF5WebKit=ON
    variant webkit {
        configure.args-replace \
                    -DCMAKE_DISABLE_FIND_PACKAGE_KF5WebKit=ON \
                    -DCMAKE_DISABLE_FIND_PACKAGE_KF5WebKit=OFF
        kf5.depends_frameworks-append \
                    kdewebkit
    }
#     test.cmd        echo
#     test.target     no tests for this framework
}

subport kf5-kdesu {
    description     User interface for running shell commands with root privileges
    long_description \
                    kf5-kdesu provides functionality for building GUI front ends for \
                    (password asking) console mode programs. For example, kdesu and \
                    kdessh use it to interface with su(do) and ssh respectively.
    set_kf5_framework \
                    kdesu
    kf5::set_checkums
    kf5.depends_frameworks \
                    kcoreaddons ki18n kpty kservice
    configure.args  -DKDESU_USE_SUDO_DEFAULT=On
}

subport kf5-kdewebkit {
    description     Integration of the HTML rendering engine WebKit
    long_description \
                    This library provides KDE integration of the QtWebKit library.
    set_kf5_framework \
                    kdewebkit
    kf5::set_checkums
    kf5.depends_qt5_components \
                    qtwebkit
    # KDEWebKit doesn't declare an explicit dependency on KI18n but lets cmake pull it in through
    # automatically. We add it here so we don't have to add explicit depends_build on gettext and python.
    kf5.depends_frameworks \
                    kconfig kcoreaddons ki18n kio \
                    kjobwidgets kparts kservice kwallet
    test.cmd        echo
    test.target     no tests for this framework
}

subport kf5-kemoticons {
    description     Convert text emoticons to graphical emoticons
    long_description \
                    KEmoticons converts emoticons from text to a graphical representation with \
                    images in HTML. It supports setting different themes for emoticons coming \
                    from different providers.
    set_kf5_framework \
                    kemoticons
    kf5::set_checkums
    kf5.depends_frameworks \
                    karchive kconfig kcoreaddons kservice
}

subport kf5-kglobalaccel {
    description     Global desktop keyboard shortcuts
    long_description \
                    KGlobalAccel allows you to have global accelerators that are independent of \
                    the focused window.  Unlike regular shortcuts, the application's window does not \
                    need focus for them to be activated. \
                    This framework is present only for dependency purposes: it is currently not operational on OS X.
    set_kf5_framework \
                    kglobalaccel
    kf5::set_checkums
    kf5.depends_frameworks \
                    kconfig kcoreaddons kcrash kdbusaddons \
                    ki18n kwindowsystem
    patchfiles-append \
                    kglobalaccel/patch-kglobalaccel-agent-and-nogui.diff
    # 5.52.0 only:
    patchfiles-append \
                    kglobalaccel/patch-5520-fix.diff
}

subport kf5-kiconthemes {
    description     Icon GUI utilities
    long_description \
                    This library contains classes to improve the handling of icons \
                    in applications using the KDE Frameworks.
    set_kf5_framework \
                    kiconthemes
    kf5::set_checkums
    depends_build-append \
                    ${kf5::pythondep}
    kf5.depends_qt5_components \
                    qtsvg
    kf5.depends_frameworks \
                    karchive kconfigwidgets kcoreaddons \
                    ki18n kitemviews kwidgetsaddons
    patchfiles-append \
                    kiconthemes/patch-debug-current-icontheme.diff
    # backport from 5.53:
    patchfiles-append \
                    kiconthemes/patch-ksvg2icns.diff
}

subport kf5-kinit {
    description     Helper library to speed up start of applications on KDE workspaces
    long_description \
                    kdeinit is a process launcher somewhat similar to the famous init used for \
                    booting UNIX. It launches processes by forking and then loading a dynamic \
                    library which should contain a 'kdemain(...)' function. Using kdeinit to \
                    launch KDE applications makes starting a typical KDE applications about 2.5 \
                    times faster. It also reduces memory consumption per application.
    set_kf5_framework \
                    kinit
    kf5::set_checkums
    kf5.depends_frameworks \
                    kconfig kcrash kdoctools ki18n \
                    kio kservice kwindowsystem
    post-patch {
        reinplace "s|/usr/local|${prefix}|g" ${worksrcpath}/src/klauncher/klauncher_main.cpp
    }
    # submit upstream
    patchfiles-append \
                    kinit/patch-kinit-klauncher-foreground.diff \
                    kinit/patch-skip-guarded-fd.diff
    platform darwin {
        post-destroot {
            xinstall -d -m 755 ${destroot}${prefix}/Library/LaunchAgents
            xinstall -m 644 ${filespath}/kinit/org.macports.kdeinit5.plist \
                ${destroot}${prefix}/Library/LaunchAgents
            reinplace "s|%PREFIX%|${prefix}|g" \
                ${destroot}${prefix}/Library/LaunchAgents/org.macports.kdeinit5.plist
            if { ${startupitem.install} != "no" } {
                xinstall -d -m 755 ${destroot}${startup_root}/Library/LaunchAgents
                ln -s ${prefix}/Library/LaunchAgents/org.macports.kdeinit5.plist ${destroot}${startup_root}/Library/LaunchAgents
            }
        }
        notes-append    "You can opt to let KDE quickstart utility, kdeinit5, be started automatically at login. \
        To do this, use the following command (once): \
        launchctl load -w ${startup_root}/Library/LaunchAgents/org.macports.kdeinit5.plist
        Also remember to unload/reload this plist after upgrading ${subport}
        "
        post-activate {
            # allow for signing kdeinit5 on OS X to avoid warnings in the system.log
            codesign ${prefix}/bin/kdeinit5 -
        }
    }
    test.cmd        echo
    test.target     no tests for this framework
}

subport kf5-kio {
    description     Network transparent access to files and data
    long_description \
                    This framework implements almost all the file management functions you \
                    will ever need. It supports accessing files locally as well as via HTTP \
                    and FTP out of the box and can be extended by plugins to support other \
                    protocols as well.
    set_kf5_framework \
                    kio
    kf5::set_checkums
    depends_lib-append \
                    port:libxslt \
                    port:libxml2 \
                    port:zlib \
                    port:acl \
                    port:attr
    platform darwin {
        depends_lib-append \
                    port:kerberos5
#         # this should probably be a regular patch ... and do we actually
#         # want to replace xdg-open?
#         post-patch {
#             reinplace "s|xdg-open|open|g" ${worksrcpath}/src/widgets/krun.cpp
#         }
#
#         # We may want to change the smb.conf location list in src/core/ksambashare.cpp
    }
    post-patch {
        # get the fallback smbd from MacPorts:
        reinplace "s|/usr/local/sbin/smbd|${prefix}/sbin/smbd|g" ${worksrcpath}/src/core/ksambashare.cpp
    }
    kf5.depends_qt5_components \
                    qtscript
    kf5.depends_frameworks \
                    karchive kbookmarks kcompletion kconfig kconfigwidgets \
                    kcoreaddons kcrash kdbusaddons kdoctools \
                    kguiaddons ki18n kiconthemes kitemviews \
                    kjobwidgets knotifications kservice ktextwidgets \
                    kwallet kwidgetsaddons kwindowsystem kxmlgui solid
    # https://phabricator.kde.org/D14800
    patchfiles-append \
                    kio/patch-kio-kioslavexec-silence-and-agent.diff
    patchfiles-append \
                    kio/patch-kio-preserve-window-icon.diff \
                    kio/patch-kio-khelpcentre5.diff
    # not a big success yet:
    patchfiles-append \
                    kio/patch-kio-kcookiejar-tofront.diff
    # make filedialog columns resizable again:
    # https://phabricator.kde.org/D18380
    patchfiles-append \
                    kio/patch-kio-filedialog-resize-columns.diff
    # prevent QtCurve in the Options menu of the KFileWidget
    # unless KIOFILEWIDGET_FORCE_QTCURVE is set in the env.
    # The option menu is rendered using the native Mac (or
    # else the Fusion) style instead.
#     patchfiles-append \
#                     kio/patch-kio-filewidget-no-qtcurve.diff
    post-activate {
        # allow for signing the kioslave on OS X to avoid warnings in the system.log
        codesign ${prefix}/libexec/kde5/kf5/kioslave -
        codesign ${prefix}/libexec/kde5/kf5/kiod5 -
    }
    post-destroot {
        if {[file exists ${destroot}${prefix}/man]} {
            file rename ${destroot}${prefix}/man ${destroot}${prefix}/share/man
        }
    }
}

subport kf5-kirigami {
    description     KDE's *future* lightweight user interface framework for mobile and convergent applications.
    long_description \
                    Kirigami is KDE's *future* lightweight user interface framework for mobile and convergent \
                    applications. \
                    This framework doesn't yet have a release version, please install ${subport}-devel instead.
    conflicts-append \
                    kf5-kirigami-devel
    set_kf5_framework \
                    kirigami
    version         0.0.0
    variant examples description {install any examples provided} {}
    pre-fetch {
        ui_error "This framework doesn't yet have a release version, please install ${subport}-devel instead"
        return -code error "Please use ${subport}-devel for now"
    }
}

subport kf5-kirigami-devel {
    replaced_by     kf5-kirigami
    PortGroup       obsolete 1.0
    description     KDE's lightweight user interface framework for mobile and convergent applications.
    long_description \
                    Kirigami is KDE's lightweight user interface framework for mobile and convergent \
                    applications. It allows Qt developers to create applications easily that run on \
                    most major mobile and desktop platforms without modification (though adapted user \
                    interfaces for different form-factors are supported and recommended for optimal \
                    user experience). It extends the touch-friendly Qt Quick Controls with larger \
                    application building blocks, following the design philosophy laid out in the \
                    Kirigami Human Interface Guidelines.
    conflicts-append \
                    kf5-kirigami
    set_kf5_framework \
                    kirigami
    fetch.type      git
    # v1.1.0-21-ga2f43a8
    # pick a commit on the Kirigami/1.1 branch!!
    git.branch      a2f43a82b36404f252db3c46556c448b42f50dc4
    version         5.31.0.1.1.0.21
#     variant examples description {install any examples provided} {
#         patchfiles-append \
#                     kirigami/patch-kirig-add-app-icon.diff
#         configure.args-append \
#                     -DBUILD_EXAMPLES=ON
#     }
#     depends_build-append \
#                     port:git
#     kf5.depends_qt5_components \
#                     qtdeclarative qtsvg
#     # this is a Tier1 framework with an optional dependency on a Tier3 framework. Since
#     # we make that a non-optional dependency we include Kirigami in the Tier3 frameworks.
#     kf5.depends_frameworks \
#                     plasma-framework
#     post-destroot {
#         if {[variant_isset examples]} {
#             ifplatform darwin {
#                 file delete -force ${destroot}${kf5.applications_dir}/kirigamigallery.app
#             } else {
#                 xinstall -m 755 -d ${destroot}${kf5.applications_dir}/examples
#                 file rename ${destroot}${kf5.applications_dir}/kirigamigallery ${destroot}${kf5.applications_dir}/examples/
#             }
#         }
#     }
}

subport kf5-kirigami2 {
    description     KDE's lightweight user interface framework for mobile and convergent applications.
    long_description \
                    Kirigami is KDE's lightweight user interface framework for mobile and convergent \
                    applications. It allows Qt developers to create applications easily that run on \
                    most major mobile and desktop platforms without modification (though adapted user \
                    interfaces for different form-factors are supported and recommended for optimal \
                    user experience). It extends the touch-friendly Qt Quick Controls with larger \
                    application building blocks, following the design philosophy laid out in the \
                    Kirigami Human Interface Guidelines.
    set_kf5_framework \
                    kirigami2
    kf5::set_checkums
    conflicts-append \
                    kf5-kirigami2-devel
    variant examples description {install any examples provided} {
        depends_build-append \
                    port:git
        configure.args-append \
                    -DBUILD_EXAMPLES=ON
    }
    pre-fetch {
        if {[vercmp [qt5.active_version] 5.7.0] < 0} {
            ui_error "This framework needs Qt >= 5.7.0 (not [qt5.active_version])"
            return -code error "Needs a more recent Qt version"
        }
    }
    kf5.depends_qt5_components \
                    qtdeclarative qtsvg
    # this is a Tier1 framework with an optional dependency on a Tier3 framework. Since
    # we make that a non-optional dependency we include Kirigami in the Tier3 frameworks.
    kf5.depends_build_frameworks \
                    breeze-icons
    configure.args-append \
                    -DBREEZEICONS_DIR=${prefix}/share/icons/breeze
    post-destroot {
        if {[variant_isset examples]} {
            xinstall -m 755 -d ${destroot}${kf5.applications_dir}/examples
            ifplatform darwin {
                xinstall -d -m 755 ${destroot}${prefix}/bin/examples
                file rename ${destroot}${kf5.applications_dir}/applicationitemapp.app ${destroot}${kf5.applications_dir}/examples
            } else {
                file rename ${destroot}${kf5.applications_dir}/applicationitemapp ${destroot}${kf5.applications_dir}/examples/
            }
            kf5.add_app_wrapper examples/kirigami2gallery5 examples/kirigami2gallery
            kf5.add_app_wrapper examples/applicationitemapp5 examples/applicationitemapp
        }
    }
}

subport kf5-kirigami2-devel {
    description     KDE's lightweight user interface framework for mobile and convergent applications.
    long_description ${description}
    replaced_by     kf5-kirigami2
    PortGroup       obsolete 1.0
    conflicts-append \
                    kf5-kirigami2
}

subport kf5-knewstuff {
    description     Framework for downloading and sharing additional application data
    long_description \
                    The KNewStuff library implements collaborative data sharing for \
                    applications. It uses kf5-attica to support the Open Collaboration Services \
                    specification.
    set_kf5_framework \
                    knewstuff
    kf5::set_checkums
    kf5.depends_qt5_components \
                    qtdeclarative
    kf5.depends_frameworks \
                    attica karchive kcompletion kconfig \
                    kcoreaddons ki18n kiconthemes kio \
                    kitemviews kservice ktextwidgets \
                    kwidgetsaddons kxmlgui
}

subport kf5-knotifyconfig {
    description     Configuration dialog for desktop notifications
    long_description \
                    KNotifyConfig provides a configuration dialog for desktop notifications which \
                    can be embedded in your application.
    check_kde4_header knotifyconfigwidget.h kde4-runtime
    set_kf5_framework \
                    knotifyconfig
    kf5::set_checkums
    depends_lib-append \
                    port:phonon-qt5
    kf5.depends_frameworks \
                    kcompletion kconfig kconfigwidgets ki18n kio \
                    knotifications kwidgetsaddons kxmlgui
    test.cmd        echo
    test.target     no tests for this framework
}

subport kf5-kparts {
    description     Plugin framework for user interface components
    long_description \
                    KParts implements the framework for KDE parts, which are \
                    elaborate widgets with a user-interface defined in terms of actions \
                    (menu items, toolbar icons).
    set_kf5_framework \
                    kparts
    kf5::set_checkums
    # KParts depends on ki18n despite not declaring it explicitly
    kf5.depends_frameworks \
                    kconfig kcoreaddons ki18n kiconthemes \
                    kio kjobwidgets kservice ktextwidgets \
                    kwidgetsaddons kxmlgui
    if {${os.platform} ne "darwin"} {
        # work around a compiler error
        configure.args-append \
                    -DBUILD_TESTING:BOOL=OFF
        test.cmd        echo
        test.target     no tests for this framework
    }
}

subport kf5-kpeople {
    description     kpeople
    long_description \
                    kpeople
    variant examples description {install any examples provided} {}
    set_kf5_framework \
                    kpeople
    kf5::set_checkums
    kf5.depends_qt5_components \
                    qtdeclarative
    kf5.depends_frameworks \
                    kcoreaddons ki18n kitemviews \
                    kservice kwidgetsaddons
}

# the plasma framework can depend on akonadi and kdepimlibs!
# on OS X versions lacking OpenGL ES it can also use the emulator from
# http://malideveloper.arm.com/downloads/OpenGL_ES_Emulator_1.3.2.0699222_MacOSX.tgz
subport kf5-plasma-framework {
    description     Foundational libraries, components, and tools of the Plasma workspaces
    long_description \
                    ${description}. The plasma framework provides \
                    QML components\; \
                    A C++ library: libplasma \
                    and Script engines.
    variant examples description {install any examples provided} {
        configure.args-append \
                    -DBUILD_EXAMPLES=ON
    }
    set_kf5_framework \
                    plasma-framework
    kf5::set_checkums
    depends_run-append \
                    path:bin/perl5:perl5
    kf5.depends_qt5_components \
                    qtsvg qtdeclarative
    kf5.depends_frameworks \
                    kactivities karchive kconfig kconfigwidgets \
                    kcoreaddons kdbusaddons kdeclarative kdoctools \
                    kglobalaccel kguiaddons ki18n kiconthemes kio \
                    kirigami2 kservice  kwindowsystem kxmlgui \
                    knotifications kpackage kparts kwidgetsaddons
    if {${os.platform} ne "darwin"} {
        kf5.depends_frameworks \
                    kwayland
    }
    post-patch {
        reinplace "s|/usr/share/inkscape|${prefix}/share/inkscape|g" "${worksrcpath}/src/tools/inkscape extensions/plasmarename.py"
        reinplace "s|/usr/bin/perl|${prefix}/bin/perl5|g" ${worksrcpath}/src/tools/currentColorFillFix.sh
    }
}

subport kf5-kservice {
    description     Plugin framework for desktop services
    long_description \
                    KService provides a plugin framework for handling desktop services. Services can \
                    be applications or libraries. They can be bound to MIME types or handled by \
                    application specific code.
    set_kf5_framework \
                    kservice
    kf5::set_checkums
    ifplatform darwin {
        depends_build-append \
                    port:bison \
                    port:flex
    }
    kf5.depends_frameworks \
                    kconfig kcoreaddons kcrash kdbusaddons kdoctools ki18n
    patchfiles-append \
                    kservice/patch-kservice-xdg-menu-prefix.diff \
                    kservice/patch-kservice-fix-invokeBrowser.diff
    # added for Qt 5.7.1:
    patchfiles-append \
                    kservice/patch-skip-applications.diff \
                    kservice/patch-no-delete-applications.diff
    post-patch {
        reinplace "s|@APPMENUPREFIX@|kf5-|g" ${worksrcpath}/src/sycoca/vfolder_menu.cpp
    }
    configure.args-append \
                    -DAPPLICATIONS_MENU_NAME=kf5-applications.menu
    platform darwin {
        post-destroot {
            xinstall -d -m 755 ${destroot}${prefix}/Library/LaunchAgents
            xinstall -m 644 ${filespath}/kservice/org.macports.kdecache5.plist \
                ${destroot}${prefix}/Library/LaunchAgents
            reinplace "s|%PREFIX%|${prefix}|g" \
                ${destroot}${prefix}/Library/LaunchAgents/org.macports.kdecache5.plist
            reinplace "s|%APPLICATIONS_DIR%|${applications_dir}|g" \
                ${destroot}${prefix}/Library/LaunchAgents/org.macports.kdecache5.plist
            if { ${startupitem.install} != "no" } {
                xinstall -d -m 755 ${destroot}${startup_root}/Library/LaunchAgents
                ln -s ${prefix}/Library/LaunchAgents/org.macports.kdecache5.plist ${destroot}${startup_root}/Library/LaunchAgents
            }
        }
        notes-append    "An agent can be started to maintain KDE's desktop file system configuration cache, \
        so you don't have to run 'kbuildsycoca5' manually. \
        To start it run the following command: \
        launchctl load -w ${startup_root}/Library/LaunchAgents/org.macports.kdecache5.plist
        Also remember to unload/reload this plist after upgrading ${subport}
        "
    }
    # the autotests from this port  cleaned out a number of directories under /Applications for me.
    # Shouldn't happen anymore with Qt's QSP switched to XDG mode (+qspXDG variant), but since that's
    # not a compulsory mode we disallow running the tests.
    test.run        no
}

subport kf5-ktexteditor {
    description     Full text editor component
    long_description \
                    KTextEditor provides a powerful text editor component that you can embed in your \
                    application, either as a KPart or using the KF5::TextEditor library (if you need \
                    more control). \
                    The text editor component contains many useful features, from syntax \
                    highlighting and automatic indentation to advanced scripting support, making it \
                    suitable for everything from a simple embedded text-file editor to an advanced \
                    IDE.
    set_kf5_framework \
                    ktexteditor
    kf5::set_checkums
    depends_build-append \
                    path:bin/perl5:perl5
    depends_lib-append \
                    port:libgit2 \
                    port:editorconfig-core-c
    kf5.depends_qt5_components \
                    qtxmlpatterns

    kf5.depends_qt5_components \
                    qtdeclarative

    kf5.depends_frameworks \
                    karchive kconfig kguiaddons \
                    ki18n kiconthemes kio kparts \
                    ksyntaxhighlighting sonnet
    platform darwin {
        variant full description {activate features (menus) that are not  supported fully on OS X, currently} {}
        # this patch should be submitted upstream; cf. the corresponding sonnet patch
        # https://git.reviewboard.kde.org/r/129511/
        patchfiles-append \
                    ktexteditor/patch-ktexteditor-use-qsettings-iniformat.diff
        if {![variant_isset full]} {
            patchfiles-append \
                    ktexteditor/patch-ktexteditor-menus-mac.diff
        }
        patchfiles-append \
                    ktexteditor/patch-ktexteditor-mac-shortcuts.diff
    }
    # fix a confusing alert message
    patchfiles-append \
                    ktexteditor/patch-ktexteditor-mod-message.diff
    patchfiles-append \
                    ktexteditor/patch-priority-spinbox.diff \
                    ktexteditor/patch-ctxmenu-fix.diff \
                    ktexteditor/patch-wrapmsg-location.diff
}

subport kf5-ktextwidgets {
    description     Text editing widgets
    long_description \
                    KTextWidgets provides widgets for displaying and editing text. It supports \
                    rich text as well as plain text.
    set_kf5_framework \
                    ktextwidgets
    kf5::set_checkums
    kf5.depends_frameworks \
                    kcompletion kconfig kconfigwidgets ki18n \
                    kiconthemes kservice sonnet kwidgetsaddons \
                    kwindowsystem
    patchfiles-append \
                    ktextwidgets/patch-ktextwidg-use-qsettings-iniformat.diff
}

subport kf5-kwallet {
    description     Safe desktop-wide storage for passwords
    long_description \
                    This framework contains two main components: \
                    1: Interface to KWallet, the safe desktop-wide storage for passwords on KDE work \
                    spaces. \
                    2: The kwalletd used to safely store the passwords on KDE work spaces (when not using the OS X Keychain)
# not functional yet!
#     if {${os.platform} eq "darwin"} {
#         variant osxkeychain description {kwallet uses the OSX KeyChain} {
#             configure.args-append \
#                     -DMAC_USE_OSXKEYCHAIN:BOOL=ON
#         }
#     }
    set_kf5_framework \
                    kwallet
    kf5::set_checkums
    depends_lib-append \
                    port:qgpgme
    kf5.depends_frameworks \
                    kconfig kconfigwidgets kcoreaddons kdbusaddons ki18n \
                    kiconthemes knotifications kservice kwidgetsaddons \
                    kwindowsystem
    platform darwin {
        depends_lib-append \
                port:gpgme \
                port:libgcrypt
        depends_run-append \
                port:gnupg2
        if {${os.major} >= 12} {
            depends_run-append \
                port:pinentry-mac
            notes-append "port:pinentry-mac has been installed so that kwalletd5 can request GPG passphrases. \
            You may need to verify your ~/.gnupg/gpg-agent.conf settings."
        } else {
            notes-append "If you do not already have a pinentry application, you will need to install one so that \
            kwalletd5 can request GPG passphrases. Use either a suitable variant from port:pinentry, or install \
            the MacGPG2 tools (https://gpgtools.org/)."
        }
    }
    patchfiles-append \
                    kwallet/patch-kwallet-nongui-runtimes.diff \
                    kwallet/patch-kwallet-kwalletd-is-agent.diff \
                    kwallet/patch-kwallet-cmake-keychain-or-kwalletd.diff
    if {![variant_exists osxkeychain] || ![variant_isset osxkeychain]} {
        patchfiles-append \
                    kwallet/patch-kwallet-kwalletd-makeforeground.diff
        post-destroot {
            platform darwin {
                xinstall -d -m 755 ${destroot}${prefix}/Library/LaunchAgents
                xinstall -m 644 ${filespath}/kwallet/org.macports.kwalletd5.plist \
                    ${destroot}${prefix}/Library/LaunchAgents
                reinplace "s|%PREFIX%|${prefix}|g" \
                    ${destroot}${prefix}/Library/LaunchAgents/org.macports.kwalletd5.plist
                if { ${startupitem.install} != "no" } {
                    xinstall -d -m 755 ${destroot}${startup_root}/Library/LaunchAgents
                    ln -s ${prefix}/Library/LaunchAgents/org.macports.kwalletd5.plist ${destroot}${startup_root}/Library/LaunchAgents
                }
            }
            if {[file exists ${destroot}${kf5.applications_dir}/kwalletd5.app]} {
                xinstall -m 755 -d ${destroot}${kf5.libexec_dir}/kf5
                file rename ${destroot}${kf5.applications_dir}/kwalletd5.app ${destroot}${kf5.libexec_dir}/kf5/kwalletd5.app
                xinstall -m 755 ${filespath}/kwallet/kwalletd5.sh ${destroot}${prefix}/bin/kwalletd5
                reinplace "s|@LIBEXECDIR@|${kf5.libexec_dir}/kf5|g" ${destroot}${prefix}/bin/kwalletd5
            }
        }
        platform darwin {
            notes-append    "The KDE Wallet daemon, kwalletd5, has to be started, and not on-demand by KDE itself. \
            This works best when done manually from a terminal (or a .cshrc/.profile/.bashrc script). \
            To do it automatically at login, use the following command (once): \
            launchctl load -w ${startup_root}/Library/LaunchAgents/org.macports.kwalletd5.plist
            Also remember to unload/reload this plist after upgrading ${subport}
            "
        }
     }
}

subport kf5-kxmlgui {
    description     Framework for managing menu and toolbar actions
    long_description \
                    KXMLGUI provides a framework for managing menu and toolbar actions in an \
                    abstract way. The actions are configured through a XML description and hooks \
                    in the application code. The framework supports merging of multiple \
                    description for example for integrating actions from plugins.
    set_kf5_framework \
                    kxmlgui
    kf5::set_checkums
    kf5.depends_frameworks \
                    attica kconfig kconfigwidgets kcoreaddons kglobalaccel \
                    ki18n kiconthemes kitemviews ktextwidgets \
                    kwidgetsaddons kwindowsystem
    patchfiles-append \
                    kxmlgui/patch-delete-without-remove-debug.diff
}

subport kf5-kxmlrpcclient {
    description     XML-RPC client
    long_description \
                    This library contains simple XML-RPC Client support. It is a complete \
                    client and is quite easy to use.
    check_kde4_header kxmlrpcclient/client.h "kdepimlibs4 kdepimlibs4-devel"
    set_kf5_framework \
                    kxmlrpcclient
    kf5::set_checkums
    kf5.depends_frameworks \
                    ki18n kio
}

subport kf5-krunner {
    description     Framework for Plasma runners
    long_description \
                    The Plasma workspace provides an application called KRunner which, among other \
                    things, allows one to type into a text area which causes various actions and \
                    information that match the text to happen and appear as the text is being typed.
    conflicts       kf5-krunner-devel
    set_kf5_framework \
                    krunner
    kf5::set_checkums
    kf5.depends_qt5_components \
                    qtdeclarative
    kf5.depends_frameworks \
                    kconfig kcoreaddons ki18n kio \
                    plasma-framework kservice solid \
                    threadweaver
}

subport kf5-purpose {
    description     Provides an abstraction to provide and leverage actions of a specific kind.
    long_description \
                    Purpose offers the possibility to create integrate services and actions on \
                    any application without having to implement them specifically. Purpose will \
                    offer them mechanisms to list the different alternatives to execute given the \
                    requested action type and will facilitate components so that all the plugins \
                    can receive all the information they need.
    conflicts       kf5-purpose-devel
    set_kf5_framework \
                    purpose
    kf5::set_checkums
    kf5.depends_qt5_components \
                    qtdeclarative
    kf5.depends_frameworks \
                    kconfig kcoreaddons kdeclarative ki18n kio
    depends_run-append \
                    port:arcanist
    if {[vercmp ${version} 5.47.0] < 0} {
        # rather, preceded_by ...
        replaced_by kf5-purpose-devel
        PortGroup   obsolete 1.0
    } else {
        patchfiles-append \
                    purpose/patch-plugins-CMakeLists.diff \
                    purpose/patch-qmlplugindump-location.diff \
                    purpose/patch-cast-to-double.diff \
                    purpose/patch-avoid-calling-pure-virtual.diff \
                    purpose/patch-no-diffrev-sort.diff
        post-patch {
            reinplace "s|@QTBINDIR@|${qt_bins_dir}|g" ${worksrcpath}/src/plugins/cmake/FindQMLModule.cmake.in
        }
        #Using c++0x for Lion and higher in case of clang 64-bit
        if {${configure.compiler} eq "clang" && ${os.platform} eq "darwin" \
            && ${os.major} >= 11 && ${build_arch} eq "x86_64"} {
                configure.args-append \
                    -DHAVE_UNORDERED_MAP=1
        }
    }
}

subport kf5-qqc2-desktop-style {
    description     A KDE QtQuickControls2 style that integrates with the desktop.
    long_description \
                    This port provides a style for QtQuickControls2 that uses QStyle \
                    to paint the controls in order to give it a native look and feel \
                    as selected via the style KCM. Set QT_QUICK_CONTROLS_STYLE=org.kde.desktop \
                    in the environment to activate this feature.
    conflicts-append \
                    kf5-qqc2-desktop-style-devel
    set_kf5_framework \
                    qqc2-desktop-style
    kf5::set_checkums
    kf5.depends_qt5_components \
                    qtdeclarative
    kf5.depends_frameworks \
                    kirigami2
    patchfiles-append \
                    qqc2style/patch-safe-with-qguiapp-new.diff
}

subport kf5-qqc2-desktop-style-devel {
    description     A KDE QtQuickControls2 style that integrates with the desktop.
    long_description \
                    This port provides a style for QtQuickControls2 that uses QStyle \
                    to paint the controls in order to give it a native look and feel \
                    as selected via the style KCM. Set QT_QUICK_CONTROLS_STYLE=org.kde.desktop \
                    in the environment to activate this feature.
    conflicts-append \
                    kf5-qqc2-desktop-style
    replaced_by     kf5-qqc2-desktop-style
    PortGroup       obsolete 1.0
}

### === Tier 4 ===

subport kf5-frameworkintegration {
    description     Integration of Qt application with KDE workspaces
    long_description \
                    Framework Integration is a set of plugins responsible for better integration of \
                    Qt applications, among others by improving theming capabilities
    conflicts-append \
                    kf5-frameworkintegration-devel
    # The KDE platform theme plugin was split off into a separate project in 5.22.0
    # For continuity, we make the corresponding port a runtime dependency.
    ifplatform darwin {
        depends_run-append \
                port:kf5-osx-integration-devel
        post-destroot {
            file delete ${destroot}${prefix}/share/knotifications5/plasma_workspace.notifyrc
        }
    } else {
        depends_run-append \
                path:${qt_plugins_dir}/platformthemes/KDEPlasmaPlatformTheme.so:kf5-plasma-integration
    }
    set_kf5_framework \
                    frameworkintegration
    kf5::set_checkums
    kf5.depends_frameworks \
                    kconfig kconfigwidgets ki18n kiconthemes \
                    knewstuff knotifications kpackage kwidgetsaddons
    kf5.depends_run_frameworks \
                    qqc2desktopstyle
    test.env-append \
                    KDE_SESSION_VERSION=5
    post-patch {
        # these seem to change the required version a bit too often, so use a reinplace instead of a patchfile
        reinplace -W ${worksrcpath} "s|^find_package(packagekitqt5|# find_package(packagekitqt5|g" CMakeLists.txt
        reinplace -W ${worksrcpath} "s|^find_package(AppStreamQt|# find_package(AppStreamQt|g" CMakeLists.txt
    }
}

subport kf5-frameworkintegration-devel {
    replaced_by     kf5-frameworkintegration
    PortGroup       obsolete 1.0
    description     Integration of Qt application with KDE workspaces
    long_description \
                    Framework Integration is a set of plugins responsible for better integration of \
                    Qt applications, among others by improving theming capabilities
    conflicts-append \
                    kf5-frameworkintegration
#     # The KDE platform theme plugin was split off into a separate project in 5.22.0
#     # For continuity, we make the corresponding port a runtime dependency.
#     ifplatform darwin {
#         depends_run-append \
#                 port:kf5-osx-integration-devel
#         post-destroot {
#             file delete ${destroot}${prefix}/share/knotifications5/plasma_workspace.notifyrc
#         }
#     } else {
#         depends_run-append \
#                 port:kf5-plasma-integration
#     }
#     set_kf5_framework \
#                     frameworkintegration
#     fetch.type      git
#     git.branch      c0704f04ecb72536274be710df2ae21be8a27c49
#     version         5.47.0.2
#     kf5.depends_frameworks \
#                     kconfig kconfigwidgets kiconthemes knewstuff \
#                     knotifications kpackage kwidgetsaddons
#     # autotests need more patching than just being built as nongui (non-app-bundle) executables!
#     test.env-append \
#                     KDE_SESSION_VERSION=5
#     post-patch {
#         # these seem to change the required version a bit too often, so use a reinplace instead of a patchfile
#         reinplace -W ${worksrcpath} "s|^find_package(packagekitqt5|# find_package(packagekitqt5|g" CMakeLists.txt
#         reinplace -W ${worksrcpath} "s|^find_package(AppStreamQt|# find_package(AppStreamQt|g" CMakeLists.txt
#     }
}

homepage            http://projects.kde.org/projects/${kf5.virtualPath}/${kf5.framework} \
                    http://api.kde.org/frameworks-api/frameworks5-apidocs/${kf5.framework}/html/index.html

set_mastersites_and_distname

### === Porting Aids ===
### this might be better in a separate portdir because despite being frameworks
### they are distributed from a different URL. Then again all we need to do extra
### in this meta-Portfile is setting is_portingAid and calling kf5.set_project explicitly.

subport kf5-kdelibs4support {
    PortGroup       perl5 1.0
    description     Legacy support for kdelibs 4 compatibility
    long_description \
                    This framework provides code and utilities to ease the transition from \
                    kdelibs 4 to KDE Frameworks 5. This includes CMake macros and C++ \
                    classes whose functionality has been replaced by code in CMake, Qt and \
                    other frameworks.
    conflicts       kf5-kdelibs4support-devel
    kf5.kde4compat -port kde4-runtime
    # change the type of framework to "portingAid"
    kf5.is_portingAid
    # call the function that will take care of resetting the rest
    kf5.set_project \
                    kdelibs4support
    kf5::set_checkums
}

subport kf5-kdelibs4support-devel {
    replaced_by     kf5-kdelibs4support
    PortGroup       obsolete 1.0
    PortGroup       perl5 1.0
    description     Legacy support for kdelibs 4 compatibility
    long_description \
                    This framework provides code and utilities to ease the transition from \
                    kdelibs 4 to KDE Frameworks 5. This includes CMake macros and C++ \
                    classes whose functionality has been replaced by code in CMake, Qt and \
                    other frameworks.
    conflicts       kf5-kdelibs4support
    kf5.kde4compat -port kde4-runtime
#     # change the type of framework to "portingAid"
#     kf5.is_portingAid
#     fetch.type      git
#     # v5.2.0-374-g49d3e339
#     git.branch      49d3e3391b17c814378addf45e3d5b03a0f1e5fe
#     version         5.47.0.5.2.0.374
#     # call the function that will take care of resetting the rest
#     kf5.set_project \
#                     kdelibs4support
#     distname        ${kf5.project}-5.git
}

if {${subport} eq "kf5-kdelibs4support" || ${subport} eq "kf5-kdelibs4support-devel"} {
    depends_build-append \
                    ${kf5::oxygen-icons_dep} \
                    path:bin/perl5:perl5 \
                    port:p${perl5.default_branch}-uri \
                    lib:libssl:openssl \
                    port:docbook-xml
    kf5.depends_qt5_components \
                    qtsvg
    kf5.depends_frameworks \
                    kcompletion kconfig kconfigwidgets \
                    kcrash kdbusaddons kded kdesignerplugin \
                    kdoctools kglobalaccel kguiaddons ki18n \
                    kiconthemes kio knotifications kparts \
                    kservice ktextwidgets kunitconversion \
                    kwidgetsaddons kwindowsystem kxmlgui
    # optional runtime dependency: kdesignerplugin
    kf5.depends_run_frameworks \
                    kemoticons
    # pretend KDE_FULL_SESSION is set in order to get full support for theming settings
    patchfiles-append \
                    kdelibs4support/patch-kdelibs4supp-simulate-full_session.diff \
                    kdelibs4support/patch-kdelibs4supp-add-icon.diff
    post-patch {
        xinstall -m 755 -d ${build.dir}/src/kdebugdialog/icons
        kf5.link_icons ${prefix}/share/icons/oxygen actions tools-report-bug.png ${build.dir}/src/kdebugdialog/icons
    }
    # submit upstream
    patchfiles-append \
                    kdelibs4support/patch-kdelibs4supp-qosmac=osx.diff \
                    kdelibs4support/patch-kdelibs4supp-correct-menuroles-kaction.diff \
                    kdelibs4support/patch-kdelibs4supp-correct-fileshareset-install.diff
    # https://git.reviewboard.kde.org/r/126309/
    patchfiles-append \
                    kdelibs4support/patch-kdelibs4supp-backtrace-demangle.diff
    patchfiles-append \
                    kdelibs4support/patch-kdelibs4supp-add-bundle-path.diff \
                    kdelibs4support/patch-kdelibs4supp-preserve-app-icon.diff
    post-patch {
        reinplace "s|/usr/local/|${prefix}/|g" ${worksrcpath}/src/kssl/kopenssl.cpp
        reinplace "s|/usr/sbin|${prefix}/sbin|g" ${worksrcpath}/src/kio/kfileshare.cpp
        reinplace "s|@PREFIX@|${prefix}|g" ${worksrcpath}/src/kdecore/kmimetyperepository.cpp
        reinplace "s|/usr/local|${prefix}|g" ${worksrcpath}/src/kdecore/kstandarddirs.cpp
    }
    post-destroot {
        reinplace "s|/usr/bin/perl|${prefix}/bin/perl5|g" ${destroot}${kf5.libexec_dir}/kf5/fileshareset
        if {[variant_isset kde4compat] && [file exists ${destroot}${prefix}/share/doc/HTML/en/kcontrol/kcm_ssl]} {
            file rename ${destroot}${prefix}/share/doc/HTML/en/kcontrol/kcm_ssl \
                ${destroot}${prefix}/share/doc/HTML/en/kcontrol/kcm_ssl5
        }
    }
}

subport kf5-khtml {
    description     HTML rendering engine
    long_description \
                    KHTML is a web rendering engine, based on the KParts technology \
                    and using KJS for JavaScript support.
    conflicts       kf5-khtml-devel
    # change the type of framework to "portingAid"
    kf5.is_portingAid
    # call the function that will take care of resetting the rest
    kf5.set_project \
                    khtml
    kf5::set_checkums
    depends_run-append \
                    path:bin/perl5:perl5
    platform darwin {
        depends_lib-append \
                    port:jpeg port:giflib port:libpng
    }
    depends_lib-append \
                    port:phonon-qt5 \
                    lib:libssl:openssl \
                    port:zlib
    kf5.depends_frameworks \
                    karchive kcodecs kglobalaccel ki18n \
                    kiconthemes kio kjs knotifications \
                    kparts sonnet ktextwidgets kwallet \
                    kwidgetsaddons kwindowsystem kxmlgui
    post-patch {
        reinplace "s|/usr/local/|${prefix}/|g" ${worksrcpath}/src/html/kopenssl.cpp
        reinplace -W ${worksrcpath} "s|/usr/bin/python|${prefix}/bin/python${kf5::pyversion}|g" \
                    src/misc/gennames.py \
                    src/svg/generateSVGNames.py
        reinplace -W ${worksrcpath} "s|/usr/bin/perl|${prefix}/bin/perl5|g" \
                    src/scripts/validate \
                    src/scripts/list-updated-tests \
                    src/scripts/doctype \
                    src/css/maketokenizer \
                    src/bindings/scripts/generate-bindings.pl
    }
}

subport kf5-kjs {
    description     Javascript engine
    long_description \
                    This library provides an ECMAScript compatible interpreter. The ECMA standard \
                    is based on well known scripting languages such as Netscape's JavaScript and \
                    Microsoft's JScript.
    # change the type of framework to "portingAid"
    kf5.is_portingAid
    # call the function that will take care of resetting the rest
    kf5.set_project \
                    kjs
    kf5::set_checkums
    depends_lib-append \
                    port:pcre
    depends_run-append \
                    path:bin/perl5:perl5
    kf5.depends_frameworks \
                    kdoctools
    post-patch {
        reinplace -W ${worksrcpath} "s|/usr/bin/perl|${prefix}/bin/perl5|g" \
                    src/kjs/create_hash_table
    }
}

subport kf5-kjsembed {
    description     Binding Javascript object to QObjects
    long_description \
                    KSJEmbed provides a method of binding JavaScript objects \
                    to QObjects, so you can script your applications.
    # change the type of framework to "portingAid"
    kf5.is_portingAid
    # call the function that will take care of resetting the rest
    kf5.set_project \
                    kjsembed
    kf5::set_checkums
    kf5.depends_frameworks \
                    karchive kdoctools ki18n
}

subport kf5-kross {
    description     Embedding of scripting into applications
    long_description \
                    Kross is a scripting bridge to embed scripting functionality \
                    into an application. It supports QtScript as a scripting interpreter backend.
    # change the type of framework to "portingAid"
    kf5.is_portingAid
    # call the function that will take care of resetting the rest
    kf5.set_project \
                    kross
    kf5::set_checkums
    depends_build-append \
                    ${kf5::pythondep}
    kf5.depends_qt5_components \
                    qtscript
    kf5.depends_frameworks \
                    kcompletion kcoreaddons kdoctools ki18n \
                    kiconthemes kio kparts kwidgetsaddons kxmlgui
    patchfiles-append \
                    kross/patch-kross-nongui-execs.diff
}

### === Meta Ports ===

if {${subport} eq ${name}} {
    long_description \
                    This meta-port pulls in all KF5 Frameworks, plus the kdelibs4support porting aid.
    homepage        http://projects.kde.org/projects/
    depends_build-append \
                    port:kf5-tier1-frameworks \
                    port:kf5-tier2-frameworks \
                    port:kf5-tier3-frameworks \
                    port:kf5-frameworkintegration  \
                    port:kf5-portingaid-frameworks
    installs_libs   no
    supported_archs noarch
    distfiles
    fetch {}
    checksum {}
    extract {}
    use_configure   no
    build {}
    kf5.allow_apidocs_generation no
    destroot {
        xinstall -d -m 755 ${destroot}${prefix}/share/doc/kf5-installed-meta-ports
        system "touch ${destroot}${prefix}/share/doc/kf5-installed-meta-ports/${subport}"
    }
}

subport kf5-tier1-frameworks {
    description     Meta-port for the Tier-1 Frameworks
    long_description \
                    ${description}, the frameworks that do not depend on other KF5 frameworks.
    homepage        http://projects.kde.org/projects/ \
                    http://api.kde.org/frameworks-api/frameworks5-apidocs/\#fw-tier1
    depends_build-append \
                    ${kf5::kapidox_dep}
    kf5.depends_build_frameworks \
                    attica karchive kcodecs kconfig \
                    kcoreaddons kdbusaddons kdnssd kguiaddons \
                    ki18n kidletime kimageformats kitemmodels \
                    kitemviews kplotting kwidgetsaddons kwindowsystem \
                    solid sonnet threadweaver
    if {${os.platform} ne "darwin"} {
        kf5.depends_build_frameworks \
                    kwayland
    }
    # kf5-kapidox kf5-attica kf5-karchive kf5-kcodecs kf5-kconfig kf5-kcoreaddons kf5-kdbusaddons kf5-kdnssd kf5-kguiaddons kf5-ki18n kf5-kidletime kf5-kimageformats kf5-kitemmodels kf5-kitemviews kf5-kplotting kf5-ksyntaxhighlighting kf5-kwidgetsaddons kf5-kwindowsystem kf5-solid kf5-sonnet kf5-threadweaver kf5-kwayland
    # kf5-kapidox kf5-attica kf5-karchive kf5-kcodecs kf5-kconfig kf5-kcoreaddons kf5-kdbusaddons kf5-kdnssd kf5-kguiaddons kf5-ki18n kf5-kidletime kf5-kimageformats kf5-kitemmodels kf5-kitemviews kf5-kplotting kf5-ksyntaxhighlighting kf5-kwidgetsaddons kf5-kwindowsystem-devel kf5-solid kf5-sonnet kf5-threadweaver kf5-kwayland
    installs_libs   no
    supported_archs noarch
    distfiles
    fetch {}
    checksum {}
    extract {}
    use_configure   no
    build {}
    kf5.allow_apidocs_generation no
    destroot {
        xinstall -d -m 755 ${destroot}${prefix}/share/doc/kf5-installed-meta-ports
        system "touch ${destroot}${prefix}/share/doc/kf5-installed-meta-ports/${subport}"
    }
}

subport kf5-tier2-frameworks {
    description     Meta-port for the Tier-2 Frameworks
    long_description \
                    ${description}, the frameworks that depend only on Tier-1 frameworks
    homepage        http://projects.kde.org/projects/ \
                    http://api.kde.org/frameworks-api/frameworks5-apidocs/\#fw-tier2
    kf5.depends_build_frameworks \
                    kauth kcompletion kcrash kdoctools \
                    kfilemetadata kjobwidgets knotifications \
                    kpackage kpty kunitconversion
    # kf5-kauth kf5-kcompletion kf5-kcrash kf5-kdoctools kf5-kfilemetadata kf5-kjobwidgets kf5-knotifications kf5-kpackage kf5-kpty kf5-kunitconversion
    installs_libs   no
    supported_archs noarch
    distfiles
    fetch {}
    checksum {}
    extract {}
    use_configure   no
    build {}
    kf5.allow_apidocs_generation no
    destroot {
        xinstall -d -m 755 ${destroot}${prefix}/share/doc/kf5-installed-meta-ports
        system "touch ${destroot}${prefix}/share/doc/kf5-installed-meta-ports/${subport}"
    }
}

subport kf5-tier3-frameworks {
    description     Meta-port for the Tier-3 Frameworks
    long_description \
                    ${description}, the frameworks that depend on Tier-1 and/or Tier-2 and/or Tier-3 frameworks
    homepage        http://projects.kde.org/projects/ \
                    http://api.kde.org/frameworks-api/frameworks5-apidocs/\#fw-tier3
    # build dependencies are declared in the order in which they have to be built
    kf5.depends_build_frameworks \
                    kconfigwidgets kiconthemes kservice kglobalaccel \
                    ktextwidgets kxmlgui kbookmarks kwallet kio \
                    baloo kactivities kactivities-stats kdeclarative \
                    kcmutils kinit kded kparts kdewebkit \
                    kdesignerplugin kdesu kemoticons knewstuff \
                    knotifyconfig kpeople plasma-framework kirigami2 \
                    ktexteditor kxmlrpcclient krunner purpose
# kf5-baloo kf5-kactivities kf5-kactivities-stats kf5-kbookmarks kf5-kcmutils kf5-kconfigwidgets kf5-kdeclarative kf5-kded kf5-kdesignerplugin kf5-kdesu kf5-kdewebkit kf5-kemoticons kf5-kglobalaccel kf5-kiconthemes kf5-kinit kf5-kio kf5-kirigami2 kf5-knewstuff kf5-knotifyconfig kf5-kparts kf5-kpeople kf5-plasma-framework kf5-kservice kf5-ktexteditor kf5-ktextwidgets kf5-kwallet kf5-kxmlgui kf5-kxmlrpcclient kf5-krunner kf5-purpose kf5-qqc2-desktop-style
    # in build order:
# kf5-kconfigwidgets kf5-kiconthemes kf5-kservice kf5-kglobalaccel kf5-ktextwidgets kf5-kxmlgui kf5-kbookmarks kf5-kwallet kf5-kio kf5-baloo kf5-kactivities kf5-kactivities-stats kf5-kdeclarative kf5-kcmutils kf5-kinit kf5-kded kf5-kparts kf5-kdewebkit kf5-kdesignerplugin kf5-kdesu kf5-kemoticons kf5-knewstuff kf5-knotifyconfig kf5-kpeople kf5-plasma-framework kf5-kirigami2 kf5-ktexteditor kf5-kxmlrpcclient kf5-krunner kf5-purpose kf5-qqc2-desktop-style
    installs_libs   no
    supported_archs noarch
    distfiles
    fetch {}
    checksum {}
    extract {}
    use_configure   no
    build {}
    kf5.allow_apidocs_generation no
    destroot {
        xinstall -d -m 755 ${destroot}${prefix}/share/doc/kf5-installed-meta-ports
        system "touch ${destroot}${prefix}/share/doc/kf5-installed-meta-ports/${subport}"
    }
}

subport kf5-portingaid-frameworks {
    description     Meta-port for the Porting Aids Frameworks
    long_description \
                    ${description}, the frameworks aiming to ease the porting of applications \
                    from KDE4 to KF5 (KDE5).
    homepage        http://projects.kde.org/projects/ \
                    http://api.kde.org/frameworks-api/frameworks5-apidocs/#porting-aids
    kf5.depends_build_frameworks \
                    kdelibs4support kjs khtml kross kjsembed
    # to be done: kmediaplayer
    # install order:
    # kf5-kdelibs4support[-devel] kf5-kjs kf5-khtml kf5-kross kf5-kjsembed
    installs_libs   no
    supported_archs noarch
    distfiles
    fetch {}
    checksum {}
    extract {}
    use_configure   no
    build {}
    kf5.allow_apidocs_generation no
    destroot {
        xinstall -d -m 755 ${destroot}${prefix}/share/doc/kf5-installed-meta-ports
        system "touch ${destroot}${prefix}/share/doc/kf5-installed-meta-ports/${subport}"
    }
}

# maintainer overwatch: don't forget to reset the revision when upgrading versions
if {(${kf5.latest_version} ne ${kf5.version}) && (${revision} ne 0)} {
    ui_warn "${subport} has non-zero revision ${revision}"
    pre-install {
        ui_error "reset ${subport} revision before installing!"
        return -code error "reset ${subport} revision before installing!"
    }
}

long_description-append "\n(${subport} is a [kf5::tier] framework.)"

livecheck.type      regex
livecheck.version   ${kf5.branch}
livecheck.url       http://download.kde.org/stable/frameworks/
livecheck.regex     (5+(\\.\\d+)+)

# kate: backspace-indents true; indent-pasted-text true; indent-width 4; keep-extra-spaces true; remove-trailing-spaces modified; replace-tabs true; replace-tabs-save true; syntax MacPorts/Portfile; tab-indents true; tab-width 4;
