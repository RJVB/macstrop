diff --git src/tools/ksvg2icns/ksvg2icns.cpp src/tools/ksvg2icns/ksvg2icns.cpp
index 27ed66f..f879ba7 100644
--- src/tools/ksvg2icns/ksvg2icns.cpp
+++ src/tools/ksvg2icns/ksvg2icns.cpp
@@ -71,8 +71,8 @@ int main(int argc, char *argv[])
 {
     QGuiApplication app(argc, argv);
 
-    app.setApplicationName("ksvg2icns");
-    app.setApplicationVersion(KICONTHEMES_VERSION_STRING);
+    app.setApplicationName(QStringLiteral("ksvg2icns"));
+    app.setApplicationVersion(QStringLiteral(KICONTHEMES_VERSION_STRING));
     QCommandLineParser parser;
     parser.setApplicationDescription(app.translate("main", "Creates an icns file from an svg image"));
     parser.addPositionalArgument("iconname", app.translate("main", "The svg icon to convert"));
@@ -87,16 +87,15 @@ int main(int argc, char *argv[])
     bool isOk;
 
     // create a temporary dir to create an iconset
-    QTemporaryDir tmpDir("ksvg2icns");
-    tmpDir.setAutoRemove(true);
+    QTemporaryDir tmpDir(QDir::tempPath() + QStringLiteral("/ksvg2icns"));
 
     isOk = tmpDir.isValid();
     EXIT_ON_ERROR(isOk, "Unable to create temporary directory\n");
 
-    isOk = QDir(tmpDir.path()).mkdir("out.iconset");
-    EXIT_ON_ERROR(isOk, "Unable to create out.iconset directory\n");
+    const QString outPath = tmpDir.filePath(QStringLiteral("out.iconset"));
 
-    const QString outPath = tmpDir.path() + "/out.iconset";
+    isOk = QDir(tmpDir.path()).mkpath(outPath);
+    EXIT_ON_ERROR(isOk, "Unable to create out.iconset directory\n");
 
     const QStringList &args = app.arguments();
     EXIT_ON_ERROR(args.size() == 2,
@@ -122,13 +121,13 @@ int main(int argc, char *argv[])
 
     // create the pngs in various resolutions
     const OutFiles outFiles[] = {
-        { 1024, outPath + "/icon_512x512@2x.png", QString() },
-        {  512, outPath + "/icon_512x512.png",    outPath + "/icon_256x256@2x.png" },
-        {  256, outPath + "/icon_256x256.png",    outPath + "/icon_128x128@2x.png" },
-        {  128, outPath + "/icon_128x128.png",    QString() },
-        {   64, outPath + "/icon_32x32@2x.png",   QString() },
-        {   32, outPath + "/icon_32x32.png",       outPath + "/icon_16x16@2x.png" },
-        {   16, outPath + "/icon_16x16.png",       QString() }
+        { 1024, outPath + QStringLiteral("/icon_512x512@2x.png"), QString() },
+        {  512, outPath + QStringLiteral("/icon_512x512.png"),    outPath + QStringLiteral("/icon_256x256@2x.png") },
+        {  256, outPath + QStringLiteral("/icon_256x256.png"),    outPath + QStringLiteral("/icon_128x128@2x.png") },
+        {  128, outPath + QStringLiteral("/icon_128x128.png"),    QString() },
+        {   64, outPath + QStringLiteral("/icon_32x32@2x.png"),   QString() },
+        {   32, outPath + QStringLiteral("/icon_32x32.png"),      outPath + QStringLiteral("/icon_16x16@2x.png") },
+        {   16, outPath + QStringLiteral("/icon_16x16.png"),      QString() }
     };
 
     for (size_t i = 0; i < sizeof(outFiles) / sizeof(OutFiles); ++i) {
@@ -140,7 +139,7 @@ int main(int argc, char *argv[])
 
     // convert the iconset to icns using the "iconutil" command
 
-    const QString outIcns = QFileInfo(svgFileName).baseName() + ".icns";
+    const QString outIcns = QFileInfo(svgFileName).baseName() + QStringLiteral(".icns");
 
     const QStringList utilArgs = QStringList()
             << "-c" << "icns"
@@ -148,10 +147,8 @@ int main(int argc, char *argv[])
             << outPath;
 
     QProcess iconUtil;
-    iconUtil.setProgram("iconUtil");
-    iconUtil.setArguments(utilArgs);
 
-    iconUtil.start("iconutil", utilArgs, QIODevice::ReadOnly);
+    iconUtil.start(QStringLiteral("iconutil"), utilArgs, QIODevice::ReadOnly);
     isOk = iconUtil.waitForFinished(-1);
     EXIT_ON_ERROR(isOk, "Unable to launch iconutil: %s\n", qPrintable(iconUtil.errorString()));
 
