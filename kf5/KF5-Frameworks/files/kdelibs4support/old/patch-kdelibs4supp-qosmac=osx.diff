diff --git src/kdecore/kcmdlineargs.cpp src/kdecore/kcmdlineargs.cpp
index 1636d7c..8cfa870 100644
--- src/kdecore/kcmdlineargs.cpp
+++ src/kdecore/kcmdlineargs.cpp
@@ -882,7 +882,7 @@ KCmdLineArgsStatic::parseAllArgs()
             } else if (option.startsWith("help-")) { // krazy:exclude=strings
                 KCmdLineArgs::usage(option.mid(5));
             }
-#ifdef Q_OS_MAC
+#ifdef Q_OS_OSX
             // skip the finder -psn_* hint
             else if (option.startsWith("psn_")) { // krazy:exclude=strings
                 continue;
diff --git src/kdecore/kkernel_mac.cpp src/kdecore/kkernel_mac.cpp
index e0ecbec..26875a9 100644
--- src/kdecore/kkernel_mac.cpp
+++ src/kdecore/kkernel_mac.cpp
@@ -19,7 +19,7 @@
 
 #include "kkernel_mac.h"
 
-#ifdef Q_OS_MACX
+#ifdef Q_OS_OSX
 
 #include <unistd.h>
 #include <string.h>
diff --git src/kdecore/kkernel_mac.h src/kdecore/kkernel_mac.h
index 5e569f4..f4df7e3 100644
--- src/kdecore/kkernel_mac.h
+++ src/kdecore/kkernel_mac.h
@@ -19,9 +19,9 @@
 #ifndef KKERNEL_MAC_H
 #define KKERNEL_MAC_H
 
-#include <QtCore/qglobal.h> // defines Q_OS_MACX
+#include <QtCore/qglobal.h> // defines Q_OS_OSX
 
-#ifdef Q_OS_MACX
+#ifdef Q_OS_OSX
 
 #include <kdelibs4support_export.h>
 #include <QtCore/QString>
@@ -57,5 +57,5 @@ KDELIBS4SUPPORT_DEPRECATED_EXPORT void mac_initialize_dbus();
   */
 KDELIBS4SUPPORT_DEPRECATED_EXPORT QString mac_app_filename();
 
-#endif  // Q_OS_MACX
+#endif  // Q_OS_OSX
 #endif  // KKERNEL_MAC_H
diff --git src/kdecore/klocale.cpp src/kdecore/klocale.cpp
index 3afc818..2a5e803 100644
--- src/kdecore/klocale.cpp
+++ src/kdecore/klocale.cpp
@@ -25,7 +25,7 @@
 #include "klocale.h"
 #if defined Q_OS_WIN
 #include "klocale_win_p.h"
-#elif defined Q_OS_MAC
+#elif defined Q_OS_OSX
 #include "klocale_mac_p.h"
 #else
 #include "klocale_unix_p.h"
@@ -46,7 +46,7 @@
 KLocale::KLocale(KSharedConfig::Ptr config)
 #if defined Q_OS_WIN
     : d(new KLocaleWindowsPrivate(this, config))
-#elif defined Q_OS_MAC
+#elif defined Q_OS_OSX
     : d(new KLocaleMacPrivate(this, config))
 #else
     : d(new KLocaleUnixPrivate(this, config))
@@ -57,7 +57,7 @@ KLocale::KLocale(KSharedConfig::Ptr config)
 KLocale::KLocale(const QString &language, const QString &country, KConfig *config)
 #if defined Q_OS_WIN
     : d(new KLocaleWindowsPrivate(this, language, country, config))
-#elif defined Q_OS_MAC
+#elif defined Q_OS_OSX
     : d(new KLocaleMacPrivate(this, language, country, config))
 #else
     : d(new KLocaleUnixPrivate(this, language, country, config))
diff --git src/kdecore/kstandarddirs.cpp src/kdecore/kstandarddirs.cpp
index 4161425..fd41b29 100644
--- src/kdecore/kstandarddirs.cpp
+++ src/kdecore/kstandarddirs.cpp
@@ -1338,7 +1338,7 @@ QStringList KStandardDirs::systemPaths(const QString &pstr)
     return exePaths;
 }
 
-#ifdef Q_OS_MAC
+#ifdef Q_OS_OSX
 static QString getBundle(const QString &path, bool ignore)
 {
     //kDebug(180) << "getBundle(" << path << ", " << ignore << ") called";
@@ -1366,7 +1366,7 @@ static QString getBundle(const QString &path, bool ignore)
 
 static QString checkExecutable(const QString &path, bool ignoreExecBit)
 {
-#ifdef Q_OS_MAC
+#ifdef Q_OS_OSX
     QString bundle = getBundle(path, ignoreExecBit);
     if (!bundle.isEmpty()) {
         //kDebug(180) << "findExe(): returning " << bundle;
@@ -1375,7 +1375,7 @@ static QString checkExecutable(const QString &path, bool ignoreExecBit)
 #endif
     QFileInfo info(path);
     QFileInfo orig = info;
-#if defined(Q_OS_DARWIN) || defined(Q_OS_MAC)
+#if defined(Q_OS_DARWIN) || defined(Q_OS_OSX)
     FILE *file;
     if (file = fopen(orig.absoluteFilePath().toUtf8().constData(), "r")) {
         fclose(file);
@@ -1498,7 +1498,7 @@ int KStandardDirs::findAllExe(QStringList &list, const QString &appname,
         p = (*it) + QLatin1Char('/');
         p += appname;
 
-#ifdef Q_OS_MAC
+#ifdef Q_OS_OSX
         QString bundle = getBundle(p, (options & IgnoreExecBit));
         if (!bundle.isEmpty()) {
             //kDebug(180) << "findExe(): returning " << bundle;
@@ -1800,7 +1800,7 @@ void KStandardDirs::addKDEDefaults()
             localKdeDir += QLatin1Char('/');
         }
     } else {
-#if defined(Q_OS_MAC)
+#if defined(Q_OS_OSX)
         localKdeDir =  QDir::homePath() + QLatin1String("/Library/Preferences/KDE/");
 #elif defined(Q_OS_WIN)
 #ifndef _WIN32_WCE
@@ -1824,7 +1824,7 @@ void KStandardDirs::addKDEDefaults()
     }
 #endif
 
-#ifdef Q_OS_MAC
+#ifdef Q_OS_OSX
     // Adds the "Contents" directory of the current application bundle to
     // the search path. This way bundled resources can be found.
     QDir bundleDir(mac_app_filename());
diff --git src/kdeui/k4style.cpp src/kdeui/k4style.cpp
index a1a2ab1..cc3d96a 100644
--- src/kdeui/k4style.cpp
+++ src/kdeui/k4style.cpp
@@ -329,7 +329,7 @@ K4Style::SubElement K4Style::newSubElement(const QString &element)
 
 QString K4Style::defaultStyle()
 {
-#if defined(Q_OS_UNIX) && !defined(Q_OS_MAC)
+#if defined(Q_OS_UNIX) && !defined(Q_OS_OSX)
     return QString("breeze");
 #else
     return QString(); // native style
diff --git src/kdeui/kapplication.cpp src/kdeui/kapplication.cpp
index 6ffaf6e..7dec37c 100644
--- src/kdeui/kapplication.cpp
+++ src/kdeui/kapplication.cpp
@@ -92,7 +92,7 @@
 #include <QX11Info>
 #endif
 
-#ifdef Q_OS_MAC
+#ifdef Q_OS_OSX
 // ick
 #undef Status
 #include <Carbon/Carbon.h>
@@ -368,7 +368,7 @@ void KApplicationPrivate::init(bool GUIenabled)
         ::exit(127);
     }
 
-#ifdef Q_OS_MAC
+#ifdef Q_OS_OSX
     mac_initialize_dbus();
 #endif
 
@@ -472,7 +472,7 @@ void KApplicationPrivate::init(bool GUIenabled)
     q->connect(KToolInvocation::self(), SIGNAL(kapplication_hook(QStringList&,QByteArray&)),
                q, SLOT(_k_slot_KToolInvocation_hook(QStringList&,QByteArray&)));
 
-#ifdef Q_OS_MAC
+#ifdef Q_OS_OSX
     // This is a QSystemTrayIcon instead of K* because we can't be sure q is a QWidget
     QSystemTrayIcon *trayIcon; //krazy:exclude=qclasses
     if (QSystemTrayIcon::isSystemTrayAvailable()) { //krazy:exclude=qclasses
diff --git src/kdeui/kuniqueapplication.cpp src/kdeui/kuniqueapplication.cpp
index 21ca5eb..47240f3 100644
--- src/kdeui/kuniqueapplication.cpp
+++ src/kdeui/kuniqueapplication.cpp
@@ -59,7 +59,7 @@
 #include <kconfig.h>
 #include "kdebug.h"
 
-#if defined(Q_OS_DARWIN) || defined (Q_OS_MAC)
+#if defined(Q_OS_DARWIN) || defined (Q_OS_OSX)
 #include <kkernel_mac.h>
 #endif
 
@@ -77,7 +77,7 @@ KUniqueApplication::addCmdLineOptions()
 {
     KCmdLineOptions kunique_options;
     kunique_options.add("nofork", ki18n("Do not run in the background."));
-#ifdef Q_OS_MAC
+#ifdef Q_OS_OSX
     kunique_options.add("psn", ki18n("Internally added if launched from Finder"));
 #endif
     KCmdLineArgs::addCmdLineOptions(kunique_options, KLocalizedString(), "kuniqueapp", "kde");
@@ -110,7 +110,7 @@ KUniqueApplication::start(StartFlags flags)
     s_kuniqueapplication_startCalled = true;
 
     addCmdLineOptions(); // Make sure to add cmd line options
-#if defined(Q_OS_WIN) || defined(Q_OS_MACX)
+#if defined(Q_OS_WIN) || defined(Q_OS_OSX)
     Private::s_startOwnInstance = true;
 #else
     KCmdLineArgs *args = KCmdLineArgs::parsedArgs("kuniqueapp");
@@ -130,7 +130,7 @@ KUniqueApplication::start(StartFlags flags)
     bool forceNewProcess = Private::s_multipleInstances || flags & NonUniqueInstance;
 
     if (Private::s_startOwnInstance) {
-#if defined(Q_OS_DARWIN) || defined (Q_OS_MAC)
+#if defined(Q_OS_DARWIN) || defined (Q_OS_OSX)
         mac_initialize_dbus();
 #endif
 
@@ -156,7 +156,7 @@ KUniqueApplication::start(StartFlags flags)
         // We'll call newInstance in the constructor. Do nothing here.
         return true;
 
-#if defined(Q_OS_DARWIN) || defined (Q_OS_MAC)
+#if defined(Q_OS_DARWIN) || defined (Q_OS_OSX)
     } else {
         mac_fork_and_reexec_self();
 #endif
