diff --git src/kdecore/kcmdlineargs.cpp src/kdecore/kcmdlineargs.cpp
index d7ba45e5ea6766d3946ca3d211ee2b5d1d4def6e..27c2a1baacb244b3bec3ad28cc2304e14276b293 100644
--- src/kdecore/kcmdlineargs.cpp
+++ src/kdecore/kcmdlineargs.cpp
@@ -882,7 +882,7 @@ KCmdLineArgsStatic::parseAllArgs()
             } else if (option.startsWith("help-")) { // krazy:exclude=strings
                 KCmdLineArgs::usage(option.mid(5));
             }
-#ifdef Q_OS_MAC
+#ifdef Q_OS_MACOS
             // skip the finder -psn_* hint
             else if (option.startsWith("psn_")) { // krazy:exclude=strings
                 continue;
diff --git src/kdecore/kkernel_mac.cpp src/kdecore/kkernel_mac.cpp
index c29c505582d0fd857d131a1218bbce11f99997f3..c781cdabfd4ff3373c1609e2e4fda733cf519904 100644
--- src/kdecore/kkernel_mac.cpp
+++ src/kdecore/kkernel_mac.cpp
@@ -19,7 +19,7 @@
 
 #include "kkernel_mac.h"
 
-#ifdef Q_OS_MACX
+#ifdef Q_OS_MACOS
 
 #include <unistd.h>
 #include <string.h>
diff --git src/kdecore/kkernel_mac.h src/kdecore/kkernel_mac.h
index 728c47ee22fe2dba58ab7b9f40d26127e441159a..602ee4778fb6c458f7a35e82b29fc72bba97d3c9 100644
--- src/kdecore/kkernel_mac.h
+++ src/kdecore/kkernel_mac.h
@@ -1,3 +1,4 @@
+
 /* This file is part of the KDE libraries
    Copyright (C) 2007 Christian Ehrlicher <ch.ehrlicher@gmx.de>
 
@@ -19,9 +20,9 @@
 #ifndef KKERNEL_MAC_H
 #define KKERNEL_MAC_H
 
-#include <qglobal.h> // defines Q_OS_MACX
+#include <qglobal.h> // defines Q_OS_MACOS
 
-#ifdef Q_OS_MACX
+#ifdef Q_OS_MACOS
 
 #include <kdelibs4support_export.h>
 #include <QString>
@@ -57,5 +58,5 @@ KDELIBS4SUPPORT_DEPRECATED_EXPORT void mac_initialize_dbus();
   */
 KDELIBS4SUPPORT_DEPRECATED_EXPORT QString mac_app_filename();
 
-#endif  // Q_OS_MACX
+#endif  // Q_OS_MACOS
 #endif  // KKERNEL_MAC_H
diff --git src/kdecore/klocale.cpp src/kdecore/klocale.cpp
index 352125d3bab7fcfdc65024fc214ff64fda36d0dd..66bdef08eea1d5d970ff9bba30d5eedd277edb8b 100644
--- src/kdecore/klocale.cpp
+++ src/kdecore/klocale.cpp
@@ -25,7 +25,7 @@
 #include "klocale.h"
 #if defined Q_OS_WIN
 #include "klocale_win_p.h"
-#elif defined Q_OS_MAC
+#elif defined Q_OS_MACOS
 #include "klocale_mac_p.h"
 #else
 #include "klocale_unix_p.h"
@@ -42,7 +42,7 @@
 KLocale::KLocale(KSharedConfig::Ptr config)
 #if defined Q_OS_WIN
     : d(new KLocaleWindowsPrivate(this, config))
-#elif defined Q_OS_MAC
+#elif defined Q_OS_MACOS
     : d(new KLocaleMacPrivate(this, config))
 #else
     : d(new KLocaleUnixPrivate(this, config))
@@ -53,7 +53,7 @@ KLocale::KLocale(KSharedConfig::Ptr config)
 KLocale::KLocale(const QString &language, const QString &country, KConfig *config)
 #if defined Q_OS_WIN
     : d(new KLocaleWindowsPrivate(this, language, country, config))
-#elif defined Q_OS_MAC
+#elif defined Q_OS_MACOS
     : d(new KLocaleMacPrivate(this, language, country, config))
 #else
     : d(new KLocaleUnixPrivate(this, language, country, config))
diff --git src/kdecore/kstandarddirs.cpp src/kdecore/kstandarddirs.cpp
index f366c9d5bcda42f4cae4e567e82470f9fc2e3e5e..08e021e4bcf73a8bd220ad0aa1b64785ce12699b 100644
--- src/kdecore/kstandarddirs.cpp
+++ src/kdecore/kstandarddirs.cpp
@@ -1342,7 +1342,7 @@ QStringList KStandardDirs::systemPaths(const QString &pstr)
     return exePaths;
 }
 
-#ifdef Q_OS_MAC
+#ifdef Q_OS_MACOS
 static QString getBundle(const QString &path, bool ignore)
 {
     //kDebug(180) << "getBundle(" << path << ", " << ignore << ") called";
@@ -1370,7 +1370,7 @@ static QString getBundle(const QString &path, bool ignore)
 
 static QString checkExecutable(const QString &path, bool ignoreExecBit)
 {
-#ifdef Q_OS_MAC
+#ifdef Q_OS_MACOS
     QString bundle = getBundle(path, ignoreExecBit);
     if (!bundle.isEmpty()) {
         //kDebug(180) << "findExe(): returning " << bundle;
@@ -1379,7 +1379,7 @@ static QString checkExecutable(const QString &path, bool ignoreExecBit)
 #endif
     QFileInfo info(path);
     QFileInfo orig = info;
-#if defined(Q_OS_DARWIN) || defined(Q_OS_MAC)
+#if defined(Q_OS_DARWIN) || defined(Q_OS_MACOS)
     FILE *file;
     if (file = fopen(orig.absoluteFilePath().toUtf8().constData(), "r")) {
         fclose(file);
@@ -1502,7 +1502,7 @@ int KStandardDirs::findAllExe(QStringList &list, const QString &appname,
         p = (*it) + QLatin1Char('/');
         p += appname;
 
-#ifdef Q_OS_MAC
+#ifdef Q_OS_MACOS
         QString bundle = getBundle(p, (options & IgnoreExecBit));
         if (!bundle.isEmpty()) {
             //kDebug(180) << "findExe(): returning " << bundle;
@@ -1804,7 +1804,7 @@ void KStandardDirs::addKDEDefaults()
             localKdeDir += QLatin1Char('/');
         }
     } else {
-#if defined(Q_OS_MAC)
+#if defined(Q_OS_MACOS)
         localKdeDir =  QDir::homePath() + QLatin1String("/Library/Preferences/KDE/");
 #elif defined(Q_OS_WIN)
 #ifndef _WIN32_WCE
@@ -1828,7 +1828,7 @@ void KStandardDirs::addKDEDefaults()
     }
 #endif
 
-#ifdef Q_OS_MAC
+#ifdef Q_OS_MACOS
     // Adds the "Contents" directory of the current application bundle to
     // the search path. This way bundled resources can be found.
     QDir bundleDir(mac_app_filename());
diff --git src/kdeui/k4style.cpp src/kdeui/k4style.cpp
index 9d57bb3dcbdb46c4e0beaefcad10843e5dd2d8de..d3ef4794f52b63f116fbdd7aa7c5d609504deda7 100644
--- src/kdeui/k4style.cpp
+++ src/kdeui/k4style.cpp
@@ -329,7 +329,7 @@ K4Style::SubElement K4Style::newSubElement(const QString &element)
 
 QString K4Style::defaultStyle()
 {
-#if defined(Q_OS_UNIX) && !defined(Q_OS_MAC)
+#if defined(Q_OS_UNIX) && !defined(Q_OS_MACOS)
     return QString("breeze");
 #else
     return QString(); // native style
diff --git src/kdeui/kapplication.cpp src/kdeui/kapplication.cpp
index a367f0e060c9d526731c55e316f51ed34fda2b89..1b391db852e5a5c9e0156c463419a0ceb813a404 100644
--- src/kdeui/kapplication.cpp
+++ src/kdeui/kapplication.cpp
@@ -92,7 +92,7 @@
 #include <QX11Info>
 #endif
 
-#ifdef Q_OS_MAC
+#ifdef Q_OS_MACOS
 // ick
 #undef Status
 #include <Carbon/Carbon.h>
@@ -363,7 +363,7 @@ void KApplicationPrivate::init(bool GUIenabled)
         ::exit(127);
     }
 
-#ifdef Q_OS_MAC
+#ifdef Q_OS_MACOS
     mac_initialize_dbus();
 #endif
 
@@ -474,7 +474,7 @@ void KApplicationPrivate::init(bool GUIenabled)
                q, SLOT(saveState(QSessionManager&)));
 
 
-#ifdef Q_OS_MAC
+#ifdef Q_OS_MACOS
     // This is a QSystemTrayIcon instead of K* because we can't be sure q is a QWidget
     QSystemTrayIcon *trayIcon; //krazy:exclude=qclasses
     if (QSystemTrayIcon::isSystemTrayAvailable()) { //krazy:exclude=qclasses
diff --git src/kdeui/kuniqueapplication.cpp src/kdeui/kuniqueapplication.cpp
index e16599ced598e22b3437aff294c9df68ef6e37a9..fb5c2daf9500c133125371cad300ee2f93dbcfad 100644
--- src/kdeui/kuniqueapplication.cpp
+++ src/kdeui/kuniqueapplication.cpp
@@ -59,7 +59,7 @@
 #include <kconfig.h>
 #include "kdebug.h"
 
-#if defined(Q_OS_DARWIN) || defined (Q_OS_MAC)
+#if defined(Q_OS_DARWIN) || defined (Q_OS_MACOS)
 #include <kkernel_mac.h>
 #endif
 
@@ -77,7 +77,7 @@ KUniqueApplication::addCmdLineOptions()
 {
     KCmdLineOptions kunique_options;
     kunique_options.add("nofork", ki18n("Do not run in the background."));
-#ifdef Q_OS_MAC
+#ifdef Q_OS_MACOS
     kunique_options.add("psn", ki18n("Internally added if launched from Finder"));
 #endif
     KCmdLineArgs::addCmdLineOptions(kunique_options, KLocalizedString(), "kuniqueapp", "kde");
@@ -110,7 +110,7 @@ KUniqueApplication::start(StartFlags flags)
     s_kuniqueapplication_startCalled = true;
 
     addCmdLineOptions(); // Make sure to add cmd line options
-#if defined(Q_OS_WIN) || defined(Q_OS_MACX)
+#if defined(Q_OS_WIN) || defined(Q_OS_MACOS)
     Private::s_startOwnInstance = true;
 #else
     KCmdLineArgs *args = KCmdLineArgs::parsedArgs("kuniqueapp");
@@ -130,7 +130,7 @@ KUniqueApplication::start(StartFlags flags)
     bool forceNewProcess = Private::s_multipleInstances || flags & NonUniqueInstance;
 
     if (Private::s_startOwnInstance) {
-#if defined(Q_OS_DARWIN) || defined (Q_OS_MAC)
+#if defined(Q_OS_DARWIN) || defined (Q_OS_MACOS)
         mac_initialize_dbus();
 #endif
 
@@ -156,7 +156,7 @@ KUniqueApplication::start(StartFlags flags)
         // We'll call newInstance in the constructor. Do nothing here.
         return true;
 
-#if defined(Q_OS_DARWIN) || defined (Q_OS_MAC)
+#if defined(Q_OS_DARWIN) || defined (Q_OS_MACOS)
     } else {
         mac_fork_and_reexec_self();
 #endif
