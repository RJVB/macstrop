diff --git src/ioslaves/file/kauth/CMakeLists.txt src/ioslaves/file/kauth/CMakeLists.txt
index 8b77a28d..68223053 100644
--- src/ioslaves/file/kauth/CMakeLists.txt
+++ src/ioslaves/file/kauth/CMakeLists.txt
@@ -1,5 +1,11 @@
+if(APPLE)
+    include_directories(${CMAKE_INSTALL_PREFIX}/include/LegacySupport)
+endif()
 add_executable(file_helper filehelper.cpp fdsender.cpp)
 target_link_libraries(file_helper Qt5::Network KF5::AuthCore KF5::I18n KF5::KIOCore)
+if(APPLE)
+    target_link_libraries(file_helper "-lMacportsLegacySupport")
+endif()
 
 #install(TARGETS file_helper DESTINATION ${KAUTH_HELPER_INSTALL_DIR})
 #kauth_install_helper_files(file_helper org.kde.kio.file root)
diff --git src/ioslaves/file/kauth/filehelper.cpp src/ioslaves/file/kauth/filehelper.cpp
index 176e466a..4921f828 100644
--- src/ioslaves/file/kauth/filehelper.cpp
+++ src/ioslaves/file/kauth/filehelper.cpp
@@ -226,9 +226,19 @@ ActionReply FileHelper::exec(const QVariantMap &args)
             }
 
             case UTIME: {
-                timespec times[2];
                 time_t actime = arg2.toULongLong();
                 time_t modtime = arg3.toULongLong();
+#ifdef Q_OS_MACOS
+                struct timeval times[2];
+                times[0].tv_sec = actime / 1000;
+                times[0].tv_usec = actime;
+                times[1].tv_sec = modtime / 1000;
+                times[1].tv_usec = modtime;
+                if (futimes(base_fd, times) == -1) {
+                    reply.setError(errno);
+                }
+#else
+                timespec times[2];
                 times[0].tv_sec = actime / 1000;
                 times[0].tv_nsec = actime * 1000;
                 times[1].tv_sec = modtime / 1000;
@@ -236,6 +246,7 @@ ActionReply FileHelper::exec(const QVariantMap &args)
                 if (futimens(base_fd, times) == -1) {
                     reply.setError(errno);
                 }
+#endif
                 close(base_fd);
                 break;
             }
