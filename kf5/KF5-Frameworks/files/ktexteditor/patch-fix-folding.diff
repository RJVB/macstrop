commit c004f3f787b2b6fd8a1c82a66410f5cb39febf18
Author: Christoph Cullmann <cullmann@kde.org>
Date:   Sat Dec 29 17:36:33 2018 +0100

    c004f3f787b2b6fd8a1c82a66410f5cb39febf18 no longer reverted
    RJVB: also catch a condition that has been known to cause crashes.

diff --git src/syntax/katehighlight.cpp src/syntax/katehighlight.cpp
index 064a601bab2e148da235c37d7b8e36f6331a66cc..193630a7f69b2eb63f01848636351ea58b27b41d 100644
--- src/syntax/katehighlight.cpp
+++ src/syntax/katehighlight.cpp
@@ -275,6 +275,10 @@ void KateHighlighting::applyFormat(int offset, int length, const KSyntaxHighligh
     // get internal attribute, must exist
     const auto it = m_formatsIdToIndex.find(format.id());
     Q_ASSERT(it != m_formatsIdToIndex.end());
+    if (it == m_formatsIdToIndex.end()) {
+        qWarning() << Q_FUNC_INFO << "found invalid attribute index for" << format.id() << "and text" << m_textLineToHighlight->text();
+        return;
+    }
 
     // remember highlighting info in our textline
     m_textLineToHighlight->addAttribute(Kate::TextLineData::Attribute(offset, length, it->second));

     
commit a8013f3085ef2493e1109fd27ac4db608253636c
Author: Christoph Cullmann <cullmann@kde.org>
Date:   Sat Jul 13 20:43:38 2019 +0200

    fix folding of lines with end position at column 0 of a line
    
    the old workaround is no longer needed, the outer level of code handles this
    the workaround was broken, too, as it didn't use the right line but plainLine(lines() - 1)
    
    BUG: 405197

diff --git src/document/katebuffer.cpp src/document/katebuffer.cpp
index ac699bac..ee6330e0 100644
--- src/document/katebuffer.cpp
+++ src/document/katebuffer.cpp
@@ -646,25 +646,13 @@ KTextEditor::Range KateBuffer::computeFoldingRangeForStartLine(int startLine)
                  * compute resulting range!
                  */
                 if (countOfOpenRegions == 0) {
-                    /**
-                     * special handling of end: if end is at column 0 of a line, move it to end of previous line!
-                     * fixes folding for stuff like
-                     * #pragma mark END_OLD_AND_START_NEW_REGION
-                     */
-                    KTextEditor::Cursor endCursor(line, lineAttributes[i].offset);
-                    if (endCursor.column() == 0 && endCursor.line() > 0) {
-                        endCursor = KTextEditor::Cursor(endCursor.line() - 1, plainLine(lines() - 1)->length());
-                    }
-
                     // Don't return a valid range without content!
-                    if (endCursor.line() - startLine == 1) {
+                    if (line - startLine == 1) {
                         return KTextEditor::Range::invalid();
                     }
 
-                    /**
-                     * return computed range
-                     */
-                    return KTextEditor::Range(KTextEditor::Cursor(startLine, openedRegionOffset), endCursor);
+                    // return computed range
+                    return KTextEditor::Range(KTextEditor::Cursor(startLine, openedRegionOffset), KTextEditor::Cursor(line, lineAttributes[i].offset));
                 }
             }
 
