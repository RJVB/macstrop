commit c004f3f787b2b6fd8a1c82a66410f5cb39febf18
Author: Christoph Cullmann <cullmann@kde.org>
Date:   Sat Dec 29 17:36:33 2018 +0100

    fix folding region end, add ending token to the range

diff --git b/src/syntax/katehighlight.cpp a/src/syntax/katehighlight.cpp
index 763e814f..8f11c649 100644
--- b/src/syntax/katehighlight.cpp
+++ a/src/syntax/katehighlight.cpp
@@ -261,13 +261,13 @@ void KateHighlighting::applyFormat(int offset, int length, const KSyntaxHighligh
     m_textLineToHighlight->addAttribute(Kate::TextLineData::Attribute(offset, length, it->second));
 }
 
-void KateHighlighting::applyFolding(int offset, int length, KSyntaxHighlighting::FoldingRegion region)
+void KateHighlighting::applyFolding(int offset, int, KSyntaxHighlighting::FoldingRegion region)
 {
-    // WE ATM assume ascending offset order, we add the length to the offset for the folding ends to have ranges spanning the full folding region
+    // WE ATM assume ascending offset order and don't care for length
     Q_ASSERT(m_textLineToHighlight);
     Q_ASSERT(region.isValid());
     const int foldingValue = (region.type() == KSyntaxHighlighting::FoldingRegion::Begin) ? int(region.id()) : -int(region.id());
-    m_textLineToHighlight->addFolding(offset + (region.type() == KSyntaxHighlighting::FoldingRegion::Begin) ? 0 : length, foldingValue);
+    m_textLineToHighlight->addFolding(offset, foldingValue);
 
     /**
      * for each end region, decrement counter for that type, erase if count reaches 0!
