# This replaces QStringView with a KTEStringView == QString
# the "variable_test" autotest passes.
# It will undoubtedly require changes in dependent code that makes use of the functionality

diff --git autotests/src/variable_test.cpp autotests/src/variable_test.cpp
index 335dccabfcbb33ccd6dd5e76380d24acd0e452d0..fd10bb822cb6cff8987d1de7f6d71727cd6f4d60 100644
--- autotests/src/variable_test.cpp
+++ autotests/src/variable_test.cpp
@@ -28,6 +28,10 @@
 #include <QtTest>
 #include <QUuid>
 
+#ifdef KTEXTEDITOR_USES_KTEStringView
+#define QStringView KTEStringView
+#endif
+
 using namespace KTextEditor;
 
 QTEST_MAIN(VariableTest)
diff --git src/include/ktexteditor/editor.h src/include/ktexteditor/editor.h
index da2cab51ddd37bb8c5201748f676b0ea0de13ac8..047557f33e9127cccd172bbecf3f17a48fb9af2e 100644
--- src/include/ktexteditor/editor.h
+++ src/include/ktexteditor/editor.h
@@ -27,6 +27,25 @@
 class KAboutData;
 class KConfig;
 
+#if QT_VERSION < QT_VERSION_CHECK(5, 10, 0) && !defined(KTEXTEDITOR_USES_KTEStringView)
+// using KTEStringView = QString;
+class KTEXTEDITOR_EXPORT KTEStringView : public QString
+{
+public:
+    inline KTEStringView(const QString &that)
+    {
+        *(static_cast<QString*>(this)) = that;
+    }
+    QString toString() const;
+    inline KTEStringView &operator=(const QString &other) Q_DECL_NOTHROW
+    {
+        *(static_cast<QString*>(this)) = other;
+        return *this;
+    }
+};
+#define KTEXTEDITOR_USES_KTEStringView
+#endif
+
 /**
  * The KTextEditor namespace contains all the public API that is required
  * to use the KTextEditor component. Using the KTextEditor interfaces is
@@ -252,7 +271,11 @@ public:
     /**
      * Function that is called to expand a variable in @p text.
      */
+#ifndef KTEXTEDITOR_USES_KTEStringView
     using ExpandFunction = QString (*)(const QStringView& text, KTextEditor::View* view);
+#else
+    using ExpandFunction = QString (*)(const KTEStringView& text, KTextEditor::View* view);
+#endif
 
     /**
      * Registers a variable called @p name for exact matches.
diff --git src/utils/kateglobal.cpp src/utils/kateglobal.cpp
index 283de62aa536c96e5cf1b28a2512de0d438e1b1b..3becb35dc0ea1a2b83c2fd42660d25d567c03f03 100644
--- src/utils/kateglobal.cpp
+++ src/utils/kateglobal.cpp
@@ -67,6 +67,18 @@
 #include <git2.h>
 #endif
 
+#ifdef KTEXTEDITOR_USES_KTEStringView
+#define QStringView KTEStringView
+
+QString KTEStringView::toString() const
+{
+    auto deepcopy = QString();
+    deepcopy.append(this);
+    return deepcopy;
+}
+
+#endif
+
 namespace {
 
 void registerVariables(KTextEditor::Editor * editor)
@@ -164,7 +176,11 @@ void registerVariables(KTextEditor::Editor * editor)
     });
 
     editor->registerVariableMatch(QStringLiteral("UUID"), i18n("Generate a new UUID."), [](const QStringView&, KTextEditor::View*) {
+#if QT_VERSION >= QT_VERSION_CHECK(5, 11, 0)
         return QUuid::createUuid().toString(QUuid::WithoutBraces);
+#else
+        return QUuid::createUuid().toString().remove(QLatin1Char('{')).remove(QLatin1Char('}'));
+#endif
     });
 }
 }
diff --git src/utils/katemacroexpander.cpp src/utils/katemacroexpander.cpp
index 364cf7801022bfbc1ec93bf216c9df7bf9c241c0..f3c8246b9a4a3bb5a79d422dfc6aa70b366c290f 100644
--- src/utils/katemacroexpander.cpp
+++ src/utils/katemacroexpander.cpp
@@ -21,6 +21,10 @@
 
 #include <KTextEditor/Editor>
 
+#ifdef KTEXTEDITOR_USES_KTEStringView
+#define QStringView KTEStringView
+#endif
+
 /**
  * Find closing bracket for @p str starting a position @p pos.
  */
diff --git src/utils/variable.cpp src/utils/variable.cpp
index 07690782da69ff50ef6041be8162664dcd47b35e..9a7c669b6443b5205eb5f1f1892abfd93a99dd7b 100644
--- src/utils/variable.cpp
+++ src/utils/variable.cpp
@@ -18,6 +18,10 @@
 */
 #include "variable.h"
 
+#ifdef KTEXTEDITOR_USES_KTEStringView
+#define QStringView KTEStringView
+#endif
+
 namespace KTextEditor
 {
 
diff --git src/utils/variable.h src/utils/variable.h
index 22d02348b86e58274286103dd03b094fae614d1d..f6ae7d9a9aab1b1ef6f156ffdd0c4a91189f8a70 100644
--- src/utils/variable.h
+++ src/utils/variable.h
@@ -23,6 +23,10 @@
 #include <QStringList>
 #include <QVariant>
 
+#if QT_VERSION < QT_VERSION_CHECK(5, 10, 0) && !defined(KTEXTEDITOR_USES_KTEStringView)
+#include "../include/ktexteditor/editor.h"
+#endif
+
 namespace KTextEditor
 {
     class View;
@@ -51,7 +55,11 @@ public:
      * Function that is called to expand a variable in @p text.
      * @param text
      */
+#ifndef KTEXTEDITOR_USES_KTEStringView
     using ExpandFunction = QString (*)(const QStringView& text, KTextEditor::View* view);
+#else
+    using ExpandFunction = QString (*)(const KTEStringView& text, KTextEditor::View* view);
+#endif
 
     /**
      * Constructor defining a Variable by its @p name, its @p description, and
@@ -94,7 +102,11 @@ public:
      *
      * @return the expanded variable.
      */
+#ifndef KTEXTEDITOR_USES_KTEStringView
     QString evaluate(const QStringView& prefix, KTextEditor::View * view) const;
+#else
+    QString evaluate(const KTEStringView& prefix, KTextEditor::View * view) const;
+#endif
 
 private:
     QString m_name;
