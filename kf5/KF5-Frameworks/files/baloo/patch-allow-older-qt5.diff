commit d1a289b4b94903d86a60efc7f1cdc55fd7364b54
Author: Albert Astals Cid <aacid@kde.org>
Date:   Mon Jan 7 00:26:27 2019 +0100

    REVERT
    Remove Qt 5.10 checks now that we require it as min version

diff --git src/file/modifiedfileindexer.cpp src/file/modifiedfileindexer.cpp
index 6ac9f822..b609b7ba 100644
--- src/file/modifiedfileindexer.cpp
+++ src/file/modifiedfileindexer.cpp
@@ -71,7 +71,11 @@ void ModifiedFileIndexer::run()
 
         DocumentTimeDB::TimeInfo timeInfo = tr.documentTimeInfo(fileId);
         bool mTimeChanged = timeInfo.mTime != fileInfo.lastModified().toSecsSinceEpoch();
+#if QT_VERSION >= QT_VERSION_CHECK(5,10,0)
         bool cTimeChanged = timeInfo.cTime != fileInfo.metadataChangeTime().toSecsSinceEpoch();
+#else
+        bool cTimeChanged = timeInfo.cTime != fileInfo.created().toSecsSinceEpoch();
+#endif
 
         if (!mTimeChanged && !cTimeChanged) {
             continue;
diff --git src/file/unindexedfileiterator.cpp src/file/unindexedfileiterator.cpp
index 4417874a..80f4b49e 100644
--- src/file/unindexedfileiterator.cpp
+++ src/file/unindexedfileiterator.cpp
@@ -93,6 +93,11 @@ bool UnIndexedFileIterator::shouldIndex(const QString& filePath)
     }
 
     DocumentTimeDB::TimeInfo timeInfo = m_transaction->documentTimeInfo(fileId);
+#if QT_VERSION >= QT_VERSION_CHECK(5,10,0)
+    auto fileMTime = fileInfo.metadataChangeTime().toSecsSinceEpoch();
+#else
+    auto fileMTime = fileInfo.created().toSecsSinceEpoch();
+#endif
     if ((timeInfo.mTime == 0) && (timeInfo.cTime == 0) && !m_transaction->hasDocument(fileId)) {
         m_mTimeChanged = true;
         m_cTimeChanged = true;
@@ -100,7 +105,7 @@ bool UnIndexedFileIterator::shouldIndex(const QString& filePath)
         if (timeInfo.mTime != fileInfo.lastModified().toSecsSinceEpoch()) {
             m_mTimeChanged = true;
         }
-        if (timeInfo.cTime != fileInfo.metadataChangeTime().toSecsSinceEpoch()) {
+        if (timeInfo.cTime != fileMTime) {
             m_cTimeChanged = true;
         }
     }
@@ -110,7 +115,7 @@ bool UnIndexedFileIterator::shouldIndex(const QString& filePath)
         // renamed, or when the xattrs (tags, comments, ...) change
         if (m_cTimeChanged) {
             qCDebug(BALOO) << filePath << "ctime changed:"
-                << timeInfo.cTime << "->" << fileInfo.metadataChangeTime().toSecsSinceEpoch();
+                << timeInfo.cTime << "->" << fileMTime;
             m_mimetype = QStringLiteral("inode/directory");
             return true;
         }
@@ -131,7 +136,7 @@ bool UnIndexedFileIterator::shouldIndex(const QString& filePath)
         qCDebug(BALOO) << filePath << "mtime/ctime changed:"
             << timeInfo.mTime << "/" << timeInfo.cTime << "->"
             << fileInfo.lastModified().toSecsSinceEpoch() << "/"
-            << fileInfo.metadataChangeTime().toSecsSinceEpoch();
+            << fileMTime;
         return true;
     }
 
diff --git src/tools/balooshow/main.cpp src/tools/balooshow/main.cpp
index 4419bc19..78f24de7 100644
--- src/tools/balooshow/main.cpp
+++ src/tools/balooshow/main.cpp
@@ -232,7 +232,11 @@ int main(int argc, char* argv[])
                         int propNum = prop.toInt(&ok);
                         QString value = word.mid(posOfNonNumeric + 1);
                         if (!ok) {
+#if QT_VERSION >= QT_VERSION_CHECK(5,10,0)
                             auto error = QString("malformed property term (bad index): '%1' in '%2'\n").arg(prop).arg(arrAsPrintable());
+#else
+                            auto error = QString("malformed property term (bad index): '%1' in '%2'\n").arg(prop.toString()).arg(arrAsPrintable());
+#endif
                             stream << errorPrefix.subs(error).toString();
                             continue;
                         }
