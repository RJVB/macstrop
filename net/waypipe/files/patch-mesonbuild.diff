diff --git a/meson.build b/meson.build
index 7d687c6..91154d2 100644
--- a/meson.build
+++ b/meson.build
@@ -3,7 +3,7 @@ project(
     'c',
     license: ['GPL3+', 'MIT/Expat'],
     meson_version: '>=0.56.0',
-    default_options: ['c_std=c11', 'warning_level=3', 'werror=true'],
+    default_options: ['c_std=c11', 'warning_level=3'],
     version: '0.10.3',
 )
 
@@ -28,7 +28,7 @@ version = '"@0@"'.format(raw_version)
 if get_option('build_rs')
     cargo = find_program('cargo', native: true)
     sh = find_program('sh', native: true)
-    objcopy = find_program('objcopy', native: true)
+    #objcopy = find_program('objcopy', native: true)
 
     # Because meson and cargo interact badly, option implementation and dependency resolution are deferred to cargo
     # However, to 'autodetect' what features are available, we duplicate some of the build logic
diff --git a/waypipe-c/meson.build b/waypipe-c/meson.build
index b9ab720..048561a 100644
--- a/waypipe-c/meson.build
+++ b/waypipe-c/meson.build
@@ -40,10 +40,12 @@ else
     has_dmabuf = false
 endif
 pthreads = dependency('threads')
-rt = cc.find_library('rt')
 # XXX dtrace -G (Solaris, FreeBSD, NetBSD) isn't supported yet
 is_linux = host_machine.system() == 'linux'
 is_darwin = host_machine.system() == 'darwin'
+if not is_darwin
+    rt = cc.find_library('rt')
+endif
 if (is_linux or is_darwin) and get_option('with_systemtap') and cc.has_header(
     'sys/sdt.h',
 )
@@ -138,8 +140,11 @@ waypipe_source_files = [
 ]
 waypipe_deps = [
     pthreads,  # To run expensive computations in parallel
-    rt,  # For shared memory
 ]
+if not is_darwin
+    # for shared memory
+    waypipe_deps += [rt]
+endif
 if config_data.has('HAS_DMABUF')
     # General GPU buffer creation, aligned with dmabuf proto
     waypipe_deps += [libgbm]
