diff --git a/waypipe-c/mainloop.c b/waypipe-c/mainloop.c
index 454e37c..e834720 100644
--- a/waypipe-c/mainloop.c
+++ b/waypipe-c/mainloop.c
@@ -36,12 +36,20 @@
 #include <sys/uio.h>
 #include <unistd.h>
 
+#undef CMSG_ALIGN
+#undef CMSG_SPACE
+#define CMSG_ALIGN(len) (((len) + sizeof (size_t) - 1) \
+                & (size_t) ~(sizeof (size_t) - 1))
+#define CMSG_SPACE(len) (CMSG_ALIGN (len) \
+                + CMSG_ALIGN (sizeof (struct cmsghdr)))
+
 // The maximum number of fds libwayland can recvmsg at once
 #define MAX_LIBWAY_FDS 28
 static ssize_t iovec_read(
 		int conn, char *buf, size_t buflen, struct int_window *fds)
 {
-	char cmsgdata[(CMSG_LEN(MAX_LIBWAY_FDS * sizeof(int32_t)))] = {0};
+	char cmsgdata[(CMSG_LEN(MAX_LIBWAY_FDS * sizeof(int32_t)))];
+	memset(cmsgdata, 0, sizeof(cmsgdata));
 	struct iovec the_iovec;
 	the_iovec.iov_len = buflen;
 	the_iovec.iov_base = buf;
diff --git a/waypipe-c/test/fuzz_hook_ext.c b/waypipe-c/test/fuzz_hook_ext.c
index aea177b..f8b3490 100644
--- a/waypipe-c/test/fuzz_hook_ext.c
+++ b/waypipe-c/test/fuzz_hook_ext.c
@@ -42,6 +42,13 @@
 
 #include <pthread.h>
 
+#undef CMSG_ALIGN
+#undef CMSG_SPACE
+#define CMSG_ALIGN(len) (((len) + sizeof (size_t) - 1) \
+                & (size_t) ~(sizeof (size_t) - 1))
+#define CMSG_SPACE(len) (CMSG_ALIGN (len) \
+                + CMSG_ALIGN (sizeof (struct cmsghdr)))
+
 struct copy_setup {
 	int conn;
 	int wayl;
diff --git a/waypipe-c/test/fuzz_hook_int.c b/waypipe-c/test/fuzz_hook_int.c
index f3058b3..60d8f7b 100644
--- a/waypipe-c/test/fuzz_hook_int.c
+++ b/waypipe-c/test/fuzz_hook_int.c
@@ -42,6 +42,13 @@
 
 #include <pthread.h>
 
+#undef CMSG_ALIGN
+#undef CMSG_SPACE
+#define CMSG_ALIGN(len) (((len) + sizeof (size_t) - 1) \
+                & (size_t) ~(sizeof (size_t) - 1))
+#define CMSG_SPACE(len) (CMSG_ALIGN (len) \
+                + CMSG_ALIGN (sizeof (struct cmsghdr)))
+
 struct copy_setup {
 	int conn;
 	int wayl;
diff --git a/waypipe-c/util.c b/waypipe-c/util.c
index 8b4bce9..33f39a6 100644
--- a/waypipe-c/util.c
+++ b/waypipe-c/util.c
@@ -45,6 +45,13 @@
 #include <linux/vm_sockets.h>
 #endif
 
+#undef CMSG_ALIGN
+#undef CMSG_SPACE
+#define CMSG_ALIGN(len) (((len) + sizeof (size_t) - 1) \
+                & (size_t) ~(sizeof (size_t) - 1))
+#define CMSG_SPACE(len) (CMSG_ALIGN (len) \
+                + CMSG_ALIGN (sizeof (struct cmsghdr)))
+
 int parse_uint32(const char *str, uint32_t *val)
 {
 	if (!str[0] || (str[0] == '0' && str[1])) {
