# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           conflicts_build 1.0
platform darwin {
    PortGroup       cxx11 1.1
}

name                audacious-core
subport             audacious-core-devel {}
set real_name       audacious

# Please keep audacious, audacious-core and audacious-plugins synchronized.
version             3.8

license             BSD
categories          multimedia
platforms           darwin
maintainers         ionic
homepage            http://www.audacious-media-player.org/
description         Audacious is an advanced audio player.
long_description    ${description} It is free, lightweight, based on GTK3, \
                    runs on Linux and many other *nix platforms. The player focuses on audio quality \
                    and supports a wide range of audio codecs. \
                    Its advanced audio playback engine is considerably more powerful than GStreamer. \
                    Audacious is a fork of Beep Media Player (BMP), which itself forked from XMMS.

# Maintainer-only helper for testing changes quickly and easily.
#fetch.type          git
#git.url             git://github.com/Ionic/${real_name}
#git.branch          ${real_name}-${version}-buildfix

master_sites        http://distfiles.audacious-media-player.org

if {${subport} eq "${name}-devel"} {
    version         3.9.128
    fetch.type      git
    # we use my fork while my patches are being upstreamed.
    git.url         git://github.com/RJVB/${real_name}
    # master audacious-3.9-91-g148f6ef9d, RJVB audacious-3.9-128-g6599e7de6
    git.branch      6599e7de6f343312d72c4309e504be6cc7d587ab
    worksrcdir      ${name}-git
    distname        ${name}-git
    conflicts-append ${name} ${real_name}-plugins
} else {
    revision        0
    distname        ${real_name}-${version}
    use_bzip2       yes
    checksums       rmd160  63abcb3536a1bc88a8c3b9674d9d46b7519ec48c \
                    sha256  ffe8c0661dcb999598887e8ee05cd24faa7939086f5a8183fdba6210a95c4a71
    conflicts-append ${name}-devel ${name}-plugins-devel
}

# make sure there's no other major version installed
proc sanitise_build_env {first args} {
    global version
    set branch [join [lrange [split ${version} .] 0 1] .]
    set args [linsert $args[set list {}] 0 ${first}]
    foreach name ${args} {
        if {![catch {set installed [lindex [registry_active ${name}] 0]}]} {
            set _version [lindex $installed 1]
            set _branch [join [lrange [split ${_version} .] 0 1] .]
            if {[vercmp $branch $_branch] != 0} {
                ui_warn "${name} v${_version} cannot be active to build v${version}"
                registry_deactivate_composite ${name} "" [list ports_nodepcheck 1]
            } else {
                ui_debug "${name} v${_version}/${_branch} doesn't bite v${version}/${branch}"
            }
        } else {
            ui_debug "${name} not active or not installed"
        }
    }
}

pre-configure {
    sanitise_build_env ${name} ${name}-devel
}
pre-build {
    sanitise_build_env ${name} ${name}-devel
}

universal_variant   no
build.post_args     V=1

if {${subport} ne "${name}-devel"} {
    patchfiles      patch-update-buildsys-and-make-verbose.diff \
                    patch-drop-libc++.diff
} else {
    patchfiles      patch-verbose-build.diff
}

depends_lib         port:libiconv \
                    port:gettext \
                    path:lib/pkgconfig/glib-2.0.pc:glib2
if {${os.platform} eq "darwin"} {
    depends_lib-append \
                    path:lib/pkgconfig/dbus-1.pc:dbus
} else {
    conflicts_build-append \
                    gettext-dev
}

# Note: rpath is required on OS X.
configure.args      --enable-nls \
                    --enable-rpath \
                    --enable-dbus \
                    --disable-qt \
                    --disable-gtk \
                    --disable-valgrind

if {![file exists ${configure.dir}/config.log]} {
    use_autoreconf  yes
}
autoreconf.cmd      ./autogen.sh
autoreconf.args

depends_build       path:bin/pkg-config:pkgconfig \
                    path:bin/aclocal:automake \
                    path:bin/autom4te:autoconf

variant qt5 description {Add Qt5 support} {}
if {[variant_isset qt5]} {
    PortGroup   qt5 1.0

    if {${subport} eq ${name}} {
        patchfiles-append   patch-qt5-improvements.diff \
                            patch-qt5-mainloop-timer.diff \
                            patch-qt5-playback-qthread.diff
    } else {
#         patchfiles-append   devel/patch-qt5-improvements.diff \
#                             devel/patch-qt5-mainloop-timer.diff \
#                             devel/patch-qt5-playback-qthread.diff \
#                             devel/patch-qt-really-native-menubar.diff \
#                             devel/patch-qt-fontchoices.diff \
#                             devel/patch-qt-prefswin-improvements.diff \
#                             devel/patch-qt-embedded-resource.diff
    }

    if {[tbool qt5.using_kde]} {
        # activate the qt5-kde patch that lets QStandardPaths use XDG-compliant locations;
        # this increases the chance that the application behaves the same way it would
        # as when using the GTk interface.
        configure.cppflags-append \
                            -DQT_USE_EXTSTANDARDPATHS -DQT_EXTSTANDARDPATHS_ALT_DEFAULT=true
    }

    configure.args-replace  --disable-qt \
                            --enable-qt

    platform darwin {
        PortGroup   app 1.0
        post-extract {
            # install the icon resource generated with ksvg2icns
            system "bzip2 -dv < ${filespath}/audacious.icns.bz2 > ${worksrcpath}/images/audacious.icns"
        }

        set applications_dir ${qt_apps_dir}
        app.name            Audacious
        app.executable      ${build.dir}/src/audacious/audacious
        app.icon            ${worksrcpath}/images/audacious.icns
        post-destroot {
            file delete -force ${destroot}${prefix}/bin/audacious
            if {[info proc qt5.add_app_wrapper] ne ""} {
                qt5.add_app_wrapper audacious Audacious
            }
        }
    }
}

variant gtk2 conflicts gtk3 description {Add GTK2 support} {
    platform darwin {
        depends_lib-append  path:lib/pkgconfig/gtk-2.0.pc:gtk2
    }

    configure.args-replace  --disable-gtk \
                            --enable-gtk
}

if {${subport} eq ${name}} {
    variant gtk3 conflicts gtk2 description {Add GTK3 support} {
        depends_lib-append  path:lib/pkgconfig/gtk-3.0.pc:gtk3

        patchfiles-append   patch-gtk3.diff

        configure.args-replace \
                            --disable-gtk \
                            --enable-gtk
    }
}

# Need either one of gtk2, gtk3 or Qt5 to have a GUI. Default to gtk2, which is preferred by upstream.
if {![variant_isset gtk2] && ![variant_isset gtk3] && ![variant_isset qt5]} {
    default_variants-append +gtk2
}

livecheck.type      regex
livecheck.url       ${master_sites}
livecheck.regex     "${real_name}-(\\d+(?:\\.\\d+)*)${extract.suffix}"
