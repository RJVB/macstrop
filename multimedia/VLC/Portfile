# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

variant official description {install from the official installer DMG} {}
default_variants    +official

if {![variant_isset official]} {

PortGroup           compiler_blacklist_versions 1.0
PortGroup           active_variants 1.1

    if {[file exists ${prefix}/etc/macports/locales.tcl]} {
        PortGroup   locale_select 1.0
    }

    # VLC-2.1 and later are x86_64-only: https://trac.videolan.org/vlc/ticket/8161
    supported_archs x86_64
    universal_variant no
} else {
    supported_archs x86_64 arm64
    universal_variant yes
}

name                VLC

categories          multimedia devel
maintainers         gmail.com:rjvbertin openmaintainer

description         VLC is a cross-platform media player and streaming server
long_description    VLC media player is a highly portable multimedia player for \
                    various audio and video formats (MPEG-1, MPEG-2, MPEG-4, DivX, \
                    mp3, ogg, ...) as well as DVDs, VCDs, and various streaming protocols. \
                    It can also be used as a server to stream in unicast or multicast \
                    in IPv4 or IPv6 on a high-bandwidth network.

homepage            https://www.videolan.org

# NB: currently there are no Mac builds of the current 3.0.17.4 release ?!
version             3.0.17.3
# NB: remove the following line when that situation changes!
livecheck.version   3.0.17.4
license             GPL-2

platforms           darwin

# make libVLC2 and libVLC(3) co-installable. Do not yet apply a suffix
# (--program-suffix=3).
set vlcprefix       ${prefix}/libexec/vlc3

master_sites        https://download.videolan.org/pub/videolan/vlc/${version}/:source
distfiles           vlc-${version}.tar.xz:source

checksums           vlc-${version}.tar.xz \
                    rmd160  35a3ccfad774284eda2f286903f89654467fb607 \
                    sha256  6f7e90ef8973d31d96de64db817173e345150829717a94084b1bb8321cde2014
#                     size    26393440
dist_subdir         VLC

#### new installation approach:
if {[variant_isset official]} {

if {${os.platform} eq "darwin" && ${os.major} < 11} {
    replaced_by VLC2
    PortGroup   obsolete 1.0
    # given the Portfile design it's easier to shunt the entire patch phase
    # rather than trying to keep the patchfiles list empty.
    patch       {}
}
if {${os.platform} eq "darwin" && ${os.major} < 16} {
   depends_build-append port:cctools
}

master_sites-append https://download.videolan.org/pub/videolan/vlc/${version}/macosx:installer
if {[variant_exists universal] && [variant_isset universal]} {
        set dmg     vlc-${version}-universal.dmg
        checksums-append \
                    ${dmg} \
                    rmd160  08924e84e90b13e7597024003278de53a76a0f19 \
                    sha256  cff4e9d41ced0e29f88b75cb683a8fd5c788a9492047390d2b8a3ca7e8e37456
#                     size    53855475
} else {
    switch ${build_arch} {
        "x86_64" {
            set dmg vlc-${version}-intel64.dmg
            checksums-append \
                    ${dmg} \
                    rmd160  2dbc736d5feade8469235745a0e5fd65e4581b3f \
                    sha256  cca267f2c51ae568e02f3b4d8a6adba87b2bde5f011a2b87c595c102d89f11d8
#                     size    53855475
        }
        "arm64" {
            set dmg vlc-${version}-arm64.dmg
            checksums-append \
                    ${dmg} \
                    rmd160  b986b43056937464b33a9e8e9481ce4d38951ea5 \
                    sha256  cdee78a660c88758cbaa3424948dfbdb7c969824be1becfcbbe2aef725655200
#                     size    48370499
            extract.only \
                    vlc-${version}-arm64.dmg
        }
    }
}
distfiles-append    ${dmg}:installer
extract.only        ${dmg}
use_dmg             yes
post-extract {
    ui_msg "--->    Extracting sources (partial)"
    system -W ${workpath} "tar -xf ${distpath}/vlc-${version}.tar.xz vlc-${version}/include"
}

use_configure       no
build               {}

destroot {
    xinstall -m 755 -d ${destroot}${applications_dir}
    system "ditto --rsrc ${workpath}/VLC-${version}/VLC.app ${destroot}${applications_dir}/VLC3.app"
    xinstall -m 755 -d ${destroot}${vlcprefix}/lib/vlc
    xinstall -m 755 -d ${destroot}${vlcprefix}/include/vlc/plugins
    ln -s ${applications_dir}/VLC3.app/Contents/MacOS/plugins ${destroot}${vlcprefix}/lib/vlc
    ln -s ${applications_dir}/VLC3.app/Contents/MacOS/share/lua ${destroot}${vlcprefix}/lib/vlc
    foreach l [glob ${destroot}${applications_dir}/VLC3.app/Contents/MacOS/lib/*.dylib] {
        ln -s [string map [list ${destroot} ""] ${l}] ${destroot}${vlcprefix}/lib
    }
    foreach l [glob ${destroot}${applications_dir}/VLC3.app/Contents/MacOS/include/vlc/*.h] {
        ln -s [string map [list ${destroot} ""] ${l}] ${destroot}${vlcprefix}/include/vlc
    }
    foreach l [glob ${workpath}/vlc-${version}/include/*.h] {
        xinstall -m 644 ${l} ${destroot}${vlcprefix}/include/vlc/plugins/
    }
}

post-destroot {
    xinstall -m 755 -d ${destroot}${vlcprefix}/lib/pkgconfig
    foreach l {libvlc.pc vlc-plugin.pc} {
        xinstall -m 644 ${filespath}/${l} ${destroot}${vlcprefix}/lib/pkgconfig
        reinplace "s|@PREFIX@|${prefix}|g" ${destroot}${vlcprefix}/lib/pkgconfig/${l}
    }
    reinplace "s|\$\{VERSION\}|${version}|g" ${destroot}${vlcprefix}/lib/pkgconfig/vlc-plugin.pc
    reinplace "s|@VERSION@|${version}|g" ${destroot}${vlcprefix}/lib/pkgconfig/libvlc.pc
    system "echo \"#!/bin/sh\nexec \\\"${applications_dir}/VLC3.app/Contents/MacOS/VLC\\\" \\\"\\\$\@\\\"\" > ${destroot}${prefix}/bin/vlc3"
    system "chmod 755 ${destroot}${prefix}/bin/vlc3"
    if {${os.major} < 16} {
        # libmacosx_plugin.dylib links to the MediaPlayer framework, which is 10.12+ . For some reason this
        # doesn't cause runtime failures on earlier OS versions but `port rev-upgrade` will balk.
        # Since this dependency is apparently not relevant, replace it with one on an existing framework:
        system "install_name_tool -change /System/Library/Frameworks/MediaPlayer.framework/Versions/A/MediaPlayer \
            /System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox \
            ${destroot}${applications_dir}/VLC3.app/Contents/MacOS/plugins/libmacosx_plugin.dylib"
    }
    if {[variant_exists universal] && [variant_isset universal] && ${os.major} < 15} {
        # idem for /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage in a +universal install
        system "install_name_tool -change /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage \
            /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics \
            ${destroot}${applications_dir}/VLC3.app/Contents/MacOS/plugins/libci_filters_plugin.dylib"
    }
}

} else {
#### obsolete version that builds everything
use_xz              yes

subport lib${name} {
    description     the core engine and interface to VLC's multimedia framework
    long_description \
                    libVLC is the core engine and the interface to the multimedia \
                    framework on which VLC media player is based.  It allows developers \
                    to create a wide range of multimedia applications using the VLC features.
#     conflicts       ${name} VLC2
    conflicts       ${name}
    homepage        https://www.videolan.org/vlc/libvlc.html
    # libVLC builds on 10.9 (Darwin 13)
    if {${os.platform} eq "darwin" && ${os.major} < 13} {
        replaced_by libVLC2
        PortGroup   obsolete 1.0
        patch       {}
    }
}

if {${subport} eq ${name}} {
    if {${os.platform} eq "darwin" && ${os.major} < 15} {
        replaced_by VLC2
        PortGroup   obsolete 1.0
        # given the Portfile design it's easier to shunt the entire patch phase
        # rather than trying to keep the patchfiles list empty.
        patch       {}
    }
#     conflicts       lib${name} libVLC2
    conflicts       lib${name}
}

### not to be committed in the mainstream port ###
platform darwin {
    # Enable HFS compression of the workdir if the compress_workdir PortGroup is installed
    if {[file exists ${filespath}/../../../_resources/port1.0/group/compress_workdir-1.0.tcl]} {
        PortGroup   compress_workdir 1.0
    }
}
##################################################

version             3.0.11 ; revision 1
license             GPL-2

platforms           darwin

master_sites        https://download.videolan.org/pub/videolan/vlc/${version}/
dist_subdir         VLC
distname            vlc-${version}
use_xz              yes

checksums           rmd160  a9c6a8796d0d86a71b738d4d41c377cd03d0e4ce \
                    sha256  3e94a1acf33445e9da15d528aa48657aa26b912eaa2656b403d43860a8834919
#                     size    26041744

depends_build       port:pkgconfig \
                    port:realpath

depends_lib-append  path:lib/libavcodec.diff:ffmpeg \
                    port:a52dec \
                    port:avahi \
                    port:bzip2 \
                    port:faad2 \
                    port:flac \
                    port:fluidsynth \
                    port:fontconfig \
                    port:freetype \
                    port:fribidi \
                    port:gettext \
                    path:lib/pkgconfig/glib-2.0.pc:glib2 \
                    port:gmp \
                    port:gnutls \
                    path:include/turbojpeg.h:libjpeg-turbo \
                    port:lame \
                    port:libass \
                    port:libbluray \
                    port:libcddb \
                    port:libdc1394 \
                    port:libdca \
                    port:libdvbpsi \
                    port:libdvdnav \
                    port:libdvdread \
                    port:libebml \
                    port:libgcrypt \
                    port:libgpg-error \
                    port:libiconv \
                    port:libid3tag \
                    port:libidn \
                    port:libmad \
                    port:libmatroska \
                    port:libmodplug \
                    port:libmpcdec \
                    port:libmpeg2 \
                    port:libmtp \
                    port:libogg \
                    port:libopus \
                    port:libpng \
                    port:libproxy \
                    port:libsamplerate \
                    port:libsdl \
                    port:libsdl_image \
                    port:libsndfile \
                    port:libssh2 \
                    port:libtheora \
                    port:libupnp \
                    port:libusb \
                    port:libvorbis \
                    port:libvpx \
                    port:libxml2 \
                    port:live555 \
                    port:ncurses \
                    port:nettle \
                    port:openjpeg15 \
                    path:lib/libssl.dylib:openssl \
                    port:orc \
                    port:p11-kit \
                    port:readline \
                    port:schroedinger \
                    port:speex \
                    port:taglib \
                    port:tiff \
                    port:twolame \
                    port:x264 \
                    port:x265
depends_run-append  port:libaacs \
                    port:libbdplus

configure.pre_args-replace \
                    --prefix=${prefix} \
                    --prefix=${vlcprefix}
configure.args-append \
                    --bindir=${prefix}/bin
### not to be committed in the mainstream port ###
if {[variant_isset langselect]} {
    langselect_dirs_dir ${destroot}${vlcprefix}/share/locale
}
##################################################

platform darwin {
    # VLC calls ibtools which isn't part of the commandline tools
    use_xcode yes
    if {${os.major} < 13} {
        pre-fetch {
            ui_error "${name} ${version} requires Mac OS X 10.9 or greater."
            return -code error "incompatible Mac OS X version"
        }
    } elseif {${os.major} == 13} {
        macosx_deployment_target 10.10
        configure.args-append \
                    --with-macosx-version-min=10.9
        if {![catch {exec xcrun --show-sdk-path -sdk macosx10.10} result]} {
            ui_debug "Using SDK macosx10.10 : ${result}"
            configure.args-append \
                    --with-macosx-sdk=${result}
        }
        patchfiles-append \
                    patch-build-on-darwin13.diff
    }
    if {${os.major} < 16} {
        post-extract {
            xinstall -m 755 -d ${worksrcpath}/include/os
            xinstall -m 755 ${filespath}/lock.h ${worksrcpath}/include/os/lock.h
        }
        # make the code build on 10.11 and earlier
        patchfiles-append \
                    patch-build-on-pre-1012.diff
    }
    if {${os.major} < 18} {
        # make the code build on 10.13 and earlier
        patchfiles-append \
                    patch-build-on-pre-1014.diff
    }
}

depends_lib-append  port:lua

# avoid attempting the build with clang 4.0 and earlier (clang 4 should have @available but
# I no longer have it installed to check that).
compiler.blacklist-append \
                    *gcc* {clang < 902} macports-clang-3.3 macports-clang-3.4 macports-clang-3.5 \
                     macports-clang-3.6  macports-clang-3.7  macports-clang-3.8 macports-clang-3.9  \
                     macports-clang-4.0
platform darwin {
    # whitelist tested compilers in such a way that if the user has more
    # than one installed, the newest version will be picked.
    foreach clv {5.0 6.0 7.0 8.0 9.0 10} {
        if {[file exists ${prefix}/bin/clang-mp-${clv}]} {
            compiler.whitelist-prepend macports-clang-${clv}
        }
        compiler.fallback-prepend macports-clang-${clv}
    }
}

patchfiles-append   configure.ac-no-arch.patch \
                    patch-soundfont-path.diff

if {![info exists replaced_by]} {
    post-patch {
        if {[string match *clang* ${configure.cxx}] && ${configure.cxx_stdlib} == "libc++"} {
            reinplace "s:-lstdc\+\+:-lc++:" \
                ${worksrcpath}/modules/access/Makefile.am
        }

        reinplace "s|@PREFIX@|${prefix}|g" ${worksrcpath}/modules/codec/fluidsynth.c
    }
}

configure.post_args-append "|& tee -a ${workpath}/.macports.${subport}@${version}.configure.log'"
pre-configure {
    set cmd [join "${configure.cmd} ${configure.pre_args} ${configure.args}"]
    configure.pre_args-prepend "-cf '${configure.cmd} "
    configure.cmd "/bin/csh"
    ui_debug "configure command set to `cmd=${configure.cmd} pre_args=${configure.pre_args} args=${configure.args} post_args=${configure.post_args}`"
    system "echo '## ${cmd}' > ${workpath}/.macports.${subport}.configure.log"
}

# do autoreconf only the first time around
use_autoreconf      [expr ![file exists ${worksrcpath}/config.status]]
autoreconf.cmd      ./bootstrap
autoreconf.pre_args
autoreconf.args
depends_build-append port:libtool port:autoconf port:automake
configure.env-append \
                    "CPP=${configure.cc} -E" \
                    "CXXCPP=${configure.cxx} -E" \
                    "MATROSKA_CFLAGS=${prefix}/include/ebml" \
                    "MATROSKA_LIBS=-lmatroska -lebml"
build.args-append   DESTDIR=${worksrcpath}/dest_ignore V=1 -k

# gl.c:121:3: error: Platform not recognized.
configure.cppflags-append -D__unix__=1 -Wno-unknown-pragmas

# live555 is installed to a weird location
configure.cppflags-append -I${prefix}/lib/live/liveMedia/include

build.target        all

if {${subport} ne "lib${name}"} {
    # The VLC.app target does not obey DESTDIR and tries to copy a
    # non-existing folder.
    destroot.destdir \
                    prefix=${destroot}${vlcprefix}
    destroot.target VLC.app
    # Don't try to install the (missing) shared/hrtfs folder.
    # That folder is only used by the spatialaudio plugin which
    # we don't build at the moment.
    patchfiles-append \
                    patch-no-hrtfs.diff
} else {
    destroot.target install
}

# Other
configure.args-append \
                    --with-contrib=${worksrcpath}/contrib \
                    --disable-debug --disable-update-check --enable-gnutls \
                    --disable-notify --disable-dbus --enable-lua \
                    --disable-sparkle --disable-chromecast \
                    --disable-secret

# Input Plugins
configure.args-append \
                    --enable-dvdnav --enable-dvdread --disable-smbclient \
                    --disable-realrtsp \
                    --disable-freerdp --disable-opencv --enable-sftp

# Mux/Demux Plugins
configure.args-append \
                    --enable-dvbpsi --enable-ogg \
                    --enable-mod --enable-mpc --disable-shout

# Codec Plugins
configure.args-append \
                    --enable-a52 --enable-faad --enable-flac --enable-live555 \
                    --enable-opus --enable-vorbis --enable-ogg --enable-mad --enable-libass \
                    --enable-dca --enable-png --enable-twolame \
                    --enable-speex --enable-theora --enable-x264 --enable-x265 --enable-postproc \
                    --disable-gst-decode --enable-avcodec --enable-avformat --enable-swscale \
                    --enable-fluidsynth --enable-schroedinger --enable-vpx

# Video Plugins. We do our best to deactivate X11 and disable its auto-detection by
# claiming the headers and libs are somewhere they're not.
configure.args-append \
                    --disable-caca --enable-sdl-image \
                    --without-x --disable-xcb --disable-xvideo \
                    --x-includes=${destroot} --x-libraries=${destroot} \
                    --enable-freetype --enable-fontconfig --enable-fribidi \
                    --disable-svg --disable-svgdec --disable-wayland

# Audio Plugins
configure.args-append \
                    --disable-jack \
                    --enable-samplerate \
                    --disable-pulse \
                    --disable-chromaprint

# Interface Plugins
configure.args-append \
                    --disable-macosx \
                    --disable-vlc \
                    --disable-qt \
                    --enable-ncurses \
                    --disable-skins2 \
                    --disable-vnc

# Visualisations and Video Filter Plugins
configure.args-append \
                    --disable-goom

# Service Discovery Plugins
configure.args-append \
                    --enable-upnp

# 20150209: Jack really would require a newer variant than what's currently in MacPorts
variant jack description {Enable jack plugin for audio output} {
    depends_lib-append      port:jack port:portaudio
    configure.args-delete   --disable-jack
    configure.args-append   --enable-jack
}

variant dbus description {Enable DBus support} {
    depends_lib-append      port:dbus
    configure.args-replace  --disable-dbus --enable-dbus
}

variant svg description {Enable SVG rendering and decoding support} {
    depends_lib-append      port:librsvg
    configure.args-replace  --disable-svg --enable-svg
    configure.args-replace  --disable-svgdec --enable-svgdec
}

variant shout description {Enable Shoutcast/Icecast streaming output support} {
    depends_lib-append      port:libshout2
    configure.args-replace  --disable-shout --enable-shout
}

variant smb description {Enable Samba 3 input support} {
    ### RJVB: temporary workaround to account for port:samba4
    depends_lib-append      path:bin/smbclient:samba3
    configure.args-replace  --disable-smbclient --enable-smbclient
    configure.ldflags-append    -L${prefix}/lib/samba3
}

variant pulse description {Enable PulseAudio support} {
    depends_lib-append      port:pulseaudio
    configure.args-replace  --disable-pulse --enable-pulse
}

variant x11 {
    depends_lib-append \
        port:xorg-libX11 \
        port:xorg-libXau \
        port:xorg-libXdmcp \
        port:xorg-libXext \
        port:xorg-libXrandr \
        port:xorg-libxcb \
        port:xrender \
        port:XviD \
        port:mesa \
        port:xorg-libXinerama \
        port:xorg-libXv \
        port:xorg-libXxf86vm \
        port:xorg-xcb-util \
        port:xorg-xcb-util-keysyms

    configure.args-delete   --without-x --disable-xvideo --disable-xcb \
                            --x-includes=${destroot} --x-libraries=${destroot}
    configure.args-append   --with-x --enable-xvideo --enable-xcb
}

variant quartz {
    depends_lib-delete      port:libsamplerate
    depends_lib-append      port:BGHUDAppKit

    patchfiles-append       patch-vlc-for-macports.diff

    configure.args-delete   --enable-samplerate \
                            --disable-realrtsp
    if {${subport} ne "lib${name}"} {
        configure.args-replace  --disable-macosx --enable-macosx
        configure.args-replace  --disable-vlc --enable-vlc
    }
    # taken from VLC's own configure.sh script for OS X:
    configure.args-append   --disable-samplerate \
                            --enable-merge-ffmpeg \
                            --enable-realrtsp
}

# FreeRDP currently doesn't build with CMake >= 3.1 (#47389)
variant freerdp description {Build the FreeRDP support; currently dysfunctional} {
    depends_lib-append          port:FreeRDP
    # access/rdp.c:45:11: fatal error: 'freerdp/version.h' file not found
    configure.cppflags-append   -DFREERDP_INTERFACE_VERSION \
                                -DFREERDP_VERSION_MAJOR=1 \
                                -DFREERDP_VERSION_MINOR=1
    configure.args-replace      --disable-freerdp --enable-freerdp
}

variant chromecast description {Enable ChromeCast support} {
    depends_lib-append      path:bin/protoc:protobuf3-cpp
    configure.args-replace  --disable-chromecast \
                            --enable-chromecast
}

variant huge \
    requires jack shout svg chromecast \
    description {Enable all variants except quartz, smb, freerdp and x11} {}

if {${subport} ne "lib${name}"} {
    variant full \
        requires huge quartz smb \
        description {Enable all variants except x11 (and except freerdp, currently)} {}
} else {
    variant full \
        requires huge quartz smb \
        description {Enable all variants except x11 (and except freerdp, currently)} {}
}

patchfiles-append           patch-for-lua53.diff

platform darwin {
    default_variants-append +quartz
    if {${os.major} <= 15} {
        default_variants-append +qtkit
    }

    patchfiles-append       patch-use-NSGetEnviron.diff \
                            patch-no-@rpath.diff

    if {![info exists replaced_by]} {
        post-patch {
            reinplace "/Sparkle.framework/d" \
                ${worksrcpath}/extras/package/macosx/vlc.xcodeproj/project.pbxproj
            reinplace "/SDKROOT/d" \
                ${worksrcpath}/extras/package/macosx/vlc.xcodeproj/project.pbxproj
            reinplace "/Growl.framework/d" \
                ${worksrcpath}/extras/package/macosx/package.mak

            reinplace "s:LD_LIBRARY_PATH:DYLD_LIBRARY_PATH:g" \
                ${worksrcpath}/Makefile.am

            if {![file exists ${worksrcpath}/contrib/BGHUDAppKit.framework]} {
                ln -s ${frameworks_dir}/BGHUDAppKit.framework ${worksrcpath}/contrib/BGHUDAppKit.framework
            }

            # To trick configure
            file mkdir "${worksrcpath}/contrib/lib"
        }
    }

    post-destroot {
        file delete {*}[glob ${destroot}${vlcprefix}/lib/vlc/plugins/*/*.la]

        if {[variant_isset quartz]} {
            if {${subport} ne "lib${name}"} {
                copy ${worksrcpath}/VLC.app ${destroot}${applications_dir}/VLC.app

                # These are already in ${prefix}, so we don't need to bundle them as well
                delete ${destroot}${applications_dir}/VLC.app/Contents/Frameworks
                delete ${destroot}${applications_dir}/VLC.app/Contents/lib

                # There's no need to install these into the bundle and the prefix
                delete ${destroot}${applications_dir}/VLC.app/Contents/MacOS/include
                delete ${destroot}${applications_dir}/VLC.app/Contents/MacOS/lib
                delete ${destroot}${applications_dir}/VLC.app/Contents/MacOS/plugins
                delete ${destroot}${applications_dir}/VLC.app/Contents/MacOS/share/locale
                delete ${destroot}${applications_dir}/VLC.app/Contents/MacOS/share/lua

                # http://trac.macports.org/ticket/35131
                xinstall -m 755 -d ${destroot}${applications_dir}/VLC.app/Contents/MacOS/lib
                foreach l [glob -nocomplain ${destroot}${vlcprefix}/lib/*] {
                    ln -s ${vlcprefix}/lib/[file tail ${l}] ${destroot}${applications_dir}/VLC.app/Contents/MacOS/lib
                }
                ln -s ${vlcprefix}/lib/vlc/plugins ${destroot}${applications_dir}/VLC.app/Contents/MacOS/plugins
                ln -s ${vlcprefix}/lib/vlc/lua ${destroot}${applications_dir}/VLC.app/Contents/MacOS/share/lua
                foreach d [glob -nocomplain ${destroot}${vlcprefix}/share/locale/*] {
                    set locale [file tail ${d}]
                    set ldir ${destroot}${applications_dir}/VLC.app/Contents/MacOS/share/locale/${locale}/LC_MESSAGES
                    xinstall -m 755 -d ${ldir}
                    foreach m [glob -nocomplain ${d}/LC_MESSAGES/*] {
                        ln -s ${vlcprefix}/share/locale/${locale}/LC_MESSAGES/[file tail ${m}] ${ldir}/
                    }
                }

                # the vlc executable needs to be started with a full path to the app bundle executable
                # or else the Mac OS X interface will hang beyond even a ^C or ^\ :
                move ${destroot}${prefix}/bin/vlc ${destroot}${prefix}/bin/vlc.exe
                system "echo \"#!/bin/sh\nexec \\\"${applications_dir}/VLC.app/Contents/MacOS/VLC\\\" \\\"\\\$\@\\\"\" > ${destroot}${prefix}/bin/vlc"
                system "chmod 755 ${destroot}${prefix}/bin/vlc"
            } else {
                delete ${destroot}${prefix}/bin
                delete ${destroot}${vlcprefix}/share/applications
                delete ${destroot}${vlcprefix}/share/man
            }
        }
        reinplace "s|prefix=${prefix}|prefix=${vlcprefix}|g" \
                ${destroot}${vlcprefix}/lib/pkgconfig/libvlc.pc \
                ${destroot}${vlcprefix}/lib/pkgconfig/vlc-plugin.pc
    }
}

post-activate {
    system "${vlcprefix}/lib/vlc/vlc-cache-gen ${vlcprefix}/lib/vlc"
}

}

post-activate {
    if {[catch {exec defaults write /Library/Preferences/org.videolan.vlc SUEnableAutomaticChecks 0} result]} {
        ui_debug "Couldn't write (deactivate) SUEnableAutomaticChecks default"
    }
}
pre-deactivate {
    if {[catch {exec defaults delete /Library/Preferences/org.videolan.vlc SUEnableAutomaticChecks} result]} {
        ui_debug "Couldn't delete SUEnableAutomaticChecks default"
    }
}

notes-append "MIDI support requires installing one or more SoundFont files,\
    in ${prefix}/share/sounds/sf2, for instance from port:generaluser-soundfont."


livecheck.url       https://download.videolan.org/pub/videolan/vlc/
livecheck.regex     <a href=\"(\\d\[\\d|\.|\\w\]+).*/\">

# kate: backspace-indents true; indent-pasted-text true; indent-width 4; keep-extra-spaces true; remove-trailing-spaces modified; replace-tabs true; replace-tabs-save true; syntax Tcl/Tk; tab-indents true; tab-width 4;
