diff --git a/src/qmplay2/opengl/OpenGLCommon.cpp b/src/qmplay2/opengl/OpenGLCommon.cpp
index 453895ff74509058918960b379cf1cb1d55d7e3c..e93a6bbe0896ca2deb8fc952074ebfb3cd686a2d 100644
--- a/src/qmplay2/opengl/OpenGLCommon.cpp
+++ b/src/qmplay2/opengl/OpenGLCommon.cpp
@@ -37,6 +37,8 @@
 #ifdef Q_OS_WIN
 #   include <QOperatingSystemVersion>
 #endif
+#include <QLoggingCategory>
+#include <QOpenGLFunctions>
 
 /* OpenGL|ES 2.0 doesn't have those definitions */
 #ifndef GL_MAP_WRITE_BIT
@@ -58,6 +60,8 @@
     #define GL_RED GL_RED_EXT
 #endif
 
+Q_LOGGING_CATEGORY(gllog, "OpenGLLog")
+
 OpenGLCommon::OpenGLCommon() :
     VideoOutputCommon(false),
     vSync(true),
@@ -79,9 +83,9 @@ OpenGLCommon::OpenGLCommon() :
     texCoordYCbCr[0] = texCoordYCbCr[4] = texCoordYCbCr[5] = texCoordYCbCr[7] = 0.0f;
     texCoordYCbCr[1] = texCoordYCbCr[3] = 1.0f;
 
-#ifndef Q_OS_MACOS
+// #ifndef Q_OS_MACOS
     m_gl3 = (m_glInstance->glVer >= 30);
-#endif
+// #endif
 
     m_matrixChangeFn = [this] {
         setMatrix = true;
@@ -129,8 +133,10 @@ void OpenGLCommon::initialize(const std::shared_ptr<OpenGLHWInterop> &hwInterop)
             if (!context.create() || !context.makeCurrent(&surface))
             {
                 isOK = false;
+                qCCritical(gllog) << Q_FUNC_INFO << "Failed to create a QOpenGLContext, or to make it current for" << surface.format();
                 return;
             }
+            qCWarning(gllog) << Q_FUNC_INFO << "Got OpenGL context format:" << context.format();
         }
 
         switch (hwInterop->getFormat())
@@ -320,9 +326,15 @@ void OpenGLCommon::initializeGL()
         return;
     }
 
+    if (!QOpenGLContext::currentContext() || !QOpenGLContext::currentContext()->isValid()) {
+        qCCritical(gllog) << Q_FUNC_INFO << "No current or invalid OpenGL context";
+    } else {
+        qCWarning(gllog) << Q_FUNC_INFO << "Current OpenGL context:" << QOpenGLContext::currentContext()->format();
+    }
     /* Set OpenGL parameters */
-    glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
-    glClearColor(0.0, 0.0, 0.0, 1.0);
+    auto qgl = QOpenGLFunctions(QOpenGLContext::currentContext());
+    qgl.glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+    qgl.glClearColor(0.0, 0.0, 0.0, 1.0);
     glClear(GL_COLOR_BUFFER_BIT);
     glDisable(GL_STENCIL_TEST);
     glDisable(GL_DEPTH_TEST);
@@ -330,7 +342,7 @@ void OpenGLCommon::initializeGL()
 
     /* Prepare textures */
     const int texturesToGen = m_hwInterop ? 0 : numPlanes;
-    glGenTextures(texturesToGen + 1, textures);
+    qgl.glGenTextures(texturesToGen + 1, textures);
     for (int i = 0; i < texturesToGen + 1; ++i)
     {
         const quint32 tmpTarget = (i == 0) ? GL_TEXTURE_2D : target;
@@ -340,7 +352,7 @@ void OpenGLCommon::initializeGL()
     if (hasPbo)
     {
         glGenBuffers(1 + texturesToGen, pbo);
-        glPixelStorei(GL_UNPACK_ALIGNMENT, 1);
+        qgl.glPixelStorei(GL_UNPACK_ALIGNMENT, 1);
     }
 
     setVSync(vSync);
diff --git a/src/qmplay2/opengl/OpenGLCommon.hpp b/src/qmplay2/opengl/OpenGLCommon.hpp
index e3b4d3831df4f3835d167e3b3eab3217470e17a8..29ad37c4245c772a432e241b482a03fd00fd1c14 100644
--- a/src/qmplay2/opengl/OpenGLCommon.hpp
+++ b/src/qmplay2/opengl/OpenGLCommon.hpp
@@ -26,9 +26,9 @@
 #include <QMPlay2OSD.hpp>
 
 #include <QOpenGLShaderProgram>
-#if !defined(QT_OPENGL_ES_2) && !defined(QT_FEATURE_opengles2)
+// #if !defined(QT_OPENGL_ES_2) && !defined(QT_FEATURE_opengles2)
 #   include <QOpenGLFunctions_1_5>
-#endif
+// #endif
 #include <QOpenGLExtraFunctions>
 
 #include <QCoreApplication>
@@ -85,9 +85,9 @@ protected:
 
     void contextAboutToBeDestroyed();
 
-#if !defined(QT_OPENGL_ES_2) && !defined(QT_FEATURE_opengles2)
+// #if !defined(QT_OPENGL_ES_2) && !defined(QT_FEATURE_opengles2)
     QOpenGLFunctions_1_5 m_gl15;
-#endif
+// #endif
 
     bool vSync;
 
