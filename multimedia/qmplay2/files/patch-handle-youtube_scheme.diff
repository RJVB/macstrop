diff --git a/src/gui/CMakeLists.txt b/src/gui/CMakeLists.txt
index a91551a037538735f871ae426445741a4b5a17b2..92e76a9ab7de642d256c73495bdf6424028ca644 100644
--- a/src/gui/CMakeLists.txt
+++ b/src/gui/CMakeLists.txt
@@ -211,7 +214,8 @@ if(WIN32)
     target_link_libraries(${PROJECT_NAME} Qt5::WinExtras winmm)
 elseif(APPLE)
     set_target_properties(${PROJECT_NAME} PROPERTIES
-        MACOSX_BUNDLE_INFO_PLIST "${CMAKE_CURRENT_SOURCE_DIR}/macOS/BundleInfo.plist.in")
+        MACOSX_BUNDLE_INFO_PLIST "${CMAKE_CURRENT_SOURCE_DIR}/macOS/BundleInfo.plist.in"
+        MACOSX_BUNDLE_GUI_IDENTIFIER "org.zaps166.${PROJECT_NAME}")
     target_link_libraries(${PROJECT_NAME} ${APPKIT_LIBRARY} ${IOKIT_LIBRARY})
 endif()
 if(USE_TAGLIB AND (NOT WIN32 OR CMAKE_HOST_WIN32))
diff --git a/src/gui/Main.cpp b/src/gui/Main.cpp
index 446ae6f705e8e2fcd7969fd15194579d26d1b8ed..16f243c6dc209d6bd19bc644ee276a0028aeb4b1 100644
--- a/src/gui/Main.cpp
+++ b/src/gui/Main.cpp
@@ -271,7 +281,7 @@ static QCommandLineParser *createCmdParser(bool descriptions)
 }
 static QString fileArg(const QString &arg)
 {
-    if (!arg.contains("://"))
+    if (!arg.contains("://") && !arg.startsWith("youtube:"))
     {
         const QFileInfo argInfo(arg);
         if (!argInfo.isAbsolute())
diff --git a/src/gui/MainWidget.cpp b/src/gui/MainWidget.cpp
index 845aacb51256cd3d48c81a04dfa308fae5d7384e..a24ece488f9ecc4405f5f4f63e1f3b6563ee9d42 100644
--- a/src/gui/MainWidget.cpp
+++ b/src/gui/MainWidget.cpp
@@ -1986,7 +1996,9 @@ bool MainWidget::eventFilter(QObject *obj, QEvent *event)
 #ifdef Q_OS_MACOS
     else if (event->type() == QEvent::FileOpen)
     {
-        filesToAdd.append(((QFileOpenEvent *)event)->file());
+        auto url = ((QFileOpenEvent *)event)->url();
+        filesToAdd.append(url.scheme() == "file" ? ((QFileOpenEvent *)event)->file()
+            : Functions::maybeExtensionAddress(url.url()));
         fileOpenTimer.start(10);
     }
 #endif
diff --git a/src/qmplay2/Functions.cpp b/src/qmplay2/Functions.cpp
index e22f126ca706257e7ad9e522335aa03c81c93783..f2fa67771e73b9433a5e4963e8ed4b4589952f08 100644
--- a/src/qmplay2/Functions.cpp
+++ b/src/qmplay2/Functions.cpp
@@ -631,13 +631,30 @@ QStringList Functions::getUrlsFromMimeData(const QMimeData *mimeData, const bool
 
 QString Functions::maybeExtensionAddress(const QString &url)
 {
-    for (const QMPlay2Extensions *QMPlay2Ext : QMPlay2Extensions::QMPlay2ExtensionsList())
+    if (url.startsWith("youtube:"))
     {
-        const QString prefix = QMPlay2Ext->matchAddress(url);
-        if (!prefix.isEmpty())
-            return prefix + "://{" + url + "}";
+        // we want to support both youtube:vID and youtube://vID but the latter form
+        // is often passed to us as "youtube://vid" (vID interpreted as the remote host). 
+        // So we also support the full URI form with an empty host string and strip
+        // the leading '/' from the path to recover the intact vID. This implementation
+        // also supports youtube:/vID as a side effect ... why not!
+        auto vid = url.mid(8);
+        while (vid.at(0) == '/')
+        {
+            vid.remove(0, 1);
+        }
+        return maybeExtensionAddress("http://www.youtube.com/watch?v=" + vid);
+    }
+    else
+    {
+        for (const QMPlay2Extensions *QMPlay2Ext : QMPlay2Extensions::QMPlay2ExtensionsList())
+        {
+            const QString prefix = QMPlay2Ext->matchAddress(url);
+            if (!prefix.isEmpty())
+                return prefix + "://{" + url + "}";
+        }
+        return url;
     }
-    return url;
 }
 
 bool Functions::splitPrefixAndUrlIfHasPluginPrefix(const QString &entireUrl, QString *addressPrefixName, QString *url, QString *param)
diff --git a/src/gui/macOS/BundleInfo.plist.in b/src/gui/macOS/BundleInfo.plist.in
index 54e31f4ffe2df2da8c142a130f7e64d07a018aa7..5fd108462a2ea4a884771b3d7019a28797415e3b 100644
--- a/src/gui/macOS/BundleInfo.plist.in
+++ b/src/gui/macOS/BundleInfo.plist.in
@@ -111,6 +111,17 @@
             <string>Viewer</string>
         </dict>
     </array>
+    <key>CFBundleURLTypes</key>
+    <array>
+        <dict>
+            <key>CFBundleURLName</key>
+            <string>YouTube video ID</string>
+            <key>CFBundleURLSchemes</key>
+            <array>
+                <string>youtube</string>
+            </array>
+        </dict>
+    </array>
     <key>CFBundleDevelopmentRegion</key>
     <string>English</string>
     <key>CFBundleExecutable</key>
diff --git a/src/gui/Unix/QMPlay2_youtube.desktop b/src/gui/Unix/QMPlay2_youtube.desktop
new file mode 100755
index 00000000..21651164
--- /dev/null
+++ b/src/gui/Unix/QMPlay2_youtube.desktop
@@ -0,0 +1,9 @@
+[Desktop Entry]
+Exec=QMPlay2 --show %u
+Icon=QMPlay2
+Name=Play youtube:VID URI in QMPlay2
+StartupNotify=false
+Type=Application
+Categories=Qt;AudioVideo;Player;Audio;Video;
+MimeType=x-scheme-handler/youtube;
+NoDisplay=true
