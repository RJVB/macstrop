diff --git a/src/qmplay2/QMPlay2Core.cpp b/src/qmplay2/QMPlay2Core.cpp
index 2481ba9e104f601f2c736f1a9d68974cd325ba2e..99c4e8031040910d52c6227347a91a193c45a8ea 100644
--- a/src/qmplay2/QMPlay2Core.cpp
+++ b/src/qmplay2/QMPlay2Core.cpp
@@ -46,7 +46,8 @@
 #elif defined Q_OS_MACOS
     #include <QOperatingSystemVersion>
 #elif !defined Q_OS_ANDROID
-    #include <QProcess>
+    #include <QDBusConnection>
+    #include <QDBusInterface>
 #endif
 
 #include <cstdarg>
@@ -59,19 +60,6 @@ extern "C"
     #include <libavutil/log.h>
 }
 
-#if !defined(Q_OS_ANDROID) && !defined(Q_OS_WIN) && !defined(Q_OS_MACOS)
-static QStringList getDBusSuspendArgs(const QString &method, const QString &name, const QString &pathSuffix = QString())
-{
-    return {
-        "--system",
-        "--print-reply",
-        "--dest=org.freedesktop." + name,
-        "/org/freedesktop/" + name + pathSuffix,
-        "org.freedesktop." + name + ".Manager." + method
-     };
-};
-#endif
-
 /**/
 
 Q_LOGGING_CATEGORY(ffmpeglog, "FFmpegLog")
@@ -409,25 +397,52 @@ void QMPlay2CoreClass::quit()
     }
 }
 
+class DBusSuspend {
+public:
+    DBusSuspend(const QDBusConnection &connection, const QString &name, const QString &pathSuffix = QString())
+        : m_ifc("org.freedesktop." + name, "/org/freedesktop/" + name + pathSuffix,
+                           "org.freedesktop." + name + ".Manager", connection)
+    {}
+
+    bool canDo()
+    {
+        if (m_ifc.isValid()) {
+            const auto result = m_ifc.call("CanSuspend");
+            return (result.arguments().at(0).toString().toLower() == "yes");
+        } else {
+            qWarning() << m_ifc.service() << m_ifc.path() << m_ifc.interface() << m_ifc.lastError();
+        }
+        return false;
+    }
+    void doNow()
+    {
+        if (m_ifc.isValid()) {
+            const auto result = m_ifc.call("Suspend", QVariant::fromValue(true));
+        } else {
+            qWarning() << m_ifc.service() << m_ifc.path() << m_ifc.interface() << m_ifc.lastError();
+        }
+    }
+private:
+    QDBusInterface m_ifc;
+};
+
 bool QMPlay2CoreClass::canSuspend()
 {
 #if defined Q_OS_WIN || defined Q_OS_MACOS
     m_suspend = 1;
     return true;
 #elif !defined Q_OS_ANDROID
-    auto checkSuspendDBus = [](const QStringList &args) {
-        QProcess p;
-        p.start("dbus-send", args);
-        if (!p.waitForStarted() || !p.waitForFinished())
-            return false;
-        return (p.readAllStandardOutput().split('\n').value(1).simplified().replace("\"", "").split(' ').value(1).toLower() == "yes");
-    };
-    if (checkSuspendDBus(getDBusSuspendArgs("CanSuspend", "login1")))
+    auto bus = QDBusConnection::systemBus();
+    if (!bus.isConnected()) {
+        qWarning() << "Cannot connect to the D-Bus system bus:" << bus.lastError();
+        return false;
+    }
+    if (DBusSuspend(bus, "login1").canDo())
     {
         m_suspend = 1;
         return true;
     }
-    if (checkSuspendDBus(getDBusSuspendArgs("CanSuspend", "ConsoleKit", "/Manager")))
+    if (DBusSuspend(bus, "ConsoleKit", "/Manager").canDo())
     {
         m_suspend = 2;
         return true;
@@ -445,24 +460,22 @@ void QMPlay2CoreClass::suspend()
 #elif defined Q_OS_MACOS
     Q_UNUSED(system("pmset sleepnow > /dev/null 2>&1 &"));
 #elif !defined Q_OS_ANDROID
-    QStringList args;
+    auto bus = QDBusConnection::systemBus();
+    if (!bus.isConnected()) {
+        qWarning() << "Cannot connect to the D-Bus system bus:" << bus.lastError();
+        return;
+    }
     switch (m_suspend)
     {
         case 1:
-            args = getDBusSuspendArgs("Suspend", "login1");
+            DBusSuspend(bus, "login1").doNow();
             break;
         case 2:
-            args = getDBusSuspendArgs("Suspend", "ConsoleKit", "/Manager");
+            DBusSuspend(bus, "ConsoleKit", "/Manager").doNow();
             break;
         default:
             return;
     }
-    args += "boolean:true";
-
-    QProcess p;
-    p.start("dbus-send", args);
-    if (p.waitForStarted())
-        p.waitForFinished();
 #endif
 }

