# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem                  1.0
PortGroup                   github 1.0
PortGroup                   cmake 1.1
PortGroup                   LTO 1.0

github.setup                strukturag libheif 1.18.2 v

checksums                   rmd160  fb41f7c4d109883a214b8db5db1039809a3fb8eb \
                            sha256  c4002a622bec9f519f29d84bfdc6024e33fd67953a5fb4dc2c2f11f67d5e45bf
#                            size    1525096

categories                  multimedia
license                     LGPL-3+
maintainers                 {mcalhoun @MarcusCalhoun-Lopez} {mascguy @mascguy} openmaintainer
description                 a ISO/IEC 23008-12:2017 HEIF file format decoder and encoder
long_description            ${name} is {*}${description}.

github.tarball_from         releases

depends_build-append \
                            port:pkgconfig

depends_lib-append \
                            port:aom \
                            port:dav1d \
                            path:lib/pkgconfig/gdk-pixbuf-2.0.pc:gdk-pixbuf2 \
                            port:libde265 \
                            path:include/turbojpeg.h:libjpeg-turbo \
                            port:libpng \
                            port:webp \
                            port:x265

configure.args-append \
                            -DWITH_RAV1E:BOOL=OFF \
                            -DWITH_SvtEnc=OFF \
                            -DWITH_DAV1D=ON \
                            -DWITH_JPEG_DECODER=ON \
                            -DWITH_JPEG_ENCODER=ON \
                            -DWITH_FFMPEG_DECODER=OFF

compiler.cxx_standard       2011

# error: unknown warning option '-Werror=potentially-evaluated-expression'
compiler.blacklist-append   {clang < 700}

platform darwin {
    # Disable dynamic plugin loading, due to upstream issue:
    #   clang: error: invalid argument '-compatibility_version 1.0.0' only allowed with '-dynamiclib'
    # We don't lose any functionality though, as we're building with everything enabled as built-ins.
    configure.args-append   -DENABLE_PLUGIN_LOADING:BOOL=OFF

    if {${os.major} >= 10 && [string match *clang* ${configure.compiler}]} {
        # Fix for error: non-portable path to file <DAV1D/xxx.h> and <AOM/xxx.h>
        # https://trac.macports.org/ticket/67404
        # Flags are Clang-specific, they break build with GCC.
        configure.cxxflags-append \
                            -Wno-nonportable-include-path \
                            -Wno-error=nonportable-include-path \
                            -Wno-unknown-warning-option \
                            -Wno-error=unknown-warning-option
    }
    if {[string match macports-gcc* ${configure.compiler}]} {
        # only really needed when building against libc++ but it's a developer's option anyway...
        configure.cxxflags-append \
                            -Wno-error=maybe-uninitialized
    }

    if {${os.major} < 10 || (${os.major} == 10 && ${configure.build_arch} eq "ppc")} {
        # TODO: Disable rav1e on <10.6, due to issues with cargo-c; enable if fixed.
        # Do not enable on PPC until Rust is fixed or it becomes possible to build with gccrs.
        # See: https://trac.macports.org/ticket/65434
        if {[variant_isset rav1e]} {
            error "Variant rav1e not supported for macOS 10.5 and earlier, or PPC"
        }
    }
}

variant rav1e description {Enable codec rav1e} {
    depends_lib-append \
                            port:rav1e

    configure.args-replace \
                            -DWITH_RAV1E:BOOL=OFF \
                            -DWITH_RAV1E:BOOL=ON
}

variant svtenc description {Enable encoding with svt-av1} {
    depends_lib-append      port:svt-av1

    configure.args-replace  -DWITH_SvtEnc=OFF \
                            -DWITH_SvtEnc=ON
}

variant ffmpeg description {Enable hw-accelerated decoding with FFmpeg} {
    depends_lib-append      port:ffmpeg

    configure.args-replace  -DWITH_FFMPEG_DECODER=OFF \
                            -DWITH_FFMPEG_DECODER=ON
}

variant tests description {Enable tests} {
    configure.args-append \
                            -DBUILD_TESTING:BOOL=ON \
                            -DWITH_REDUCED_VISIBILITY:BOOL=OFF
    test.run                yes
}

cmake.save_configure_cmd "install log"

# if {![variant_isset rav1e]} {
#     notes-append "Support for rav1e now disabled by default; enable via +rav1e"
# }

# Exclude pre-release candidates
github.livecheck.regex {([0-9.]+)}
