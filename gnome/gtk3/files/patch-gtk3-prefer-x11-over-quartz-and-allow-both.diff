diff --git gdk/orig.gdkdisplaymanager.c gdk/gdkdisplaymanager.c
index e631652..be827a6 100644
--- gdk/orig.gdkdisplaymanager.c
+++ gdk/gdkdisplaymanager.c
@@ -257,6 +257,9 @@ struct _GdkBackend {
 };
 
 static GdkBackend gdk_backends[] = {
+#ifdef GDK_WINDOWING_X11
+  { "x11",      _gdk_x11_display_open },
+#endif
 #ifdef GDK_WINDOWING_QUARTZ
   { "quartz",   _gdk_quartz_display_open },
 #endif
@@ -266,9 +269,6 @@ static GdkBackend gdk_backends[] = {
 #ifdef GDK_WINDOWING_WAYLAND
   { "wayland",  _gdk_wayland_display_open },
 #endif
-#ifdef GDK_WINDOWING_X11
-  { "x11",      _gdk_x11_display_open },
-#endif
 #ifdef GDK_WINDOWING_BROADWAY
   { "broadway", _gdk_broadway_display_open },
 #endif
diff --git gtk/deprecated/orig.gtkstatusicon.c gtk/deprecated/gtkstatusicon.c
index 52239b1..b4fc42d 100644
--- gtk/deprecated/orig.gtkstatusicon.c
+++ gtk/deprecated/gtkstatusicon.c
@@ -1398,15 +1398,14 @@ gtk_status_icon_update_image (GtkStatusIcon *status_icon)
   GtkIconHelper *icon_helper;
   cairo_surface_t *surface;
   GtkWidget *widget;
-#ifndef GDK_WINDOWING_X11
   GdkPixbuf *pixbuf;
-#endif
   gint round_size;
   gint scale;
 
 #ifdef GDK_WINDOWING_X11
   widget = priv->image;
   scale = gtk_widget_get_scale_factor (widget);
+#pragma unused pixbuf;
 #else
   widget = priv->dummy_widget;
   scale = 1;
diff --git gtk/orig.gtkmountoperation-stub.c gtk/gtkmountoperation-stub.c
index e053324..04c83a4 100644
--- gtk/orig.gtkmountoperation-stub.c
+++ gtk/gtkmountoperation-stub.c
@@ -24,6 +24,9 @@
  */
 
 #include "config.h"
+#include <gdk/gdk.h>
+
+#ifndef GDK_WINDOWING_X11
 
 #include <gio/gio.h>
 #include "gtkintl.h"
@@ -64,3 +67,4 @@ _gtk_mount_operation_kill_process (GPid      pid,
   return FALSE;
 }
 
+#endif
diff --git gdk/quartz/orig.gdkwindow-quartz.c gdk/quartz/gdkwindow-quartz.c
index 86620de..e06ec53 100644
--- gdk/quartz/orig.gdkwindow-quartz.c
+++ gdk/quartz/gdkwindow-quartz.c
@@ -140,9 +140,13 @@ gdk_window_get_quartz_impl (GdkWindow* window)
       embedder = gdk_offscreen_window_get_embedder (window);
     }
 
-  g_return_val_if_fail (GDK_IS_WINDOW_IMPL_QUARTZ (window->impl), NULL);
+// don't yell about impl not being a Quartz window; we're probably running in X11 mode
+//   g_return_val_if_fail (GDK_IS_WINDOW_IMPL_QUARTZ (window->impl), NULL);
 
-  return GDK_WINDOW_IMPL_QUARTZ (window->impl);
+  if (GDK_IS_WINDOW_IMPL_QUARTZ (window->impl)) {
+    return GDK_WINDOW_IMPL_QUARTZ (window->impl);
+  }
+  return NULL;
 }
 
 NSView *
diff --git gdk/x11/orig.gdkwindow-x11.c gdk/x11/gdkwindow-x11.c
index 89f0666..6b4a7ea 100644
--- gdk/x11/orig.gdkwindow-x11.c
+++ gdk/x11/gdkwindow-x11.c
@@ -5659,7 +5659,11 @@ gdk_x11_get_server_time (GdkWindow *window)
 XID
 gdk_x11_window_get_xid (GdkWindow *window)
 {
-  g_return_val_if_fail (GDK_IS_X11_WINDOW (window), None);
+  if (!GDK_IS_X11_WINDOW (window)) {
+    // we're probably running in Quartz mode
+    return None;
+  }
+//   g_return_val_if_fail (GDK_IS_X11_WINDOW (window), None);
 
   /* Try to ensure the window has a native window */
   if (!_gdk_window_has_impl (window))
