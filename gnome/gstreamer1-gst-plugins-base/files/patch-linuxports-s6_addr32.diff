diff --git gst-libs/gst/rtsp/orig.gstrtspconnection.c gst-libs/gst/rtsp/gstrtspconnection.c
index 606192e..1c5fca5 100644
--- gst-libs/gst/rtsp/orig.gstrtspconnection.c
+++ gst-libs/gst/rtsp/gstrtspconnection.c
@@ -50,6 +50,8 @@
  * to receive and send bytes and messages.
  */
 
+#define __USE_BSD
+
 #ifdef HAVE_CONFIG_H
 #  include <config.h>
 #endif
@@ -59,6 +61,27 @@
 #include <stdlib.h>
 #include <string.h>
 #include <time.h>
+#include <endian.h>
+
+# ifndef __u_char_defined
+typedef __u_char u_char;
+typedef __u_short u_short;
+typedef __u_int u_int;
+typedef __u_long u_long;
+typedef __quad_t quad_t;
+typedef __u_quad_t u_quad_t;
+typedef __fsid_t fsid_t;
+#  define __u_char_defined
+#endif
+
+#ifndef BYTE_ORDER
+#	if defined(__BYTE_ORDER)
+#		define BYTE_ORDER __BYTE_ORDER
+#	else
+#		error "BYTE_ORDER isn't defined and don't know how to fix that"
+#	endif
+#endif
+
 
 /* we include this here to get the G_OS_* defines */
 #include <glib.h>
@@ -3168,8 +3191,10 @@ set_qos_dscp (GSocket * socket, guint qos_dscp)
 
   /* if this is an IPv4-mapped address then do IPv4 QoS */
   if (af == AF_INET6) {
+#ifdef s6_addr32
     if (IN6_IS_ADDR_V4MAPPED (&sa.sa_in6.sin6_addr))
       af = AF_INET;
+#endif
   }
 
   /* extract and shift 6 bits of the DSCP */
diff --git gst/tcp/orig.gstmultihandlesink.c gst/tcp/gstmultihandlesink.c
index 38af70a..6020005 100644
--- gst/tcp/orig.gstmultihandlesink.c
+++ gst/tcp/gstmultihandlesink.c
@@ -565,10 +565,12 @@ gst_multi_handle_sink_setup_dscp_client (GstMultiHandleSink * sink,
   if (af == AF_INET6) {
 
     GST_DEBUG_OBJECT (sink, "check IP6 socket");
+#ifdef s6_addr32
     if (IN6_IS_ADDR_V4MAPPED (&(sa.sa_in6.sin6_addr))) {
       GST_DEBUG_OBJECT (sink, "mapped to IPV4");
       af = AF_INET;
     }
+#endif
   }
 
   /* extract and shift 6 bits of the DSCP */
