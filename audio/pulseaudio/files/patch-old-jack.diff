diff --git b/src/modules/jack/orig.module-jack-sink.c a/src/modules/jack/module-jack-sink.c
index 5a690cb..ba40702 100644
--- src/modules/jack/orig.module-jack-sink.c
+++ src/modules/jack/module-jack-sink.c
@@ -28,8 +28,8 @@
 #include <unistd.h>
 
 #include <jack/jack.h>
-#include <jack/metadata.h>
-#include <jack/uuid.h>
+// #include <jack/metadata.h>
+// #include <jack/uuid.h>
 
 #include <pulse/util.h>
 #include <pulse/xmalloc.h>
@@ -305,7 +305,7 @@ int pa__init(pa_module*m) {
     const char **ports = NULL, **p;
     pa_sink_new_data data;
     jack_latency_range_t r;
-    jack_uuid_t port_uuid;
+//     jack_uuid_t port_uuid;
     char port_order[4];
     size_t n;
 
@@ -398,14 +398,14 @@ int pa__init(pa_module*m) {
 
         /* Set order of ports as JACK metadata, if possible. */
         /* See: https://jackaudio.org/api/group__Metadata.html */
-        port_uuid = jack_port_uuid(u->port[i]);
-
-        if (!jack_uuid_empty(port_uuid)) {
-            if (snprintf(port_order, 4, "%d", i+1) >= 4)
-                pa_log("Port order metadata value > 999 truncated.");
-            if (jack_set_property(u->client, port_uuid, METADATA_KEY_ORDER, port_order, METADATA_TYPE_INT) != 0)
-                pa_log("jack_set_property() failed.");
-        }
+//         port_uuid = jack_port_uuid(u->port[i]);
+// 
+//         if (!jack_uuid_empty(port_uuid)) {
+//             if (snprintf(port_order, 4, "%d", i+1) >= 4)
+//                 pa_log("Port order metadata value > 999 truncated.");
+//             if (jack_set_property(u->client, port_uuid, METADATA_KEY_ORDER, port_order, METADATA_TYPE_INT) != 0)
+//                 pa_log("jack_set_property() failed.");
+//         }
     }
 
     pa_sink_new_data_init(&data);
diff --git b/src/modules/jack/orig.module-jack-source.c a/src/modules/jack/module-jack-source.c
index dbee5a6..1f4464a 100644
--- src/modules/jack/orig.module-jack-source.c
+++ src/modules/jack/module-jack-source.c
@@ -28,8 +28,8 @@
 #include <unistd.h>
 
 #include <jack/jack.h>
-#include <jack/metadata.h>
-#include <jack/uuid.h>
+// #include <jack/metadata.h>
+// #include <jack/uuid.h>
 
 #include <pulse/util.h>
 #include <pulse/xmalloc.h>
@@ -253,7 +253,7 @@ int pa__init(pa_module*m) {
     const char **ports = NULL, **p;
     pa_source_new_data data;
     jack_latency_range_t r;
-    jack_uuid_t port_uuid;
+//     jack_uuid_t port_uuid;
     char port_order[4];
     size_t n;
 
@@ -340,14 +340,14 @@ int pa__init(pa_module*m) {
 
         /* Set order of ports as JACK metadata, if possible. */
         /* See: https://jackaudio.org/api/group__Metadata.html */
-        port_uuid = jack_port_uuid(u->port[i]);
-
-        if (!jack_uuid_empty(port_uuid)) {
-            if (snprintf(port_order, 4, "%d", i+1) >= 4)
-                pa_log("Port order metadata value > 999 truncated.");
-            if (jack_set_property(u->client, port_uuid, METADATA_KEY_ORDER, port_order, METADATA_TYPE_INT) != 0)
-                pa_log("jack_set_property() failed.");
-        }
+//         port_uuid = jack_port_uuid(u->port[i]);
+// 
+//         if (!jack_uuid_empty(port_uuid)) {
+//             if (snprintf(port_order, 4, "%d", i+1) >= 4)
+//                 pa_log("Port order metadata value > 999 truncated.");
+//             if (jack_set_property(u->client, port_uuid, METADATA_KEY_ORDER, port_order, METADATA_TYPE_INT) != 0)
+//                 pa_log("jack_set_property() failed.");
+//         }
     }
 
     pa_source_new_data_init(&data);
