diff --git a/src/AdornedRulerPanel.cpp b/src/AdornedRulerPanel.cpp
index 0d9185fe95ef001eeba004cbc194c4ade816fb5f..cc562d1ce9e2569d32feb0b3ce96294214bfbc36 100644
--- a/src/AdornedRulerPanel.cpp
+++ b/src/AdornedRulerPanel.cpp
@@ -225,6 +225,18 @@ protected:
 
 class AdornedRulerPanel::PlayRegionAdjustingHandle : public CommonRulerHandle {
 public:
+   PlayRegionAdjustingHandle(
+      AdornedRulerPanel *pParent, wxCoord xx, MenuChoice menuChoice,
+      wxCursor *cursor,
+      size_t numGuides = 1)
+   : CommonRulerHandle{ pParent, xx, menuChoice }
+   , mNumGuides{ numGuides }
+   {
+      if (cursor) {
+         mCursor = *cursor;
+      }
+   }
+
    PlayRegionAdjustingHandle(
       AdornedRulerPanel *pParent, wxCoord xx, MenuChoice menuChoice,
       wxCursor cursor,
@@ -234,6 +246,11 @@ public:
    , mNumGuides{ numGuides }
    {}
 
+   void SetCursor(wxCursor cursor)
+   {
+      mCursor = cursor;
+   }
+
    HitTestPreview Preview(
       const TrackPanelMouseState &state, AudacityProject *pProject)
    override
@@ -790,14 +807,17 @@ private:
 };
 #endif
 
-static auto handOpenCursor =
-    MakeCursor(wxCURSOR_HAND, RearrangeCursorXpm, 16, 16);
+static std::unique_ptr<wxCursor> handOpenCursor = nullptr;
 
 class AdornedRulerPanel::MovePlayRegionHandle final : public PlayRegionAdjustingHandle {
 public:
    MovePlayRegionHandle( AdornedRulerPanel *pParent, wxCoord xx )
-   : PlayRegionAdjustingHandle( pParent, xx, MenuChoice::QuickPlay, *handOpenCursor, 2 )
+   : PlayRegionAdjustingHandle( pParent, xx, MenuChoice::QuickPlay, handOpenCursor.get(), 2 )
    {
+      if (!handOpenCursor) {
+         handOpenCursor = MakeCursor(wxCURSOR_HAND, RearrangeCursorXpm, 16, 16);
+         SetCursor(*handOpenCursor);
+      }
    }
 
    ~MovePlayRegionHandle()
diff --git a/src/tracks/ui/SelectHandle.cpp b/src/tracks/ui/SelectHandle.cpp
index 41cc84640d021ba93280e7660b32e3386b93ee14..1ea19922908dc12438ce585db4529e330d849b9a 100644
--- a/src/tracks/ui/SelectHandle.cpp
+++ b/src/tracks/ui/SelectHandle.cpp
@@ -297,8 +297,14 @@ namespace
       (SelectionBoundary boundary, bool frequencySnapping,
        TranslatableString &tip, wxCursor *&pCursor)
    {
+#ifdef __WXMAC__
+      // don't use those pesky and unclear pointing-finger cursors!
+      static wxCursor adjustLeftSelectionCursor{ wxCURSOR_CROSS };
+      static wxCursor adjustRightSelectionCursor{ wxCURSOR_CROSS };
+#else
       static wxCursor adjustLeftSelectionCursor{ wxCURSOR_POINT_LEFT };
       static wxCursor adjustRightSelectionCursor{ wxCURSOR_POINT_RIGHT };
+#endif
 
       static auto bottomFrequencyCursor =
          ::MakeCursor(wxCURSOR_ARROW, BottomFrequencyCursorXpm, 16, 16);
