--- pavucontrol-4.0/src/orig.pavuapplication.cc	2019-03-05 16:22:17.000000000 +0100
+++ pavucontrol-4.0/src/pavuapplication.cc	2019-11-28 14:47:03.000000000 +0100
@@ -30,6 +30,8 @@
 #include "pavucontrol.h"
 #include "mainwindow.h"
 
+static PavuApplication *theApp = nullptr;
+
 PavuApplication::PavuApplication() :
     Gtk::Application("org.pulseaudio.pavucontrol", Gio::ApplicationFlags::APPLICATION_HANDLES_COMMAND_LINE),
     mainWindow(NULL),
@@ -38,6 +40,7 @@
     tab(0),
     version(false),
     m(NULL) {
+	    theApp = this;
 }
 
 /*
@@ -143,26 +146,26 @@
     signal(SIGPIPE, SIG_IGN);
 
     /* Create the application */
-    auto app = PavuApplication();
+    PavuApplication();
 
     /* Add command-line options */
-    app.add_main_option_entry(
+    theApp->add_main_option_entry(
         Gio::Application::OptionType::OPTION_TYPE_INT,
         "tab", 't',
         _("Select a specific tab on load."),
         _("number"));
 
-    app.add_main_option_entry(
+    theApp->add_main_option_entry(
         Gio::Application::OptionType::OPTION_TYPE_BOOL,
         "retry", 'r',
         _("Retry forever if pa quits (every 5 seconds)."));
 
-    app.add_main_option_entry(
+    theApp->add_main_option_entry(
         Gio::Application::OptionType::OPTION_TYPE_BOOL,
         "maximize", 'm',
         _("Maximize the window."));
 
-    app.add_main_option_entry(
+    theApp->add_main_option_entry(
         Gio::Application::OptionType::OPTION_TYPE_BOOL,
         "version", 'v',
         _("Show version."));
@@ -170,7 +173,7 @@
     /* Connect to the "on_command_line" signal which is fired
      * when the application receives command-line arguments
      */
-    app.signal_command_line().connect(sigc::bind(sigc::ptr_fun(&on_command_line), &app), false);
+    theApp->signal_command_line().connect(sigc::bind(sigc::ptr_fun(&on_command_line), theApp), false);
 
     /* Run the application.
      * In the first launched instance, this will return when its window is
@@ -179,5 +182,5 @@
      * Handling a new request consists of presenting the existing window (and
      * optionally, select a tab).
      */
-    return app.run(argc, argv);
+    return theApp->run(argc, argv);
 }
