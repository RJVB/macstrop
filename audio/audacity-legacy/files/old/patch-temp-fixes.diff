diff --git a/src/menus/WindowMenus.cpp b/src/menus/WindowMenus.cpp
index 2ee23c1db11f70ebf3ae00715480e04d64cf5db5..307d46c1412a30696dd0b17ee17e2d0193e14b79 100644
--- a/src/menus/WindowMenus.cpp
+++ b/src/menus/WindowMenus.cpp
@@ -67,63 +67,12 @@ namespace WindowActions {
 // Refreshes the Window menu in all projects
 void Refresh()
 {
-   // Must do it in all projects
-   for (auto thisProject : AllProjects{})
-   {
-      // Need the projects frame, but this should always be successful
-      wxFrame *frame = thisProject->GetFrame();
-      wxASSERT(frame != NULL);
-      if (!frame)
-      {
-         continue;
-      }
-
-      // This can happen if we are called before the menubar is set in the frame
-      wxMenuBar *bar = frame->GetMenuBar();
-      if (!bar)
-      {
-         continue;
-      }
-
-      // Should always find the Window menu
-      int pos = bar->FindMenu( menuTitle.Translation() );
-      wxASSERT(pos != wxNOT_FOUND);
-      if (pos == wxNOT_FOUND)
-      {
-         continue;
-      }
-
-      // We can not get the menu proper
-      wxMenu *menu = bar->GetMenu(pos);
-
-      // Remove all existing window items
-      for (auto item : menu->GetMenuItems())
-      {
-         if (item->GetId() >= WindowActions::ID_BASE)
-         {
-            menu->Destroy(item);
-         }
-      }
-
-      // Add all projects to this project's Window menu
-      for (auto project : AllProjects{})
-      {
-         int itemId = WindowActions::ID_BASE + project->GetProjectNumber();
-         wxString itemName = project->GetFrame()->GetTitle();
-         bool isActive = (GetActiveProject() == project.get());
-
-         // This should never really happen, but a menu item must have a name
-         if (itemName.empty())
-         {
-            itemName = _("<untitled>");
-         }
-
-         // Add it to the menu and check it if it's the active project
-         wxMenuItem *item = menu->Append(itemId, itemName);
-         item->SetCheckable(true);
-         item->Check(isActive);
-      }
-   }
+    // Remove for now as it cause an ObJC exception and crashing
+// 2020-05-15 16:43:38.274 Audacity[17401:d0b] *** Assertion failure in -[wxNSMenu removeItem:], /SourceCache/AppKit/AppKit-1265.21/Menus.subproj/NSMenu.m:752
+// 2020-05-15 16:43:38.340 Audacity[17401:d0b] Item to be removed is not in the menu in the first place
+// 2
+// 2020-05-15 16:43:45.935 Audacity[17401:d0b] *** Assertion failure in -[wxNSMenu removeItem:], /SourceCache/AppKit/AppKit-1265.21/Menus.subproj/NSMenu.m:752
+//     in addition to (or caused by) duplicate entries in the Window menu.
 }
 
 // Menu handler functions
