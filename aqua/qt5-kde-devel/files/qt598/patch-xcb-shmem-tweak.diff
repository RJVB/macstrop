diff --git b/qtbase/src/plugins/platforms/xcb/orig.qxcbbackingstore.cpp a/qtbase/src/plugins/platforms/xcb/qxcbbackingstore.cpp
index a419caf..88768fb 100644
--- b/qtbase/src/plugins/platforms/xcb/orig.qxcbbackingstore.cpp
+++ a/qtbase/src/plugins/platforms/xcb/qxcbbackingstore.cpp
@@ -171,30 +171,34 @@ QXcbShmImage::QXcbShmImage(QXcbScreen *screen, const QSize &size, uint depth, QI
     if (id == -1) {
         qWarning("QXcbShmImage: shmget() failed (%d: %s) for size %d (%dx%d)",
                  errno, strerror(errno), segmentSize, size.width(), size.height());
+        m_shm_info.shmaddr = 0;
+        m_xcb_image->data = (uint8_t *)malloc(segmentSize);
     } else {
         m_shm_info.shmaddr = m_xcb_image->data = (quint8 *)shmat(id, 0, 0);
     }
     m_shm_info.shmid = id;
     m_shm_info.shmseg = xcb_generate_id(xcb_connection());
 
-    const xcb_query_extension_reply_t *shm_reply = xcb_get_extension_data(xcb_connection(), &xcb_shm_id);
-    bool shm_present = shm_reply != NULL && shm_reply->present;
-    xcb_generic_error_t *error = NULL;
-    if (shm_present)
-        error = xcb_request_check(xcb_connection(), xcb_shm_attach_checked(xcb_connection(), m_shm_info.shmseg, m_shm_info.shmid, false));
-    if (!shm_present || error || id == -1) {
-        free(error);
-
-        if (id != -1) {
-            shmdt(m_shm_info.shmaddr);
-            shmctl(m_shm_info.shmid, IPC_RMID, 0);
-        }
-        m_shm_info.shmaddr = 0;
-
-        m_xcb_image->data = (uint8_t *)malloc(segmentSize);
-    } else {
-        if (shmctl(m_shm_info.shmid, IPC_RMID, 0) == -1)
-            qWarning("QXcbBackingStore: Error while marking the shared memory segment to be destroyed");
+    if (id != -1) {
+         const xcb_query_extension_reply_t *shm_reply = xcb_get_extension_data(xcb_connection(), &xcb_shm_id);
+         bool shm_present = shm_reply != NULL && shm_reply->present;
+         xcb_generic_error_t *error = NULL;
+         if (shm_present)
+         	   error = xcb_request_check(xcb_connection(), xcb_shm_attach_checked(xcb_connection(), m_shm_info.shmseg, m_shm_info.shmid, false));
+         if (!shm_present || error) {
+             free(error);
+
+             if (id != -1) {
+                 shmdt(m_shm_info.shmaddr);
+                 shmctl(m_shm_info.shmid, IPC_RMID, 0);
+             }
+             m_shm_info.shmaddr = 0;
+
+             m_xcb_image->data = (uint8_t *)malloc(segmentSize);
+         } else {
+             if (shmctl(m_shm_info.shmid, IPC_RMID, 0) == -1)
+                 qWarning("QXcbBackingStore: Error while marking the shared memory segment to be destroyed");
+         }
     }
 
     m_hasAlpha = QImage::toPixelFormat(format).alphaUsage() == QPixelFormat::UsesAlpha;
