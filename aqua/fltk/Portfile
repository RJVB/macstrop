# -*- Mode: Tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem      1.0
PortGroup       github 1.0
PortGroup       locale_select 1.0
PortGroup       LTO 1.0
PortGroup       cmake 1.1
PortGroup       compress_workdir 1.0

name            fltk
categories      aqua x11 devel
license         LGPL
platforms       macosx linux
maintainers     {michaelld @michaelld} openmaintainer
description     Fast Light Tool Kit
homepage        https://www.fltk.org/

long_description \
    FLTK (pronounced fulltick) \
    is a cross-platform C++ GUI toolkit for UNIX/Linux (X11), \
    Microsoft Windows, and Mac OS X. \
    FLTK provides modern GUI functionality without the bloat \
    and supports 3D graphics via OpenGL and \
    its built-in GLUT emulation. \
    FLTK is designed to be small and modular enough to be \
    statically linked, but works fine as a shared library. \
    FLTK also includes an excellent UI builder called FLUID \
    that can be used to create applications in minutes.

subport fltk-devel {}

if {${subport} eq ${name}} {

    conflicts    fltk-devel
    long_description ${long_description} \
        This port provides the release of FLTK, typically updated a few times a year.

    github.setup    fltk fltk 1.3.8 release-
    checksums       rmd160  6fd56dce18d56e10c0cfbc133a76d9559edf788c \
                    sha256  41d11d83fcbb7431d290ec2a02b2d1044349410202fb9cde4b63d7cc614ea2d9 \
                    size    5165067
    revision        1

    # overload the github livecheck regex to look for versions that
    # are just numbers and '.', no letters (e.g., "3.7.3_rc2").

    github.livecheck.regex  {([0-9.]+)}

} else {

    conflicts    fltk
    long_description ${long_description} \
        This port provides the snapshot released of FLTK, typically updated a few times a month.

    github.setup    fltk fltk e5c3caeb6b3824eb933cbb3acc57365d9b2ed6d4
    version         20221202-[string range ${github.version} 0 7]
    checksums       rmd160  d70358bac335cdaca9952576890f4d9a1776eadb \
                    sha256  d500a7d34e8cb8756ab509168c086f23089c6530144c19512c781689d2788361 \
                    size    6218998
    revision        0

}

depends_build   port:autoconf
depends_lib     path:include/turbojpeg.h:libjpeg-turbo \
                port:libpng \
                port:zlib

patch.pre_args  -Np1

patchfiles-append \
                patch-darwin-cmake.diff \
                patch-darwin-x11.diff
platform linux {
    patchfiles-append \
                patch-fpic.diff
}

post-patch {

#    reinplace "s|/Applications|${applications_dir}/fltk|g" \
#        ${worksrcpath}/fluid/Makefile \
#        ${worksrcpath}/test/Makefile
#
#    # Disable silent rules
#    reinplace "/^\\.SILENT:$/d" ${worksrcpath}/makeinclude.in

#    # tell fltk's make script to create config.sub, which is required
#    # before configure will execute properly.  This command actually
#    # runs configure through once, to create the file; we then call
#    # configure manually with the correct arguments, which overwrites
#    # this (and other) files to be what we want.  Make sure CC is set
#    # correctly per "using the right compiler".  While this port will
#    # work correctly without this addition, doing this allows the port
#    # to not error out on dev's systems set up to check whether the
#    # right compiler is being used.
#
#    system -W ${worksrcpath} "CC=${configure.cc} make config.sub"

}

platform darwin {

    variant x11 conflicts cairo description {install the X11 version (conflicts with +cairo for now)} {
        depends_lib-append \
                port:fontconfig \
                port:xorg-libX11 \
                port:Xft2 \
                port:xorg-libXfixes \
                port:xorg-libXext \
                port:xorg-libXcursor \
                port:xorg-libXinerama \
                port:xorg-libXrandr \
                port:xrender \
                port:mesa
    }

    pre-configure {
#         configure.args-append \
#             --with-archflags="[get_canonical_archflags]"
        configure.cc_archflags
        configure.cxx_archflags
        configure.objc_archflags
        configure.objcxx_archflags
        configure.ld_archflags
    }
}

# configure.args  --enable-shared \
#                 --disable-localjpeg \
#                 --disable-localzlib \
#                 --disable-localpng

cmake.save_configure_cmd "log too"

configure.args-append \
                -DOPTION_BUILD_SHARED_LIBS=ON \
                -DOPTION_USE_SYSTEM_LIBJPEG=ON \
                -DOPTION_USE_SYSTEM_ZLIB=ON \
                -DOPTION_USE_SYSTEM_LIBPNG=ON \
                -DFLTK_BUILD_EXAMPLES=ON
# if {${os.platform} eq "darwin"} {
#     configure.args-append \
#                 "-DOPTION_OPTIM=\"[get_canonical_archflags] ${configure.cflags}\""
# } else {
#     configure.args-append \
#                 "-DOPTION_OPTIM=\"[get_canonical_archflags] ${configure.cxxflags} -fPIC\""
# }

configure.cppflags-delete -I${prefix}/include
configure.ldflags-delete -L${prefix}/lib
configure.universal_args-delete --disable-dependency-tracking

post-configure {
# fltk-config doesn't exist yet when using cmake:
#     reinplace -E {s|-arch [a-z0-9_]+||g} ${worksrcpath}/fltk-config
#     if {${configure.sdkroot} ne ""} {
#         reinplace -E "s|-\[^ \"\]+[quotemeta ${configure.sdkroot}]||g" ${worksrcpath}/fltk-config
#     }
}

variant cairo description {enable Cairo features} {
    depends_lib-append \
                port:cairo
}

if {[variant_exists x11] && [variant_isset x11]} {
    post-patch {
        reinplace "s|@PREFIX@|${prefix}|g" ${worksrcpath}/src/screen_xywh.cxx
    }
#     configure.args-append \
#                 --enable-x11
    configure.args-append \
                -DOPTION_APPLE_X11=ON
}
if {[variant_isset cairo]} {
#     configure.args-append \
#                 --enable-cairo \
#                 --enable-cairoext
    configure.args-append \
                -DOPTION_CAIRO=ON \
                -DOPTION_CAIROEXT=ON
}

# destroot.target install install-desktop

platform darwin {
    post-destroot {
        file delete ${destroot}${prefix}/bin/fluid.icns
        xinstall -m 755 -d ${destroot}${applications_dir}/fltk
        file rename ${destroot}${prefix}/bin/fluid.app ${destroot}${applications_dir}/fltk/fluid.app
        ln -s ${applications_dir}/fltk/fluid.app/Contents/MacOS/fluid ${destroot}${prefix}/bin
        reinplace -E {s|-arch [a-z0-9_]+||g} ${destroot}${prefix}/bin/fltk-config
        if {${configure.sdkroot} ne ""} {
            reinplace -E "s|-\[^ \"\]+[quotemeta ${configure.sdkroot}]||g" ${worksrcpath}/fltk-config
        }
    }
}
platform linux {
    destroot.violate_mtree yes
}
post-destroot {
    # remove the CMake directory as it causes things to work too differently
    file delete -force ${destroot}${prefix}/share/fltk
}
