# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           qt5 1.0
PortGroup           cmake 1.1
PortGroup           github 1.0
PortGroup           compress_workdir 1.0
PortGroup			LTO 1.0

name                MuseScore

description         Qt5-based Music notation & composition software.
long_description    MuseScore is a Music notation and composition application with many features:\n\
* WYSIWYG design, notes are entered on a \"virtual notepaper\"\n\
* TrueType font(s) for printing & display allows for high quality scaling to all sizes\n\
* Easy & fast note entry\n\
* Many editing functions\n\
* MusicXML import/export\n\
* MIDI (SMF) import/export\n\
* MuseData import\n\
* MIDI input for note entry\n\
* Integrated sequencer and software synthesiser to play the score\n\
* Print or create pdf files

license             GPL-2
maintainers         gmail.com:rjvbertin openmaintainer
platforms           darwin linux

subport "${name}-devel" {
    long_description-append \
                    This port follows the 3.x branch.
}

if {${subport} eq "${name}-devel"} {
    # after `git tag 3.4.2 -m "release 3.4.2" b503e4277b3d7d8a86a155facaca15ae706d395d` in 3.x branch
    # after `git tag 3.5.0 -m "release 3.5.0" bd675e7ce8a2385407ec5997ab0938a2bcdcb839` in 3.x branch
    # after `git tag 3.6.2 -m "release 3.6.2" 84f6aa76ca2a9a3b41b5114b1715ab23b09f2887` in 3.x branch
    github.setup    musescore MuseScore 2513676e512d29d554cb6c4d37d3efaf53ea2c5b
    version         3.6.2.75 ; revision 4
    fetch.type      git
    # limit the clone history depth
    git.url-prepend --depth 100
    distname        ${name}-git
    pre-build {
        system -W ${worksrcpath} "echo \"`git describe` @ `date`\" > mscore/revision.h"
    }
} else {
    version         3.1.0.1743
    replaced_by     ${name}-devel
    PortGroup       obsolete 1.0
}

homepage            https://www.musescore.com

patch.pre_args      -Np1
patchfiles-append   patch-cmakefile.diff \
                    patch-nowebengine.diff \
                    patch-enable-quit-menu.diff \
                    patch-systemstyle+prefs.diff \
                    patch-mac-font-loading.diff \
                    patch-asserts.diff \
                    patch-clang-fixes.diff \
                    patch-print-via-preview.diff \
                    patch-support-older.diff \
                    patch-window-title.diff \
                    patch-fix-avsomr.diff \
                    patch-temp-fixes.diff

post-patch {
    reinplace "s|@PREFIX@|${prefix}|g" ${worksrcpath}/audio/midi/fluid/fluid.cpp
}

cmake.save_configure_cmd "install log"

if {[variant_exists qt5stock_kde] && [variant_isset qt5stock_kde]} {
    cmake_share_module_dir \
                    "[lindex $qt_cmake_module_dir 0]\;[lindex $cmake_share_module_dir 0]"
}

compiler.cxx_standard 2011

# ensure pre-compiled headers and the possible use of ccache can co-exist
configure.env-append \
                    "CCACHE_SLOPPINESS=pch_defines,time_macros"
build.env-append    "CCACHE_SLOPPINESS=pch_defines,time_macros"

configure.args-append \
				-DQMAKE=${qt_qmake_cmd} \
                    -DBUILD_TELEMETRY_MODULE=OFF \
                    -DCMAKE_BUILD_WITH_INSTALL_RPATH:BOOL=ON \
                    -DCMAKE_STRIP:FILEPATH=/bin/echo \
                    -DOMR=ON \
                    -DAVSOMR=ON \
                    -DOCR=OFF \
                    -DUSE_SYSTEM_FREETYPE=ON \
                    -DUSE_SYSTEM_POPPLER=ON \
                    -DBUILD_JACK=OFF
if {[info exists macosx_deployment_target]} {
    configure.args-append \
                    -DCMAKE_OSX_DEPLOYMENT_TARGET=${macosx_deployment_target}
}

if {${os.platform} ne "darwin"} {
    depends_lib-append \
                    port:portmidi
    cmake.install_rpath-prepend \
                    ${qt_libs_dir} \
                    ${prefix}/${build_arch}-linux-gnu
    # activate portaudio support on Linux too and use precompiled headers, as
    # well as OCR support (when upstream has it working again;
    # assuming tesseract 3.0 is available through the host, for now)
    configure.args-append \
                    -DUSE_PORTAUDIO=ON
#     if {${cmake::ccache_cache}} {
#         configure.args-append \
#                     -DBUILD_PCH=OFF
#     } else {
        configure.args-append \
                    -DBUILD_PCH=ON
#     }
    variant libcxx description {highly experimental option to build against libc++. \
            Requires using clang and an independently provided libc++ installation.} {}
    if {[variant_isset libcxx]} {
        configure.cxx_stdlib \
                        libc++
        configure.cxxflags-delete \
                    -stdlib=libstdc++
        configure.cxxflags-append \
                    -stdlib=libc++
    }
    post-destroot {
        xinstall -m 755 -d ${destroot}${prefix}/share/sounds/sf2
        file rename ${destroot}${prefix}/share/mscore-3.6/sound/MuseScore_General.sf3 \
            ${destroot}${prefix}/share/sounds/sf2/MuseScore_General.sf3
        file rename ${destroot}${prefix}/bin/mscore ${destroot}${prefix}/bin/mscore.bin
        qt5.add_app_wrapper mscore mscore.bin
    }
} else {
    configure.args-append \
                    -DUSE_PULSEAUDIO=OFF \
                    -DBUNDLE_INSTALL_DIR=${qt_apps_dir} \
                    -DBUILD_PCH=ON
    post-destroot {
        xinstall -m 755 -d ${destroot}${qt_apps_dir}
        file rename ${destroot}${prefix}/mscore.app ${destroot}${qt_apps_dir}/MuseScore.app
        xinstall -m 755 -d ${destroot}${prefix}/share/sounds/sf2
        file rename ${destroot}${qt_apps_dir}/MuseScore.app/Contents/Resources/sound/MuseScore_General.sf3 \
            ${destroot}${prefix}/share/sounds/sf2/MuseScore_General.sf3
#         ln -s ${prefix}/share/sounds/sf2/MuseScore_General.sf3 \
#             ${destroot}${qt_apps_dir}/MuseScore.app/Contents/Resources/sound/MuseScore_General.sf3
        file delete -force ${destroot}${qt_apps_dir}/MuseScore.app/Contents/Resources/qml
        ln -s ${qt_qml_dir} ${destroot}${qt_apps_dir}/MuseScore.app/Contents/Resources
        qt5.add_app_wrapper mscore MuseScore mscore
    }
}

variant qtwebengine description {use QtWebEngine} {}

if {[variant_isset qtwebengine]} {
    qt5.depends_component \
                    qtwebengine
    configure.args-append \
                    -DBUILD_WEBENGINE=ON
} else {
    configure.args-append \
                    -DBUILD_WEBENGINE=OFF
}

qt5.depends_component \
                    qtsvg qttools qtdeclarative

depends_lib-append  port:portaudio \
                    port:libsndfile \
                    port:lame \
                    port:libvorbis \
                    port:libogg \
                    port:freetype \
                    port:poppler-qt5

build.post_args-append -k
