diff --git a/all.h b/all.h
index 3c0cdd715ac742a249c5ec81a031c9f7732cb297..f4a99f7b060b04ea97df435300b5610fecf927bc 100644
--- a/all.h
+++ b/all.h
@@ -207,12 +207,12 @@
 
 // change Q_ASSERT to NOP if not debugging
 
-#ifdef QT_NO_DEBUG
-#undef Q_ASSERT_X
-#define Q_ASSERT_X(a,b,c)
-#undef Q_ASSERT
-#define Q_ASSERT(a)
-#endif
+// #ifdef QT_NO_DEBUG
+// #undef Q_ASSERT_X
+// #define Q_ASSERT_X(a,b,c)
+// #undef Q_ASSERT
+// #define Q_ASSERT(a)
+// #endif
 
 #if (defined (_MSCVER) || defined (_MSC_VER))
    // Undefined problematic #def'd macros in Microsoft headers
diff --git a/libmscore/score.cpp b/libmscore/score.cpp
index 2560a2a0ce8df079d5fd18470f3efec2fd62c8a4..71690f3b4cd3467751772aadd6c518cdf75d6e62 100644
--- a/libmscore/score.cpp
+++ b/libmscore/score.cpp
@@ -3738,6 +3738,10 @@ void Score::setPos(POS pos, Fraction tick)
       if (tick < Fraction(0,1))
             tick = Fraction(0,1);
       Q_ASSERT(tick <= lastMeasure()->endTick());
+	  if (tick > lastMeasure()->endTick()) {
+		  qWarning() << Q_FUNC_INFO << "Tick" << tick << "at pos" << int(pos) << "is past lastMeasure()->endTick()" << lastMeasure()->endTick();
+		  return;
+	  }
 
       _pos[int(pos)] = tick;
       // even though tick position might not have changed, layout might have
