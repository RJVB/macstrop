commit bcc74f4dafee25ea89f1d3144646cba7e30f9908
Author: Werner Lemberg <wl@gnu.org>
Date:   Thu Mar 30 13:14:43 2017 +0200

    [truetype] Allow linear scaling for unhinted rendering (#50470).
    
    * src/truetype/ttdriver.c (tt_size_request): Revert change from
    2011-07-16; the intended metrics fix seems now to be implemented in
    a different way, making the patch unnecessary.  Note that this
    change was usually patched out by all major GNU/Linux distributions
    due to heavy side effects.
    
    * src/truetype/ttgload.c (compute_glyph_metrics, TT_Load_Glyph):
    Refer to the metrics of the `TT_Size' object.

diff --git ChangeLog.28 ChangeLog.28
index f6de03c78e954a163969fc5fbdb4b0509e3da7c9..18555a6c4f62c5b69923c67076e09eca59b44541 100644
--- ChangeLog.28
+++ ChangeLog.28
@@ -1758,7 +1758,7 @@
 	glyph indices larger than `mapCount' as described in the
 	specification.
 
-2017-03-30  Werner Lemberg  <wl@gnu.org>
+2017-03-30  Werner Lemberg  <wl@gnu.org> REVERTED
 
 	[truetype] Allow linear scaling for unhinted rendering (#50470).
 
diff --git src/truetype/ttdriver.c src/truetype/ttdriver.c
index a1653b241cabfc3b051b05c8fc7daf7d6d3010c7..0259de80ceb08f882433320db79c205e56c2a8e8 100644
--- src/truetype/ttdriver.c
+++ src/truetype/ttdriver.c
@@ -356,7 +356,8 @@
 
     if ( FT_IS_SCALABLE( size->face ) )
     {
-      error = tt_size_reset( ttsize, 0 );
+      error                = tt_size_reset( ttsize, 0 );
+      if ( !error ) ttsize->root.metrics = *ttsize->metrics;
 
 #ifdef TT_USE_BYTECODE_INTERPRETER
       /* for the `MPS' bytecode instruction we need the point size */
diff --git src/truetype/orig.ttgload.c src/truetype/ttgload.c
index 1dd319d..42a064b 100644
--- src/truetype/orig.ttgload.c
+++ src/truetype/ttgload.c
@@ -2239,7 +2239,7 @@
 
     y_scale = 0x10000L;
     if ( ( loader->load_flags & FT_LOAD_NO_SCALE ) == 0 )
-      y_scale = size->metrics->y_scale;
+      y_scale = size->root.metrics.y_scale;
 
     if ( glyph->format != FT_GLYPH_FORMAT_COMPOSITE )
       FT_Outline_Get_CBox( &glyph->outline, &bbox );
@@ -2271,7 +2271,7 @@
 
 
       widthp = tt_face_get_device_metrics( face,
-                                           size->metrics->x_ppem,
+                                           size->root.metrics.x_ppem,
                                            glyph_index );
 
 #ifdef TT_SUPPORT_SUBPIXEL_HINTING_INFINALITY
@@ -3000,7 +3000,7 @@
     /* TrueType glyphs at all sizes using the bytecode interpreter. */
     /*                                                              */
     if ( !( load_flags & FT_LOAD_NO_SCALE ) &&
-         size->metrics->y_ppem < 24         )
+         size->root.metrics.y_ppem < 24         )
       glyph->outline.flags |= FT_OUTLINE_HIGH_PRECISION;
 
     FT_TRACE1(( "  subglyphs = %u, contours = %hd, points = %hd,"
