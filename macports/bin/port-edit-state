#!/bin/sh

PORT=""
OPTS=""

while [ $# != 0 ] ;do
	case $1 in
		--editor)
			shift
			EDITOR="$1"
			if [ "${EDITOR}" = "native" ] ;then
				EDITOR="open -t"
			fi
			;;
		-*|+*)
			OPTS="${OPTS} $1"
			;;
		*)
			PORT="${PORT} $1"
			;;
	esac
	shift
done

# this script may have to be executed as root (sudo), which may mean it doesn't
# inherit the user's PATH. We expect `port-update-state-checksum` to live in
# the same directory as us.
SELF="`readlink ${0}`"
if [ "${SELF}" != "" ] ;then
	DNAME="`dirname ${SELF}`"
else
	DNAME="`dirname ${0}`"
fi

if [ "${EDITOR}" != "" -a "${PORT}" != "" ] ;then
	for p in $PORT ;do
		if [ "${PORTDIR}" != "${p}" ] ;then
# 			pWD="`port work ${p}`" ; export pWD
# 			PORTDIR="${p}" ; export PORTDIR
# 			if [ -e "${p}/Portfile" ] ;then
# 				pPFILE="${p}/Portfile"
# 				p="`port -q info --name ${p}`"
# 				echo "\"${PORTDIR}\" -> ${p}"
# 			else
# 				pPFILE="`port file ${p} 2>/dev/null`"
# 			fi
# 			export portName=${p}
# 			export pPFILE
			eval `${DNAME}/port-dirs.tcl ${p}`
		fi
		STATEFILE=${pWD}/.macports.${p}.state
		if [ -e ${STATEFILE} ] ;then
			# invoke port-update-state-checksum with the portdir, so we're certain to
			# get the correct statefile!
			#export PORTDIR="`dirname \"${pPFILE}\"`"
			${DNAME}/port-update-state-checksum "${PORTDIR}"
			#echo ${EDITOR} ${OPTS} ${pWD}/.macports.${p}.state
			${EDITOR} ${OPTS} ${STATEFILE}
		fi
	done
else
	echo "Usage: `basename $0` [--editor app] [-options] <port1> [port2 [port3 [...]]]"
	echo "This utility allows you to edit the statefile from a port's work directory"
	echo "Use --editor native to invoke the default native text editor"
	echo "Remember to quote spaces in the editor app name or in options that take an argument"
	echo "	(e.g. `basename $0` \"-t tabsize\") foo"
fi
