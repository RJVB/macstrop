diff --git kdevplatform/sublime/idealdockwidget.cpp kdevplatform/sublime/idealdockwidget.cpp
index 0cfa8355054dfec01657d8024c9360fa04f51f1c..46a20c64bd63307e17de1a4a6e774dcdc05931e3 100644
--- kdevplatform/sublime/idealdockwidget.cpp
+++ kdevplatform/sublime/idealdockwidget.cpp
@@ -31,6 +31,7 @@
 #include <KSharedConfig>
 #include <KShortcutWidget>
 
+#include <QScopedPointer>
 #include <QAbstractButton>
 #include <QDialog>
 #include <QDialogButtonBox>
@@ -95,30 +96,30 @@ void IdealDockWidget::contextMenuRequested(const QPoint &point)
     QWidget* senderWidget = qobject_cast<QWidget*>(sender());
     Q_ASSERT(senderWidget);
 
-    QMenu menu(senderWidget);
-    menu.addSection(windowIcon(), m_view->document()->title());
+    QScopedPointer<QMenu, QScopedPointerDeleteLater> menu(new QMenu(senderWidget));
+    menu->addSection(windowIcon(), m_view->document()->title());
 
     QList< QAction* > viewActions = m_view->contextMenuActions();
     if(!viewActions.isEmpty()) {
-        menu.addActions(viewActions);
-        menu.addSeparator();
+        menu->addActions(viewActions);
+        menu->addSeparator();
     }
 
     ///TODO: can this be cleaned up?
     if(QToolBar* toolBar = widget()->findChild<QToolBar*>()) {
-        menu.addAction(toolBar->toggleViewAction());
-        menu.addSeparator();
+        menu->addAction(toolBar->toggleViewAction());
+        menu->addSeparator();
     }
 
     /// start position menu
-    QMenu* positionMenu = menu.addMenu(i18n("Toolview Position"));
+    QMenu* positionMenu = menu->addMenu(i18n("Toolview Position"));
 
-    QActionGroup* g = new QActionGroup(positionMenu);
+    QScopedPointer<QActionGroup, QScopedPointerDeleteLater> g(new QActionGroup(positionMenu));
 
-    QAction *left = new QAction(i18nc("toolview position", "Left"), g);
-    QAction *bottom = new QAction(i18nc("toolview position", "Bottom"), g);
-    QAction *right = new QAction(i18nc("toolview position", "Right"), g);
-    QAction *detach = new QAction(i18nc("toolview position", "Detached"), g);
+    QAction *left = new QAction(i18nc("toolview position", "Left"), g.data());
+    QAction *bottom = new QAction(i18nc("toolview position", "Bottom"), g.data());
+    QAction *right = new QAction(i18nc("toolview position", "Right"), g.data());
+    QAction *detach = new QAction(i18nc("toolview position", "Detached"), g.data());
 
     for (auto action : {left, bottom, right, detach}) {
         positionMenu->addAction(action);
@@ -134,15 +135,15 @@ void IdealDockWidget::contextMenuRequested(const QPoint &point)
         right->setChecked(true);
     /// end position menu
 
-    menu.addSeparator();
+    menu->addSeparator();
 
-    QAction *setShortcut = menu.addAction(QIcon::fromTheme(QStringLiteral("configure-shortcuts")), i18n("Assign Shortcut..."));
+    QAction *setShortcut = menu->addAction(QIcon::fromTheme(QStringLiteral("configure-shortcuts")), i18n("Assign Shortcut..."));
     setShortcut->setToolTip(i18n("Use this shortcut to trigger visibility of the toolview."));
 
-    menu.addSeparator();
-    QAction* remove = menu.addAction(QIcon::fromTheme(QStringLiteral("dialog-close")), i18n("Remove Toolview"));
+    menu->addSeparator();
+    QAction* remove = menu->addAction(QIcon::fromTheme(QStringLiteral("dialog-close")), i18n("Remove Toolview"));
 
-    QAction* triggered = menu.exec(senderWidget->mapToGlobal(point));
+    QAction* triggered = menu->exec(senderWidget->mapToGlobal(point));
 
     if (triggered)
     {
