diff --git a/plugins/bazaar/bazaarplugin.cpp b/plugins/bazaar/bazaarplugin.cpp
index e4463a5ff71b3a59d17ed86aaaa73941ee9b0d09..37aeb377c519325d863c5f21162eefca21b41cef 100644
--- a/plugins/bazaar/bazaarplugin.cpp
+++ b/plugins/bazaar/bazaarplugin.cpp
@@ -125,6 +125,7 @@ VcsJob* BazaarPlugin::createWorkingCopy(const VcsLocation& sourceRepository, con
 VcsJob* BazaarPlugin::diff(const QUrl& fileOrDirectory, const VcsRevision& srcRevision, const VcsRevision& dstRevision, VcsDiff::Type, IBasicVersionControl::RecursionMode recursion)
 {
     Q_UNUSED(recursion);
+    // TODO support m_contextLines (less urgent because Phabricator doesn't support Bazaar)
     VcsJob* job = new DiffJob(BazaarUtils::workingCopy(fileOrDirectory), BazaarUtils::getRevisionSpecRange(srcRevision, dstRevision), fileOrDirectory, this);
     return job;
 }
diff --git a/plugins/cvs/cvsplugin.cpp b/plugins/cvs/cvsplugin.cpp
index b37980b20487150f3763422edc6f744b78536f35..e83b32bfb2e4ee64667a94c58acd95e4de26b53b 100644
--- a/plugins/cvs/cvsplugin.cpp
+++ b/plugins/cvs/cvsplugin.cpp
@@ -395,7 +395,8 @@ KDevelop::VcsJob * CvsPlugin::commit(const QString & message, const QList<QUrl>
 
 KDevelop::VcsJob * CvsPlugin::diff(const QUrl & fileOrDirectory, const KDevelop::VcsRevision & srcRevision, const KDevelop::VcsRevision & dstRevision, KDevelop::VcsDiff::Type, KDevelop::IBasicVersionControl::RecursionMode)
 {
-    CvsJob* job = d->m_proxy->diff(fileOrDirectory, srcRevision, dstRevision, QStringLiteral("-uN")/*always unified*/);
+    QString options = m_contextLines > 0? QStringLiteral("-uN -context=%1").arg(m_contextLines) : QStringLiteral("-uN")/*always unified*/;
+    CvsJob* job = d->m_proxy->diff(fileOrDirectory, srcRevision, dstRevision, options);
     return job;
 }
 
diff --git a/plugins/cvs/cvsplugin.h b/plugins/cvs/cvsplugin.h
index fa5efe6f9fbeaac0e327c5a29226f56f97e9dbbc..3c7c399a68e671787643b0f65ab66e379e597ec9 100644
--- a/plugins/cvs/cvsplugin.h
+++ b/plugins/cvs/cvsplugin.h
@@ -75,7 +75,7 @@ public:
     KDevelop::VcsJob* diff(const QUrl& fileOrDirectory,
                                    const KDevelop::VcsRevision& srcRevision,
                                    const KDevelop::VcsRevision& dstRevision,
-                                   KDevelop::VcsDiff::Type,
+                                   KDevelop::VcsDiff::Type=KDevelop::VcsDiff::DiffUnified,
                                    KDevelop::IBasicVersionControl::RecursionMode = KDevelop::IBasicVersionControl::Recursive) override;
     KDevelop::VcsJob* log(const QUrl& localLocation,
                                   const KDevelop::VcsRevision& rev,
diff --git a/plugins/git/gitplugin.cpp b/plugins/git/gitplugin.cpp
index 35e2ec88bc16a35904022790269a47b33b2ad1ab..5c33c90e556c4512b17e88f02a2c2c88c4327310 100644
--- a/plugins/git/gitplugin.cpp
+++ b/plugins/git/gitplugin.cpp
@@ -377,12 +377,15 @@ VcsJob* GitPlugin::diff(const QUrl& fileOrDirectory, const KDevelop::VcsRevision
 
     DVcsJob* job = new GitJob(dotGitDirectory(fileOrDirectory), this, KDevelop::OutputJob::Silent);
     job->setType(VcsJob::Diff);
-    *job << "git" << "diff" << "--no-color" << "--no-ext-diff";
+    *job << "git" << "diff" << "--no-color" << "--no-ext-diff" << "--full-index";
     if (!usePrefix()) {
         // KDE's ReviewBoard now requires p1 patchfiles, so `git diff --no-prefix` to generate p0 patches
         // has become optional.
         *job << "--no-prefix";
     }
+    if (m_contextLines > 0) {
+        *job << QStringLiteral("-U%1").arg(m_contextLines);
+    }
     if (dstRevision.revisionType() == VcsRevision::Special &&
          dstRevision.specialType() == VcsRevision::Working) {
         if (srcRevision.revisionType() == VcsRevision::Special &&
diff --git a/plugins/patchreview/patchreview.cpp b/plugins/patchreview/patchreview.cpp
index 47b6fa255ac06e6221f09cb3f9c45d1149f15b15..8fc87495d8020f13b137c750c338b88d6dcd3ed5 100644
--- a/plugins/patchreview/patchreview.cpp
+++ b/plugins/patchreview/patchreview.cpp
@@ -223,6 +223,17 @@ void PatchReviewPlugin::forceUpdate() {
     }
 }
 
+void PatchReviewPlugin::forceUpdateWithContext(int contextLines) {
+    if( m_patch ) {
+        // register the requested number of lines of context
+        // and regenerate the patch.
+        m_patch->setContextLines(contextLines);
+        m_patch->update();
+
+        notifyPatchChanged();
+    }
+}
+
 void PatchReviewPlugin::updateKompareModel() {
     if ( !m_patch ) {
         ///TODO: this method should be cleaned up, it can be called by the timer and
diff --git a/plugins/patchreview/patchreview.h b/plugins/patchreview/patchreview.h
index 92090e124a495377a44dcbc6ac37fe9c740f0ea8..e6b81327a7c8e9a490098a750862609480520fb4 100644
--- a/plugins/patchreview/patchreview.h
+++ b/plugins/patchreview/patchreview.h
@@ -100,6 +100,7 @@ public Q_SLOTS :
     void highlightPatch();
     void updateKompareModel();
     void forceUpdate();
+    void forceUpdateWithContext(int contextLines);
     void areaChanged(Sublime::Area* area);
     void executeFileReviewAction();
 
diff --git a/plugins/patchreview/patchreview.ui b/plugins/patchreview/patchreview.ui
index c706c0cca2b6387ccbd9dbd132d1b0eae1870df8..37c1aa3fc3dd69e6328e3e92d60b264db555f610 100644
--- a/plugins/patchreview/patchreview.ui
+++ b/plugins/patchreview/patchreview.ui
@@ -72,6 +72,28 @@
         </spacer>
        </item>
        <item>
+        <widget class="QSpinBox" name="diffContext">
+         <property name="toolTip">
+          <string>lines of context for the unified diff</string>
+         </property>
+         <property name="specialValueText">
+          <string>max</string>
+         </property>
+         <property name="suffix">
+          <string extracomment="lines of context text"/>
+         </property>
+         <property name="minimum">
+          <number>0</number>
+         </property>
+         <property name="maximum">
+          <number>999</number>
+         </property>
+         <property name="value">
+          <number>3</number>
+         </property>
+        </widget>
+       </item>
+       <item>
         <widget class="QPushButton" name="updateButton">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
diff --git a/plugins/patchreview/patchreviewtoolview.cpp b/plugins/patchreview/patchreviewtoolview.cpp
index c088414acf20dec576355524e8df0ef93d48686e..b9439c5c9ee166f4cc32c76250771dc0fdf8cd7a 100644
--- a/plugins/patchreview/patchreviewtoolview.cpp
+++ b/plugins/patchreview/patchreviewtoolview.cpp
@@ -126,6 +126,11 @@ void PatchReviewToolView::startingNewReview()
 }
 
 void PatchReviewToolView::patchChanged() {
+    if(m_resetCheckedUrls) {
+        // set the default number of context lines
+        m_editPatch.diffContext->setValue(3);
+    }
+
     fillEditFromPatch();
     kompareModelChanged();
 
@@ -251,6 +256,8 @@ void PatchReviewToolView::showEditDialog() {
     //connect( this, SIGNAL(finished(int)), this, SLOT(slotEditDialogFinished(int)) );
 
     connect( m_editPatch.updateButton, &QPushButton::clicked, m_plugin, &PatchReviewPlugin::forceUpdate );
+    connect( m_editPatch.diffContext, static_cast<void(QSpinBox::*)(int)>(&QSpinBox::valueChanged),
+             m_plugin, &PatchReviewPlugin::forceUpdateWithContext );
 
     connect( m_editPatch.testsButton, &QPushButton::clicked, this, &PatchReviewToolView::runTests );
 
diff --git a/plugins/perforce/perforceplugin.cpp b/plugins/perforce/perforceplugin.cpp
index fb16f9daa60940810114138c3e0ccf640cea03ed..c083a4f803d2121024e071084f09a1d84d529a32 100644
--- a/plugins/perforce/perforceplugin.cpp
+++ b/plugins/perforce/perforceplugin.cpp
@@ -328,7 +328,11 @@ KDevelop::VcsJob* PerforcePlugin::diff(const QUrl& fileOrDirectory, const KDevel
     case VcsRevision::Special:
         switch (dstRevision.revisionValue().value<VcsRevision::RevisionSpecialType>()) {
         case VcsRevision::Working:
-            *job << m_perforceExecutable << "diff" << "-du" << depotSrcFileName;
+            if (m_contextLines > 0) {
+                *job << m_perforceExecutable << "diff" << "-dU" << QString::number(m_contextLines) << depotSrcFileName;
+            } else {
+                *job << m_perforceExecutable << "diff" << "-du" << depotSrcFileName;
+            }
             break;
         case VcsRevision::Start:
         case VcsRevision::UserSpecialType:
diff --git a/plugins/subversion/kdevsvnplugin.cpp b/plugins/subversion/kdevsvnplugin.cpp
index cb70196f6e927d0e311080906f7cb832f56611c4..54f95a9ce31f7a67875e27413151a6dc8c5169d0 100644
--- a/plugins/subversion/kdevsvnplugin.cpp
+++ b/plugins/subversion/kdevsvnplugin.cpp
@@ -245,6 +245,7 @@ KDevelop::VcsJob* KDevSvnPlugin::diff2(const KDevelop::VcsLocation& src,
                                        KDevelop::VcsDiff::Type diffType,
                                        KDevelop::IBasicVersionControl::RecursionMode recurse)
 {
+    // TODO: support custom context lines in SvnDiffJob
     SvnDiffJob* job = new SvnDiffJob(this);
     job->setSource(src);
     job->setDestination(dst);
diff --git a/vcs/interfaces/ibasicversioncontrol.h b/vcs/interfaces/ibasicversioncontrol.h
index f438c54bf0d7fb90663bb083bcde0c5860c7f739..ea461e4ed866d25355517268a45b4fc507cff617 100644
--- a/vcs/interfaces/ibasicversioncontrol.h
+++ b/vcs/interfaces/ibasicversioncontrol.h
@@ -187,9 +187,20 @@ public:
                             RecursionMode recursion = IBasicVersionControl::Recursive ) = 0;
 
     /**
+     * change the number of lines of context the patch generated by diff() should show
+     * 
+     * May not be supported by all VCS plugins.
+     * @param contextLines The number of context lines included before and after each
+     * hunk in a unified diff. Special values are -1 for the VCS default (usually 3)
+     * and 0 for the largest possible value (intended to include the whole file as context).
+     */
+    virtual void setDiffContextLines(int contextLines) { m_contextLines = contextLines == 0 ? INT_MAX : contextLines; }
+
+    /**
      * Retrieves a diff between two revisions of a file
      *
-     * The diff is in unified diff format for text files by default
+     * The diff is in unified diff format for text files by default and may
+     * use the context size set through setDiffContextLines.
      */
     virtual VcsJob* diff( const QUrl& fileOrDirectory,
                           const VcsRevision& srcRevision,
@@ -271,6 +282,8 @@ public:
      * The default implementation does nothing.
      */
     virtual void setupCommitMessageEditor(const QUrl&, KTextEdit* edit) const;
+protected:
+    int m_contextLines = -1;
 };
 
 }
diff --git a/vcs/interfaces/ipatchsource.h b/vcs/interfaces/ipatchsource.h
index 6e2939d2790a1309251aa73eb446276ab2a05805..4d3d5d718f4d43d8259f0f6271f77b6311c4cdda 100644
--- a/vcs/interfaces/ipatchsource.h
+++ b/vcs/interfaces/ipatchsource.h
@@ -48,6 +48,9 @@ class KDEVPLATFORMVCS_EXPORT IPatchSource : public QObject
         ///should re-compare the files or whatever needs to be done
         ///If the patch has changed, patchChanged needs to be emitted
         virtual void update() = 0;
+        ///change the number of lines of context the patch should show
+        ///virtual so it can be overridden, for instance to call update().
+        virtual void setContextLines(int contextLines) { m_contextLines = contextLines; }
 
         ///Name of the patch file
         virtual QUrl file() const = 0;
@@ -91,6 +94,8 @@ class KDEVPLATFORMVCS_EXPORT IPatchSource : public QObject
     Q_SIGNALS:
         ///Should be emitted whenever the patch has changed.
         void patchChanged();
+    protected:
+        int m_contextLines = -1;
 };
 
 class KDEVPLATFORMVCS_EXPORT IPatchReview
diff --git a/vcs/widgets/vcsdiffpatchsources.cpp b/vcs/widgets/vcsdiffpatchsources.cpp
index 42cf1d844922c2076ea2127798ed02e9bf9c639a..5e335627de5cda0e000ccefc2d8fc56526d6e8c7 100644
--- a/vcs/widgets/vcsdiffpatchsources.cpp
+++ b/vcs/widgets/vcsdiffpatchsources.cpp
@@ -207,6 +207,7 @@ void VCSDiffPatchSource::updateFromDiff(VcsDiff vcsdiff)
 void VCSDiffPatchSource::update() {
     if(!m_updater)
         return;
+    m_updater->setContextLines(m_contextLines == 0? INT_MAX : m_contextLines);
     updateFromDiff(m_updater->update());
 }
 
@@ -295,6 +296,7 @@ bool showVcsDiff(IPatchSource* vcsDiff)
 
 VcsDiff VCSStandardDiffUpdater::update() const
 {
+    m_vcs->setDiffContextLines(m_contextLines);
     QScopedPointer<VcsJob> diffJob(m_vcs->diff(m_url,
                                    KDevelop::VcsRevision::createSpecialRevision(KDevelop::VcsRevision::Base),
                                    KDevelop::VcsRevision::createSpecialRevision(KDevelop::VcsRevision::Working)));
diff --git a/vcs/widgets/vcsdiffpatchsources.h b/vcs/widgets/vcsdiffpatchsources.h
index 796eb9eb0abc3d317f08354372893431a1693e82..5ffe7d452d2da6c96bb1105983d54f8207aa4e90 100644
--- a/vcs/widgets/vcsdiffpatchsources.h
+++ b/vcs/widgets/vcsdiffpatchsources.h
@@ -45,6 +45,13 @@ public:
     virtual KDevelop::VcsDiff update() const = 0;
     virtual KDevelop::IBasicVersionControl* vcs() const = 0;
     virtual QUrl url() const = 0;
+    void setContextLines(int n)
+    {
+        m_contextLines = n;
+    }
+    int contextLines() { return m_contextLines; }
+protected:
+    int m_contextLines=-1;
 };
 
 class KDEVPLATFORMVCS_EXPORT VCSStandardDiffUpdater : public VCSDiffUpdater {
