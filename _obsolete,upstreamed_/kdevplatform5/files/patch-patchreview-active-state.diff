diff --git kdevplatform/plugins/patchreview/patchreview.cpp kdevplatform/plugins/patchreview/patchreview.cpp
index 06d514945bad42a4f7169bdd7f633db4fed9e859..5fc51c4d78c5ccb7d0c4e8473c188bef3f7be998 100644
--- kdevplatform/plugins/patchreview/patchreview.cpp
+++ kdevplatform/plugins/patchreview/patchreview.cpp
@@ -383,6 +394,7 @@ void PatchReviewPlugin::closeReview()
                 ICore::self()->uiController()->switchToArea( QStringLiteral("code"), KDevelop::IUiController::ThisWindow );
         }
     }
+    m_active =false;
 }
 
 void PatchReviewPlugin::cancelReview() {
@@ -402,6 +414,7 @@ void PatchReviewPlugin::startReview( IPatchSource* patch, IPatchReview::ReviewMo
     Q_UNUSED( mode );
     emit startingNewReview();
     setPatch( patch );
+    m_active = true;
     QMetaObject::invokeMethod( this, "updateReview", Qt::QueuedConnection );
 }
 
@@ -513,7 +534,8 @@ void PatchReviewPlugin::setPatch( IPatchSource* patch ) {
 
 PatchReviewPlugin::PatchReviewPlugin( QObject *parent, const QVariantList & )
     : KDevelop::IPlugin( QStringLiteral("kdevpatchreview"), parent ),
-    m_patch( nullptr ), m_factory( new PatchReviewToolViewFactory( this ) )
+    m_patch( nullptr ), m_factory( new PatchReviewToolViewFactory( this ) ),
+    m_active( false)
 {
     qRegisterMetaType<const Diff2::DiffModel*>( "const Diff2::DiffModel*" );
 
@@ -543,7 +564,9 @@ PatchReviewPlugin::PatchReviewPlugin( QObject *parent, const QVariantList & )
 }
 
 void PatchReviewPlugin::documentClosed( IDocument* doc ) {
-    removeHighlighting( doc->url() );
+    if (m_active) {
+        removeHighlighting( doc->url() );
+    }
 }
 
 void PatchReviewPlugin::documentSaved( IDocument* doc ) {
@@ -553,12 +576,12 @@ void PatchReviewPlugin::documentSaved( IDocument* doc ) {
     // Also, don't automatically update local patch sources, because
     // they may correspond to static files which don't match any more
     // after an edit was done.
-    if( m_patch && doc->url() != m_patch->file() && !dynamic_cast<LocalPatchSource*>(m_patch.data()) )
+    if( m_active && m_patch && doc->url() != m_patch->file() && !dynamic_cast<LocalPatchSource*>(m_patch.data()) )
         forceUpdate();
 }
 
 void PatchReviewPlugin::textDocumentCreated( IDocument* doc ) {
-    if (m_patch) {
+    if (m_active && m_patch) {
         addHighlighting( doc->url(), doc );
     }
 }

diff --git kdevplatform/plugins/patchreview/patchreview.h kdevplatform/plugins/patchreview/patchreview.h
index 92090e124a495377a44dcbc6ac37fe9c740f0ea8..4f265625c2e61799cb73b2e96e358a7186071d8a 100644
--- kdevplatform/plugins/patchreview/patchreview.h
+++ kdevplatform/plugins/patchreview/patchreview.h
@@ -135,6 +136,7 @@ private:
     uint m_depth = 0; // depth of the patch represented by m_modelList
     typedef QMap< QUrl, QPointer< PatchHighlighter > > HighlightMap;
     HighlightMap m_highlighters;
+    bool m_active;
 
     friend class PatchReviewToolView; // to access slot exporterSelected();
 };
