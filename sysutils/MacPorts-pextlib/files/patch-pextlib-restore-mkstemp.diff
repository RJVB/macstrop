diff --git a/src/pextlib1.0/Pextlib.c b/src/pextlib1.0/Pextlib.c
index f9c88e8..77b3116 100644
--- a/src/pextlib1.0/Pextlib.c
+++ b/src/pextlib1.0/Pextlib.c
@@ -1076,6 +1076,7 @@ int Pextlib_Init(Tcl_Interp *interp)
 	Tcl_CreateObjCommand(interp, "adv-flock", AdvFlockCmd, NULL, NULL);
 	Tcl_CreateObjCommand(interp, "readdir", ReaddirCmd, NULL, NULL);
 	Tcl_CreateObjCommand(interp, "strsed", StrsedCmd, NULL, NULL);
+	Tcl_CreateObjCommand(interp, "mkstemp", MkstempCmd, NULL, NULL);
 	Tcl_CreateObjCommand(interp, "mktemp", MktempCmd, NULL, NULL);
 	Tcl_CreateObjCommand(interp, "mkdtemp", MkdtempCmd, NULL, NULL);
 	Tcl_CreateObjCommand(interp, "existsuser", ExistsuserCmd, NULL, NULL);
diff --git a/src/pextlib1.0/mktemp.h b/src/pextlib1.0/mktemp.h
index 85ffda0..4314211 100644
--- a/src/pextlib1.0/mktemp.h
+++ b/src/pextlib1.0/mktemp.h
@@ -31,3 +31,4 @@
 
 int MkdtempCmd(ClientData, Tcl_Interp *, int, Tcl_Obj *const objv[]);
 int MktempCmd(ClientData, Tcl_Interp *, int, Tcl_Obj *const objv[]);
+int MkstempCmd(ClientData, Tcl_Interp *, int, Tcl_Obj *const objv[]);
diff --git a/src/pextlib1.0/mktemp.c b/src/pextlib1.0/mktemp.c
index a671fb6..83b5257 100644
--- a/src/pextlib1.0/mktemp.c
+++ b/src/pextlib1.0/mktemp.c
@@ -101,3 +101,32 @@ int MktempCmd(ClientData clientData UNUSED, Tcl_Interp *interp, int objc, Tcl_Ob
 	free(template);
 	return TCL_OK;
 }
+
+int MkstempCmd(ClientData clientData UNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *const objv[])
+{
+	Tcl_Channel channel;
+	char *template, *channelname;
+	int fd;
+
+	if (objc != 2) {
+		Tcl_WrongNumArgs(interp, 1, objv, "template");
+		return TCL_ERROR;
+	}
+
+	template = strdup(Tcl_GetString(objv[1]));
+	if (template == NULL)
+		return TCL_ERROR;
+
+	if ((fd = mkstemp(template)) < 0) {
+		Tcl_AppendResult(interp, "mkstemp failed: ", strerror(errno), NULL);
+		free(template);
+		return TCL_ERROR;
+	}
+
+	channel = Tcl_MakeFileChannel((ClientData)(intptr_t)fd, TCL_READABLE|TCL_WRITABLE);
+	Tcl_RegisterChannel(interp, channel);
+	channelname = (char *)Tcl_GetChannelName(channel);
+	Tcl_AppendResult(interp, channelname, " ", template, NULL);
+	free(template);
+	return TCL_OK;
+}
