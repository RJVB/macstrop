commit ffc8d7964d5977c8307a28bb9ffd12cf784d5bbc
Author: Ren√© Bertin <rjvbertin@gmail.com>
Date:   Fri Aug 9 16:38:36 2024 +0200

    patch-progressbar-tweaks.diff

diff --git a/src/pextlib1.0/Pextlib.c b/src/pextlib1.0/Pextlib.c
index c725d7444..0f49a2b81 100644
--- a/src/pextlib1.0/Pextlib.c
+++ b/src/pextlib1.0/Pextlib.c
@@ -1165,6 +1165,40 @@ int ClonefileCmd(ClientData clientData UNUSED, Tcl_Interp *interp, int objc, Tcl
     return TCL_ERROR;
 }
 
+/*
+	processIsForeground
+	
+	synopsis: processIsForeground
+
+	Returns true if the process is running in the foreground or false
+	if in the background.
+*/
+int IsProcessForegroundCmd(ClientData clientData UNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[])
+{
+	/* Check the arg count */
+	if (objc != 1) {
+        Tcl_WrongNumArgs(interp, 1, objv, NULL);
+		return TCL_ERROR;
+	}
+
+	int fd, fdo = fileno(stdout);
+    if ((fd = isatty(fdo) ? fdo : open("/dev/tty", O_RDONLY)) != -1) {
+        const pid_t pgrp = getpgrp();
+        const pid_t tcpgrp = tcgetpgrp(fd);
+        if (fd != fdo) {
+            close(fd);
+        }
+        if (pgrp != -1 && tcpgrp != -1) {
+            Tcl_SetObjResult(interp, Tcl_NewBooleanObj(pgrp == tcpgrp));
+            return TCL_OK;
+        }
+    }
+    Tcl_SetErrno(errno);
+    Tcl_ResetResult(interp);
+    Tcl_AppendResult(interp, "processIsForeground: ", (char *)Tcl_PosixError(interp), NULL);
+	return TCL_ERROR;
+}
+
 int Pextlib_Init(Tcl_Interp *interp)
 {
     if (Tcl_InitStubs(interp, "8.4", 0) == NULL)
@@ -1227,6 +1261,8 @@ int Pextlib_Init(Tcl_Interp *interp)
     Tcl_CreateObjCommand(interp, "fs_clone_capable", FSCloneCapableCmd, NULL, NULL);
     Tcl_CreateObjCommand(interp, "clonefile", ClonefileCmd, NULL, NULL);
 
+    Tcl_CreateObjCommand(interp, "processIsForeground", IsProcessForegroundCmd, NULL, NULL);
+
     if (Tcl_PkgProvide(interp, "Pextlib", "1.0") != TCL_OK)
         return TCL_ERROR;
 
diff --git a/src/port/port.tcl b/src/port/port.tcl
index 7a038b1b5..16892227d 100755
--- a/src/port/port.tcl
+++ b/src/port/port.tcl
@@ -4963,7 +4963,9 @@ namespace eval portclient::progress {
             }
             update {
                 lassign $args now total
-                if {[showProgress $now $total] eq "yes"} {
+                # Check on each update if we're still outputting to a tty - the user can
+                # have pushed us into the background.
+                if {[processIsForeground] && ([showProgress $now $total] eq "yes")} {
                     set barPrefix "      "
                     set barPrefixLen [string length $barPrefix]
                     if {$total != 0} {
@@ -4975,11 +4977,13 @@ namespace eval portclient::progress {
             }
             intermission -
             finish {
-                # erase to start of line
-                ::term::ansi::send::esolch stderr
-                # return cursor to start of line
-                puts -nonewline stderr "\r"
-                flush stderr
+                if {[processIsForeground]} {
+                    # erase to start of line
+                    ::term::ansi::send::esolch stderr
+                    # return cursor to start of line
+                    puts -nonewline stderr "\r"
+                    flush stderr
+                }
             }
         }
 
@@ -5011,7 +5015,9 @@ namespace eval portclient::progress {
             }
             update {
                 lassign $args type total now speed
-                if {[showProgress $now $total] eq "yes"} {
+                # Check on each update if we're still outputting to a tty - the user can
+                # have pushed us into the background.
+                if {[processIsForeground] && ([showProgress $now $total] eq "yes")} {
                     set barPrefix "      "
                     set barPrefixLen [string length $barPrefix]
                     if {$total != 0} {
@@ -5030,11 +5036,13 @@ namespace eval portclient::progress {
                 }
             }
             finish {
-                # erase to start of line
-                ::term::ansi::send::esolch stderr
-                # return cursor to start of line
-                puts -nonewline stderr "\r"
-                flush stderr
+                if {[processIsForeground]} {
+                    # erase to start of line
+                    ::term::ansi::send::esolch stderr
+                    # return cursor to start of line
+                    puts -nonewline stderr "\r"
+                    flush stderr
+                }
             }
         }
 
diff --git a/src/port1.0/portprogress.tcl b/src/port1.0/portprogress.tcl
index f0165e73b..a60034455 100644
--- a/src/port1.0/portprogress.tcl
+++ b/src/port1.0/portprogress.tcl
@@ -106,7 +106,8 @@ proc portprogress::target_progress_callback {event} {
                 }
             }
 
-            if {${determinate_match} || ${indeterminate}} {
+            # only show progress when there is some to show.
+            if {${determinate_match} && !${indeterminate}} {
                 ui_progress_generic update ${cur} ${total}
             }
         }
