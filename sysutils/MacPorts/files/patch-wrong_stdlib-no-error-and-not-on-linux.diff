commit f122d3cd574b6f932c0bf533532d9c4ae42d0b45
Author: bertin <macportsuser@macports.org>
Date:   Thu May 22 23:41:37 2025 +0200

    /opt/local/site-ports/sysutils/MacPorts/files/patch-wrong_stdlib-no-error-and-not-on-linux.diff

diff --git a/src/macports1.0/macports.tcl b/src/macports1.0/macports.tcl
index 9ab7e807e..e7b2c8035 100644
--- a/src/macports1.0/macports.tcl
+++ b/src/macports1.0/macports.tcl
@@ -5973,6 +5973,11 @@ proc macports::revupgrade_update_binary {fancy_output {revupgrade_progress ""}}
 # @param revupgrade_progress
 #        Progress display callback name
 proc macports::revupgrade_update_cxx_stdlib {fancy_output {revupgrade_progress ""}} {
+    global macports::os_platform
+    if {$macports::os_platform ne "darwin"} {
+        ui_debug "Skipping C++ stdlib checks on $macports::os_platform"
+        return
+    }
     set maybe_cxx_ports [registry::entry search state installed cxx_stdlib -null]
     set maybe_cxx_len [llength $maybe_cxx_ports]
     if {$maybe_cxx_len > 0} {
@@ -6295,16 +6300,22 @@ proc macports::revupgrade_scanandrebuild {broken_port_counts_name options} {
         }
 
         # check for mismatched cxx_stdlib
-        if {${cxx_stdlib} eq "libc++"} {
-            set wrong_stdlib libstdc++
+        if {$macports::os_platform eq "darwin"} {
+            ui_debug "Checking for erroneous use of $wrong_stdlib"
+            if {${cxx_stdlib} eq "libc++"} {
+                set wrong_stdlib libstdc++
+            } else {
+                set wrong_stdlib libc++
+            }
+            set broken_cxx_ports [registry::entry search state installed cxx_stdlib_overridden 0 cxx_stdlib $wrong_stdlib]
+            foreach cxx_port $broken_cxx_ports {
+                ui_warn "[$cxx_port name] is using $wrong_stdlib (this installation is configured to use ${cxx_stdlib})"
+            }
+            set broken_ports [lsort -unique [concat $broken_ports $broken_cxx_ports]]
         } else {
-            set wrong_stdlib libc++
-        }
-        set broken_cxx_ports [registry::entry search state installed cxx_stdlib_overridden 0 cxx_stdlib $wrong_stdlib]
-        foreach cxx_port $broken_cxx_ports {
-            ui_info "[$cxx_port name] is using $wrong_stdlib (this installation is configured to use ${cxx_stdlib})"
+            # just using a different cxx_stdlib isn't necessarily an error if it works!
+            set broken_ports [lsort -unique [concat $broken_ports]]
         }
-        set broken_ports [lsort -unique [concat $broken_ports $broken_cxx_ports]]
 
         if {[llength $broken_ports] == 0} {
             ui_msg "$ui_prefix No broken ports found."
