commit 1be695ba3b5a464ea5cf43c656ed205b12a3e2be
Author: bertin <macportsuser@macports.org>
Date:   Fri May 23 00:14:07 2025 +0200

    /opt/local/site-ports/sysutils/MacPorts/files/patch-command_exec-use-system-w-syntax.diff

diff --git a/src/port1.0/.portconfigure.tcl.swp b/src/port1.0/.portconfigure.tcl.swp
new file mode 100644
index 000000000..6958275bf
Binary files /dev/null and b/src/port1.0/.portconfigure.tcl.swp differ
diff --git a/src/port1.0/portutil.tcl b/src/port1.0/portutil.tcl
index fafc74297..f593e6579 100644
--- a/src/port1.0/portutil.tcl
+++ b/src/port1.0/portutil.tcl
@@ -353,7 +353,8 @@ proc command_string {command} {
     global ${command}.dir ${command}.pre_args ${command}.args ${command}.post_args ${command}.cmd
 
     if {[info exists ${command}.dir]} {
-        append cmdstring "cd \"[set ${command}.dir]\" &&"
+        ui_debug "## not prepending \"cd ${command}.dir &&\" to command line!"
+#         append cmdstring "cd \"[set ${command}.dir]\" &&"
     }
 
     if {[info exists ${command}.cmd]} {
@@ -479,6 +480,16 @@ proc command_exec {args} {
 
     # Get the command string.
     set cmdstring [command_string ${command}]
+    global ${command}.dir
+    if {[info exists ${command}.dir]} {
+        # `command_string` is overriden in the muniversal-1.1 PG which cannot know how
+        # the workdir change is handled here. Let it prepend the explicit `cd /x/y &&` expression
+        # if it wants, and then remove it here.
+        set cmdstring [string map [list "cd \"[set ${command}.dir]\" && " ""] ${cmdstring}]
+        set workdir "-W \"[set ${command}.dir]\""
+    } else {
+        set workdir ""
+    }
 
     # Call this command.
     # TODO: move that to the system native call?
@@ -489,7 +500,7 @@ proc command_exec {args} {
     # Call the command.
     set fullcmdstring "$command_prefix $cmdstring $command_suffix"
     ui_debug "Executing: $fullcmdstring"
-    set code [catch {system {*}$notty {*}$callback {*}$nice $fullcmdstring} result]
+    set code [catch {system {*}$workdir {*}$notty {*}$callback {*}$nice $fullcmdstring} result]
     # Save variables in order to re-throw the same error code.
     set errcode $::errorCode
     set errinfo $::errorInfo
