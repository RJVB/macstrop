export a function that provides the current logfile name and one that flushes it

This allows ports to extract up-to-date information from the logfile, e.g. to save
the configure log without having to redirect output from $configure.cmd .

diff --git a/src/macports1.0/macports.tcl b/src/macports1.0/macports.tcl
index c5a6f9e47..8e4044f81 100644
--- a/src/macports1.0/macports.tcl
+++ b/src/macports1.0/macports.tcl
@@ -1511,6 +1594,9 @@ proc macports::worker_init {workername portpath porturl portbuildpath options va
     $workername alias _portnameactive _portnameactive
     $workername alias get_actual_cxx_stdlib macports::get_actual_cxx_stdlib
     $workername alias shellescape macports::shellescape
+    ## RJVB
+    $workername alias get_logfile macports::get_logfile
+    $workername alias flush_logfile macports::flush_logfile
 
     # New Registry/Receipts stuff
     $workername alias registry_new registry::new_entry
@@ -5684,6 +5823,24 @@ proc macports::shellescape {arg} {
     return [regsub -all -- {[^A-Za-z0-9.:@%/+=_-]} $arg {\\&}]
 }
 
+## RJVB
+# return the logfile name, or an empty string
+proc macports::get_logfile {} {
+	if {[info exists ::debuglogname]} {
+		return $::debuglogname
+	} else {
+		return ""
+	}
+}
+proc macports::flush_logfile {} {
+	if {[info exists ::debuglog]} {
+		flush $::debuglog
+		return yes
+	} else {
+		return no
+	}
+}
+
 ##
 # Given a list of maintainers as recorded in a Portfile, return a list of lists
 # in [key value ...] format describing all maintainers. Valid keys are 'email'
