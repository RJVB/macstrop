commit 4ed15075c4cbf1607187fd2ce20123e1de51ec64
Author: Ren√© Bertin <rjvbertin@gmail.com>
Date:   Thu May 30 13:59:59 2024 +0200

    patch-wrong_stdlib-no-error-and-not-on-linux.diff

diff --git a/src/macports1.0/macports.tcl b/src/macports1.0/macports.tcl
index 115d9a72d..df2553e4a 100644
--- a/src/macports1.0/macports.tcl
+++ b/src/macports1.0/macports.tcl
@@ -5047,35 +5047,40 @@ proc macports::revupgrade_update_binary {fancy_output {revupgrade_progress ""}}
 # @param revupgrade_progress
 #        Progress display callback name
 proc macports::revupgrade_update_cxx_stdlib {fancy_output {revupgrade_progress ""}} {
-    set maybe_cxx_ports [registry::entry search state installed cxx_stdlib -null]
-    set maybe_cxx_len [llength $maybe_cxx_ports]
-    if {$maybe_cxx_len > 0} {
-        ui_msg "$macports::ui_prefix Updating database of C++ stdlib usage"
-        set i 1
-        if {$fancy_output} {
-            $revupgrade_progress start
-        }
-        foreach maybe_port $maybe_cxx_ports {
-            registry::write {
-                if {$fancy_output} {
-                    $revupgrade_progress update $i $maybe_cxx_len
-                }
-                incr i
-                set binary_files {}
-                foreach filehandle [registry::file search id [$maybe_port id] binary 1] {
-                    lappend binary_files [$filehandle actual_path]
-                }
-                $maybe_port cxx_stdlib [get_actual_cxx_stdlib $binary_files]
-                if {[catch {$maybe_port cxx_stdlib_overridden}]} {
-                    # can't tell after the fact, assume not overridden
-                    $maybe_port cxx_stdlib_overridden 0
+    global macports::os_platform
+    if {$macports::os_platform eq "darwin"} {
+        set maybe_cxx_ports [registry::entry search state installed cxx_stdlib -null]
+        set maybe_cxx_len [llength $maybe_cxx_ports]
+        if {$maybe_cxx_len > 0} {
+            ui_msg "$macports::ui_prefix Updating database of C++ stdlib usage"
+            set i 1
+            if {$fancy_output} {
+                $revupgrade_progress start
+            }
+            foreach maybe_port $maybe_cxx_ports {
+                registry::write {
+                    if {$fancy_output} {
+                        $revupgrade_progress update $i $maybe_cxx_len
+                    }
+                    incr i
+                    set binary_files {}
+                    foreach filehandle [registry::file search id [$maybe_port id] binary 1] {
+                        lappend binary_files [$filehandle actual_path]
+                    }
+                    $maybe_port cxx_stdlib [get_actual_cxx_stdlib $binary_files]
+                    if {[catch {$maybe_port cxx_stdlib_overridden}]} {
+                        # can't tell after the fact, assume not overridden
+                        $maybe_port cxx_stdlib_overridden 0
+                    }
                 }
+                #registry::entry close $maybe_port
+            }
+            if {$fancy_output} {
+                $revupgrade_progress finish
             }
-            #registry::entry close $maybe_port
-        }
-        if {$fancy_output} {
-            $revupgrade_progress finish
         }
+    } else {
+        ui_debug "Skipping C++ stdlib checks on $macports::os_platform"
     }
 }
 
@@ -5349,16 +5354,22 @@ proc macports::revupgrade_scanandrebuild {broken_port_counts_name opts} {
         }
 
         # check for mismatched cxx_stdlib
-        if {${macports::cxx_stdlib} eq "libc++"} {
-            set wrong_stdlib libstdc++
+        if {$macports::os_platform eq "darwin"} {
+            ui_debug "Checking for erroneous use of $wrong_stdlib"
+            if {${macports::cxx_stdlib} eq "libc++"} {
+                set wrong_stdlib libstdc++
+            } else {
+                set wrong_stdlib libc++
+            }
+            set broken_cxx_ports [registry::entry search state installed cxx_stdlib_overridden 0 cxx_stdlib $wrong_stdlib]
+            foreach cxx_port $broken_cxx_ports {
+                ui_warn "[$cxx_port name] is using $wrong_stdlib (this installation is configured to use ${macports::cxx_stdlib})"
+            }
+            set broken_ports [lsort -unique [concat $broken_ports $broken_cxx_ports]]
         } else {
-            set wrong_stdlib libc++
-        }
-        set broken_cxx_ports [registry::entry search state installed cxx_stdlib_overridden 0 cxx_stdlib $wrong_stdlib]
-        foreach cxx_port $broken_cxx_ports {
-            ui_info "[$cxx_port name] is using $wrong_stdlib (this installation is configured to use ${macports::cxx_stdlib})"
+            # just using a different cxx_stdlib isn't necessarily an error if it works!
+            set broken_ports [lsort -unique [concat $broken_ports]]
         }
-        set broken_ports [lsort -unique [concat $broken_ports $broken_cxx_ports]]
 
         if {[llength $broken_ports] == 0} {
             ui_msg "$macports::ui_prefix No broken ports found."
