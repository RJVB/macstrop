diff --git a/document-portal/document-portal-fuse.c b/document-portal/document-portal-fuse.c
index ad8f39a..03e2b72 100644
--- a/document-portal/document-portal-fuse.c
+++ b/document-portal/document-portal-fuse.c
@@ -14,7 +14,25 @@
 #include <glib/gprintf.h>
 #include <gio/gio.h>
 #include <pthread.h>
+
+#ifdef linux
 #include <sys/statfs.h>
+#else
+#include <sys/mount.h>
+#include <sys/xattr.h>
+#define O_PATH 0
+#define O_DIRECT 0
+#define O_LARGEFILE 0
+#define O_NOATIME 0
+#define O_TMPFILE 0
+#define AT_EMPTY_PATH 0
+
+#define   setxattr(A, B, C, D, E) setxattr(A, B, C, D, E, 0)
+#define   getxattr(A, B, C, D) getxattr(A, B, C, D, 0, 0)
+#define   listxattr(A, B, C) listxattr(A, B, C, 0)
+#define   removexattr(A, B) removexattr(A, B, 0)
+#endif
+
 #include <sys/types.h>
 #include <sys/xattr.h>
 #include <sys/time.h>
@@ -1421,12 +1439,20 @@ xdp_fuse_setattr (fuse_req_t             req,
       if (to_set & FUSE_SET_ATTR_ATIME_NOW)
         times[0].tv_nsec = UTIME_NOW;
       else if (to_set & FUSE_SET_ATTR_ATIME)
+#ifdef linux
         times[0] = attr->st_atim;
+#else
+        times[0] = attr->st_atimespec;
+#endif
 
       if (to_set & FUSE_SET_ATTR_MTIME_NOW)
         times[1].tv_nsec = UTIME_NOW;
       else if (to_set & FUSE_SET_ATTR_MTIME)
+#ifdef linux
         times[1] = attr->st_mtim;
+#else
+        times[0] = attr->st_mtimespec;
+#endif
 
       if (inode->physical)
         {
@@ -1965,7 +1991,18 @@ xdp_fuse_fallocate (fuse_req_t req,
 
   g_debug ("FALLOCATE %lx", ino);
 
+#ifdef __APPLE__
+  // borrowed from an old osxfuse implementation
+  fstore_t fstore;
+
+  fstore.fst_flags = 0;
+  fstore.fst_offset = offset;
+  fstore.fst_length = length;
+
+  res = fcntl(file->fd, F_PREALLOCATE, &fstore);
+#else
   res = fallocate (file->fd, mode, offset, length);
+#endif
 
   if (res == 0)
     xdp_reply_err (op, req, 0);
diff --git a/document-portal/document-portal.c b/document-portal/document-portal.c
index 04c4b8d..debecff 100644
--- a/document-portal/document-portal.c
+++ b/document-portal/document-portal.c
@@ -21,7 +21,11 @@
 #include "file-transfer.h"
 #include "document-portal.h"
 
+#ifdef linux
 #include <sys/eventfd.h>
+#else
+#define O_PATH 0
+#endif
 
 #define TABLE_NAME "documents"
 
diff --git a/document-portal/file-transfer.c b/document-portal/file-transfer.c
index 2f5087d..e0bb372 100644
--- a/document-portal/file-transfer.c
+++ b/document-portal/file-transfer.c
@@ -41,6 +41,10 @@
 #include "document-portal.h"
 #include "document-portal-fuse.h"
 
+#ifndef linux
+#define O_PATH 0
+#endif
+
 static XdpDbusFileTransfer *file_transfer;
 
 typedef struct
diff --git a/document-portal/permission-db.c b/document-portal/permission-db.c
index 69db267..84e3572 100644
--- a/document-portal/permission-db.c
+++ b/document-portal/permission-db.c
@@ -25,7 +25,11 @@
 #include <fcntl.h>
 #include <stdio.h>
 #include <stdlib.h>
+#ifdef linux
 #include <sys/statfs.h>
+#else
+#include <sys/mount.h>
+#endif
 
 #include "permission-db.h"
 #include "gvdb/gvdb-reader.h"
diff --git a/src/documents.c b/src/documents.c
index 2488838..d470990 100644
--- a/src/documents.c
+++ b/src/documents.c
@@ -37,6 +37,10 @@
 static XdpDocuments *documents = NULL;
 static char *documents_mountpoint = NULL;
 
+#ifndef linux
+#define O_PATH 0
+#endif
+
 void
 init_document_proxy (GDBusConnection *connection)
 {
diff --git a/src/xdp-utils.c b/src/xdp-utils.c
index 9b8607b..018fc2e 100644
--- a/src/xdp-utils.c
+++ b/src/xdp-utils.c
@@ -29,7 +29,11 @@
 #include <fcntl.h>
 #include <errno.h>
 #include <stdio.h>
+#ifdef linux
 #include <sys/vfs.h>
+#else
+#include <sys/mount.h>
+#endif
 
 #include <gio/gdesktopappinfo.h>
 
@@ -638,6 +642,7 @@ xdp_get_app_info_from_pid (pid_t pid,
   g_autoptr(XdpAppInfo) app_info = NULL;
   g_autoptr(GError) local_error = NULL;
 
+#ifdef linux
   app_info = parse_app_info_from_flatpak_info (pid, &local_error);
   if (app_info == NULL && local_error)
     {
@@ -654,6 +659,7 @@ xdp_get_app_info_from_pid (pid_t pid,
           return NULL;
         }
     }
+#endif
 
   if (app_info == NULL)
     app_info = xdp_app_info_new_host ();
@@ -689,6 +695,7 @@ xdp_connection_lookup_app_info_sync (GDBusConnection       *connection,
   g_autoptr(XdpAppInfo) app_info = NULL;
   GVariant *body;
   guint32 pid = 0;
+  gboolean pidset = FALSE;
 
   app_info = lookup_cached_app_info_by_sender (sender);
   if (app_info)
@@ -711,12 +718,43 @@ xdp_connection_lookup_app_info_sync (GDBusConnection       *connection,
 
   if (g_dbus_message_get_message_type (reply) == G_DBUS_MESSAGE_TYPE_ERROR)
     {
-      g_set_error (error, G_IO_ERROR, G_IO_ERROR_FAILED, "Can't find peer app id");
-      return NULL;
+      g_autoptr(GDBusMessage) reply2 = NULL;
+	 // let's see if we're running a KDE portal daemon that's been taught to tell its own PID
+      msg = g_dbus_message_new_method_call ("org.freedesktop.impl.portal.desktop.kde",
+                                            "/org/freedesktop/portal/desktop",
+                                            "org.freedesktop.impl.portal.daemon",
+                                            "getPId");
+      reply2 = g_dbus_connection_send_message_with_reply_sync (connection, msg,
+                                                              G_DBUS_SEND_MESSAGE_FLAGS_NONE,
+                                                              30000,
+                                                              NULL,
+                                                              cancellable,
+                                                              error);
+      if (reply2 && g_dbus_message_get_message_type (reply2) != G_DBUS_MESSAGE_TYPE_ERROR) {
+        GVariant *gpid = NULL;
+        body = g_dbus_message_get_body (reply2);
+        g_debug ("daemon response body: \"%s\" [%s]\n", g_variant_print(body, TRUE), g_variant_get_type_string(body));
+        gpid = g_variant_get_child_value(body, 0);
+        if (gpid) {
+          g_debug ("gpid: \"%s\" [%s]\n", g_variant_print(gpid, TRUE), g_variant_get_type_string(gpid));
+          g_variant_lookup(gpid, "pid", "i", &pid);
+          pidset = TRUE;
+          g_variant_unref(gpid);
+        }
+        g_debug ("Obtained daemon pid=%u ; reply2=%s\n", pid, g_dbus_message_print(reply2,2));
+      } else if (error) {
+        fprintf(stderr, "Error obtaining daemon pid also via org.freedesktop.impl.portal.daemon.getPId : %s\n", (*error)->message);
+      }
+      if (!pidset) {
+        g_set_error (error, G_IO_ERROR, G_IO_ERROR_FAILED, "Can't find peer app id");
+        return NULL;
+      }
     }
 
-  body = g_dbus_message_get_body (reply);
-  g_variant_get (body, "(u)", &pid);
+  if (!pidset) {
+    body = g_dbus_message_get_body (reply);
+    g_variant_get (body, "(u)", &pid);
+  }
 
   app_info = xdp_get_app_info_from_pid (pid, error);
   if (app_info == NULL)
@@ -1055,6 +1093,7 @@ xdp_app_info_get_path_for_fd (XdpAppInfo *app_info,
   if (path == NULL)
     return NULL;
 
+#ifdef O_PATH
   if ((fd_flags & O_PATH) == O_PATH)
     {
       int read_access_mode;
@@ -1104,6 +1143,7 @@ xdp_app_info_get_path_for_fd (XdpAppInfo *app_info,
         writable = TRUE;
     }
   else /* Regular file with no O_PATH */
+#endif
     {
       int accmode = fd_flags & O_ACCMODE;
 
diff --git a/tests/test-doc-portal.c b/tests/test-doc-portal.c
index f2f4c01..2a24e43 100644
--- a/tests/test-doc-portal.c
+++ b/tests/test-doc-portal.c
@@ -18,6 +18,10 @@
 #include "can-use-fuse.h"
 #include "utils.h"
 
+#ifndef linux
+#define O_PATH 0
+#endif
+
 char outdir[] = "/tmp/xdp-test-XXXXXX";
 
 char fuse_status_file[] = "/tmp/test-xdp-fuse-XXXXXX";
