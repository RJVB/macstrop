diff --git b/projects/libcxx/benchmarks/orig.CMakeLists.txt a/projects/libcxx/benchmarks/CMakeLists.txt
index 906ffa4..999dac6 100644
--- b/projects/libcxx/benchmarks/orig.CMakeLists.txt
+++ a/projects/libcxx/benchmarks/CMakeLists.txt
@@ -1,6 +1,17 @@
 include(ExternalProject)
 include(CheckCXXCompilerFlag)
 
+# build the benchmarks only with the native/default architecture
+# (the libraries built as external projects will be, leading to
+# link failures if the dependents are built as universal binaries).
+string(REPLACE "-arch x86_64" "" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})
+string(REPLACE "-arch i386" "" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})
+string(REPLACE "-arch arm64" "" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})
+set(CMAKE_OSX_ARCHITECTURES "")
+
+string(REPLACE "-L@PREFIX@/lib" "-v" CMAKE_EXE_LINKER_FLAGS ${CMAKE_EXE_LINKER_FLAGS})
+string(REPLACE "-Wl,-rpath,@PREFIX@/lib" "" CMAKE_EXE_LINKER_FLAGS ${CMAKE_EXE_LINKER_FLAGS})
+
 #==============================================================================
 # Build Google Benchmark for libc++
 #==============================================================================
@@ -156,8 +167,7 @@ function(add_benchmark_test name source_file)
           COMPILE_FLAGS "${BENCHMARK_TEST_LIBCXX_COMPILE_FLAGS}"
           LINK_FLAGS "${BENCHMARK_TEST_LIBCXX_LINK_FLAGS}")
   if (LIBCXX_BENCHMARK_NATIVE_STDLIB)
-    if (LIBCXX_BENCHMARK_NATIVE_STDLIB STREQUAL "libstdc++" AND NOT DEFINED LIBSTDCXX_FILESYSTEM_LIB
-        AND "${name}" STREQUAL "filesystem")
+    if ("${name}" STREQUAL "filesystem")
       return()
     endif()
     set(native_target ${name}_native)
@@ -168,7 +178,7 @@ function(add_benchmark_test name source_file)
     if (LIBCXX_BENCHMARK_NATIVE_STDLIB STREQUAL "libstdc++")
       target_link_libraries(${native_target} ${LIBSTDCXX_FILESYSTEM_LIB})
     elseif (LIBCXX_BENCHMARK_NATIVE_STDLIB STREQUAL "libc++")
-      target_link_libraries(${native_target} -lc++fs -lc++experimental)
+      target_link_libraries(${native_target} "/usr/lib/libc++.dylib")
     endif()
     if (LIBCXX_HAS_PTHREAD_LIB)
       target_link_libraries(${native_target} -pthread)
