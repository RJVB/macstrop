diff --git a/hw/xquartz/X11Application.m b/hw/xquartz/X11Application.m
index 752ddc3f6..10c316fbb 100644
--- a/hw/xquartz/X11Application.m
+++ b/hw/xquartz/X11Application.m
@@ -735,9 +735,11 @@ create_thread(void *(*func)(void *), void *arg)
     pthread_attr_init(&attr);
     pthread_attr_setscope(&attr, PTHREAD_SCOPE_SYSTEM);
     pthread_attr_setdetachstate(&attr, PTHREAD_CREATE_DETACHED);
-    if (&pthread_attr_set_qos_class_np) {
+#if __has_builtin(__builtin_available) && defined(QOS_CLASS_USER_INTERACTIVE)
+    if (__builtin_available(macOS 10.10, *)) {
         pthread_attr_set_qos_class_np(&attr, QOS_CLASS_USER_INITIATED, 0);
     }
+#endif
     pthread_create(&tid, &attr, func, arg);
     pthread_attr_destroy(&attr);
 
diff --git a/hw/xquartz/darwinEvents.c b/hw/xquartz/darwinEvents.c
index 15c1bc5d8..c47f4bf53 100644
--- a/hw/xquartz/darwinEvents.c
+++ b/hw/xquartz/darwinEvents.c
@@ -129,9 +129,11 @@ create_thread(void *(*func)(void *), void *arg)
     pthread_attr_init(&attr);
     pthread_attr_setscope(&attr, PTHREAD_SCOPE_SYSTEM);
     pthread_attr_setdetachstate(&attr, PTHREAD_CREATE_DETACHED);
-    if (&pthread_attr_set_qos_class_np) {
+#if __has_builtin(__builtin_available) && defined(QOS_CLASS_USER_INTERACTIVE)
+    if (__builtin_available(macOS 10.10, *)) {
         pthread_attr_set_qos_class_np(&attr, QOS_CLASS_USER_INITIATED, 0);
     }
+#endif
     pthread_create(&tid, &attr, func, arg);
     pthread_attr_destroy(&attr);
 
diff --git a/hw/xquartz/quartzStartup.c b/hw/xquartz/quartzStartup.c
index 9137edb66..b4f636133 100644
--- a/hw/xquartz/quartzStartup.c
+++ b/hw/xquartz/quartzStartup.c
@@ -74,9 +74,11 @@ create_thread(void *func, void *arg)
     pthread_attr_init(&attr);
     pthread_attr_setscope(&attr, PTHREAD_SCOPE_SYSTEM);
     pthread_attr_setdetachstate(&attr, PTHREAD_CREATE_DETACHED);
-    if (&pthread_attr_set_qos_class_np) {
+#if __has_builtin(__builtin_available) && defined(QOS_CLASS_USER_INTERACTIVE)
+    if (__builtin_available(macOS 10.10, *)) {
         pthread_attr_set_qos_class_np(&attr, QOS_CLASS_USER_INTERACTIVE, 0);
     }
+#endif
     pthread_create(&tid, &attr, func, arg);
     pthread_attr_destroy(&attr);
 
diff --git a/os/inputthread.c b/os/inputthread.c
index bd0a8335f..0035dd480 100644
--- a/os/inputthread.c
+++ b/os/inputthread.c
@@ -479,8 +479,8 @@ InputThreadInit(void)
     if (pthread_attr_setscope(&attr, PTHREAD_SCOPE_SYSTEM) != 0)
         ErrorF("input-thread: error setting thread scope\n");
 
-#ifdef __APPLE__
-    if (&pthread_attr_set_qos_class_np) {
+#if __has_builtin(__builtin_available) && defined(QOS_CLASS_USER_INTERACTIVE)
+    if (__builtin_available(macOS 10.10, *)) {
         pthread_attr_set_qos_class_np(&attr, QOS_CLASS_USER_INTERACTIVE, 0);
     }
 #endif
