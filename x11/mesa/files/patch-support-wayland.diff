diff --git a/src/egl/drivers/dri2/egl_dri2.c b/src/egl/drivers/dri2/egl_dri2.c
index 6504204..8354259 100644
--- a/src/egl/drivers/dri2/egl_dri2.c
+++ b/src/egl/drivers/dri2/egl_dri2.c
@@ -2841,11 +2847,13 @@ dri2_bind_wayland_display_wl(_EGLDriver *drv, _EGLDisplay *disp,
    if (dri2_dpy->wl_server_drm)
            return EGL_FALSE;
 
+#ifndef __APPLE__
    if (drmGetCap(dri2_dpy->fd, DRM_CAP_PRIME, &cap) == 0 &&
        cap == (DRM_PRIME_CAP_IMPORT | DRM_PRIME_CAP_EXPORT) &&
        dri2_dpy->image->base.version >= 7 &&
        dri2_dpy->image->createImageFromFds != NULL)
       flags |= WAYLAND_DRM_PRIME;
+#endif
 
    dri2_dpy->wl_server_drm =
            wayland_drm_init(wl_dpy, dri2_dpy->device_name,
diff --git a/src/egl/drivers/dri2/platform_wayland.c b/src/egl/drivers/dri2/platform_wayland.c
index e647ed6..95caa8d 100644
--- a/src/egl/drivers/dri2/platform_wayland.c
+++ b/src/egl/drivers/dri2/platform_wayland.c
@@ -35,7 +35,9 @@
 #include <errno.h>
 #include <unistd.h>
 #include <fcntl.h>
+#ifndef __APPLE__
 #include <xf86drm.h>
+#endif
 #include <drm_fourcc.h>
 #include <sys/mman.h>
 
@@ -1163,6 +1165,7 @@ drm_handle_device(void *data, struct wl_drm *drm, const char *device)
       return;
    }
 
+#ifndef __APPLE__
    if (drmGetNodeTypeFromFd(dri2_dpy->fd) == DRM_NODE_RENDER) {
       dri2_dpy->authenticated = true;
    } else {
@@ -1176,6 +1179,9 @@ drm_handle_device(void *data, struct wl_drm *drm, const char *device)
       }
       wl_drm_authenticate(dri2_dpy->wl_drm, magic);
    }
+#else
+   dri2_dpy->authenticated = true;
+#endif
 }
 
 static void
@@ -1254,6 +1260,12 @@ registry_handle_global_drm(void *data, struct wl_registry *registry,
 {
    struct dri2_egl_display *dri2_dpy = data;
 
+//       _eglLog(_EGL_WARNING, "wayland-egl: %s interface=%s",
+//               __FUNCTION__, interface);
+#ifdef __APPLE__
+      dri2_dpy->wl_drm = NULL;
+      return;
+#endif
    if (strcmp(interface, "wl_drm") == 0) {
       dri2_dpy->wl_drm =
          wl_registry_bind(registry, name, &wl_drm_interface, MIN2(version, 2));
@@ -1417,6 +1429,8 @@ dri2_initialize_wayland_drm(_EGLDriver *drv, _EGLDisplay *disp)
    } else {
       dri2_dpy->wl_dpy = disp->PlatformDisplay;
    }
+//          _eglLog(_EGL_WARNING, "dri2_dpy[%p]->wl_dpy=%p",
+//                  dri2_dpy, dri2_dpy->wl_dpy);
 
    dri2_dpy->wl_modifiers =
       calloc(ARRAY_SIZE(dri2_wl_visuals), sizeof(*dri2_dpy->wl_modifiers));
@@ -1475,7 +1489,11 @@ dri2_initialize_wayland_drm(_EGLDriver *drv, _EGLDisplay *disp)
     * will return a render-node when the requested gpu is different
     * to the server, but also if the client asks for the same gpu than
     * the server by requesting its pci-id */
+#ifndef __APPLE__
    dri2_dpy->is_render_node = drmGetNodeTypeFromFd(dri2_dpy->fd) == DRM_NODE_RENDER;
+#else
+   dri2_dpy->is_render_node = 0;
+#endif
 
    dri2_dpy->driver_name = loader_get_driver_for_fd(dri2_dpy->fd);
    if (dri2_dpy->driver_name == NULL) {
