diff --git a/src/egl/drivers/dri2/egl_dri2.c b/src/egl/drivers/dri2/egl_dri2.c
index 6504204..ef716df 100644
--- a/src/egl/drivers/dri2/egl_dri2.c
+++ b/src/egl/drivers/dri2/egl_dri2.c
@@ -66,6 +66,12 @@
 #include "util/u_vector.h"
 #include "mapi/glapi/glapi.h"
 
+#ifdef __MACH__
+#include <mach/mach.h>
+#include <mach/mach_time.h>
+#include <sys/sysctl.h>
+#endif
+
 #define NUM_ATTRIBS 12
 
 static void
@@ -3003,8 +3009,10 @@ dri2_create_sync(_EGLDriver *drv, _EGLDisplay *dpy,
          return NULL;
       }
 
+#ifndef __MACH__
       /* change clock attribute to CLOCK_MONOTONIC */
       ret = pthread_condattr_setclock(&attr, CLOCK_MONOTONIC);
+#endif
 
       if (ret) {
          _eglError(EGL_BAD_ACCESS, "eglCreateSyncKHR");
@@ -3161,9 +3169,21 @@ dri2_client_wait_sync(_EGLDriver *drv, _EGLDisplay *dpy, _EGLSync *sync,
             struct timespec current;
             struct timespec expire;
 
+#ifndef __MACH__
             /* We override the clock to monotonic when creating the condition
              * variable. */
             clock_gettime(CLOCK_MONOTONIC, &current);
+#else
+          static int calibrated = 0;
+          static mach_timebase_info_data_t sTimebaseInfo;
+          if (!calibrated) {
+              mach_timebase_info(&sTimebaseInfo);
+              calibrated = 1;
+          }
+          unsigned long long now = mach_absolute_time() * sTimebaseInfo.numer / sTimebaseInfo.denom;
+          current.tv_sec = now / 1000000000;
+          current.tv_nsec = now % 1000000000;
+#endif
 
             /* calculating when to expire */
             expire.tv_nsec = timeout % 1000000000L;
diff --git a/src/egl/main/eglglobals.c b/src/egl/main/eglglobals.c
index 2fc64bc..ff17ff8 100644
--- a/src/egl/main/eglglobals.c
+++ b/src/egl/main/eglglobals.c
@@ -175,7 +175,11 @@ _eglPointerIsDereferencable(void *p)
       _eglLog(_EGL_DEBUG, "mincore failed: %m");
       return EGL_FALSE;
    }
-
+#ifdef __APPLE__
+    // on Darwin we do need to check the residency info, otherwise even
+    // clearly bogus addresses like 0x3 will pass the test!
+    return valid != 0;
+#endif
    /* mincore() returns 0 on success, and -1 on failure.  The last parameter
     * is a vector of bytes with one entry for each page queried.  mincore
     * returns page residency information in the first bit of each byte in the
diff --git a/src/egl/main/egldriver.c b/src/egl/main/egldriver.c
index b20652e..c64feab 100644
--- a/src/egl/main/egldriver.c
+++ b/src/egl/main/egldriver.c
@@ -90,7 +90,11 @@ _eglMatchDriver(_EGLDisplay *dpy)
 
    /* set options */
    dpy->Options.ForceSoftware =
+#ifdef __APPLE__
+      env_var_as_boolean("LIBGL_ALWAYS_SOFTWARE", true);
+#else
       env_var_as_boolean("LIBGL_ALWAYS_SOFTWARE", false);
+#endif
 
    best_drv = _eglMatchAndInitialize(dpy);
    if (!best_drv && !dpy->Options.ForceSoftware) {
