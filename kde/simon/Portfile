# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0

set portName        simon
name                ${portName}
PortGroup           kde4   1.1
PortGroup           active_variants 1.1

categories          kde kde4
maintainers         gmail.com:rjvbertin 
license             GPL-2+
description         KDE speech recognition program.
long_description    Simon is an open source speech recognition program that can replace \
                    your mouse and keyboard. The system is designed to be as flexible as \
                    possible and will work with any language or dialect.
homepage            http://simon.kde.org

platforms           darwin linux

subport ${portName}-devel {
    description     ${description} This port follows git/master.
    long_description \
                    ${long_description} This port follows git/master.
}

if {${subport} eq "${portName}-devel"} {
    conflicts-append \
                    ${portName}
    # v0.4.1-150-gd4c14e63
    github.setup    kde simon d4c14e63a37220f5def810392acb0b2660ce4a0f
    fetch.type      git
    name            ${portName}-devel
    version         0.4.1.150
    worksrcdir      ${name}-git
    distname        ${name}-git
} else {
    conflicts-append \
                    ${portName}-devel
    description     ${description} This port doesn't have a release version yet.
    long_description \
                    ${long_description} This port doesn't have a release version yet.
    version         0
    master_sites    kde:stable/${version}/src/
    use_xz          yes
    pre-fetch {
        ui_error "This port doesn't have a release version yet."
        return -code error "This port doesn't have a release version yet."
    }
    checksums       rmd160  0 \
                    sha256  0
}


#Binaries do not link to openssl, nor use the ssl backend of kdelibs4
license_noconflict  openssl

proc kde4.add_app_wrapper {wrappername {bundlename ""} {bundleexec ""} {appdir ""}} {
    global applications_dir destroot prefix os.platform subport
    if {${appdir} eq ""} {
        set appdir ${applications_dir}/KDE4
    }
    xinstall -m 755 -d ${destroot}${prefix}/bin
    if {![catch {set fd [open "${destroot}${prefix}/bin/${wrappername}" "w"]} err]} {
        puts ${fd} "#!/bin/sh\n\
            if \[ -r ~/.kde4.env \] ;then\n\
            \t. ~/.kde4.env\n\
            else\n\
            \texport KDE_SESSION_VERSION=4\n\
            fi"
        if {${bundlename} eq ""} {
            set bundlename ${wrappername}
        }
        if {${bundleexec} eq ""} {
            set bundleexec ${bundlename}
        }
        puts ${fd} "exec \"${appdir}/${bundlename}.app/Contents/MacOS/${bundleexec}\" \"\$\@\""
        close ${fd}
        system "chmod 755 ${destroot}${prefix}/bin/${wrappername}"
    } else {
        ui_error "Failed to create \"${destroot}${prefix}/bin/${wrappername}\" : ${err}"
        return -code error ${err}
    }
}

platform darwin {
    depends_lib-append \
                    port:kdelibs4 \
                    path:lib/libakonadi-kde.dylib:kdepimlibs4 \
                    port:qwt61 \
                    port:pocketsphinx
    if {![catch {set qwtqt4 [active_variants qwt61 qt4]} err]} {
        if {!${qwtqt4}} {
            long_description-append "This port needs the +qt4 variant of port:qwt61."
            pre-fetch {
                ui_error "This port needs the +qt4 variant of port:qwt61."
                return -code error "reinstall or activate port:qwt61 with the +qt4 variant"
            }
        }
    }
    post-destroot {
        xinstall -m 755 -d ${destroot}${applications_dir}/KDE4
        foreach J {simon afaras sam ssc} {
            file rename ${destroot}${prefix}/bin/${J}.app ${destroot}${applications_dir}/KDE4/
            kde4.add_app_wrapper ${J}
        }
    }
}
depends_lib-append  port:libsamplerate
platform linux {
    depends_lib-delete \
                    path:lib/libQtCore.so.4:qt4-x11 \
                    port:phonon
    depends_build-delete \
                    port:automoc
    # we install to /usr!!
    cmake.install_prefix \
                    /usr
    destroot.violate_mtree \
                    yes
}

patchfiles-append   patch-support-pocketsphinx08.diff \
                    patch-nogui-apps.diff

if {![variant_isset docs]} {
    patchfiles-append   patch-CMakeLists.txt.diff
}

configure.args-append \
                    -DWITH_OpenCV=OFF

livecheck.type      none
